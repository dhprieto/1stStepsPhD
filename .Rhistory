summary(anova_pareado_Grasa)
anova_pareado_IRCV <- aov(formula = IRCV ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaAntDupl)
summary(anova_pareado_IRCV)
summary(anova_pareado_Bpmin)
anova_pareado_Bpmax <- aov(formula = Bpmax ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaAntDupl)
anova_pareado_Bpmin <- aov(formula = Bpmin ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaAntDupl)
summary(anova_pareado_Bpmin)
anova_pareado_Bpmax <- aov(formula = Bpmax ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaAntDupl)
summary(anova_pareado_Bpmax)
anova_pareado_Frec <- aov(formula = Frec ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaAntDupl)
summary(anova_pareado_Frec)
counts <- data.frame(table(plasmaFlavFactors$numVol))
plasmaFlavDupl <- plasmaFlavFactors[plasmaFlavFactors$numVol %in% counts$Var1[counts$Freq > 1],]
### Datos antro ----
anova_pareado_Peso <- aov(formula = Peso ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlavDupl)
summary(anova_pareado_Peso)
anova_pareado_IMC <- aov(formula = IMC ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlavDupl)
summary(anova_pareado_IMC)
anova_pareado_Grasa <- aov(formula = Grasa ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlavDupl)
summary(anova_pareado_Grasa)
anova_pareado_IRCV <- aov(formula = IRCV ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlavDupl)
summary(anova_pareado_IRCV)
anova_pareado_Bpmin <- aov(formula = Bpmin ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlavDupl)
summary(anova_pareado_Bpmin)
anova_pareado_Bpmax <- aov(formula = Bpmax ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlavDupl)
summary(anova_pareado_Bpmax)
anova_pareado_Frec <- aov(formula = Frec ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = orinaFlavDupl)
summary(anova_pareado_Frec)
counts <- data.frame(table(plasmaFlav_adjustedFactors$numVol))
plasmaFlav_adjustedDupl <- plasmaFlav_adjustedFactors[plasmaFlav_adjustedFactors$numVol %in% counts$Var1[counts$Freq > 1],]
anova_pareado_Eriodictiol..E. <- aov(formula = Eriodictiol..E. ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlav_adjustedDupl)
summary(anova_pareado_Eriodictiol..E.)
anova_pareado_ES <- aov(formula = ES ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlav_adjustedDupl)
summary(anova_pareado_ES)
anova_pareado_Peso <- aov(formula = Peso ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlav_adjustedDupl)
summary(anova_pareado_Peso)
anova_pareado_IMC <- aov(formula = IMC ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlav_adjustedDupl)
summary(anova_pareado_IMC)
anova_pareado_Grasa <- aov(formula = Grasa ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlav_adjustedDupl)
summary(anova_pareado_Grasa)
anova_pareado_IRCV <- aov(formula = IRCV ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlav_adjustedDupl)
summary(anova_pareado_IRCV)
anova_pareado_Bpmin <- aov(formula = Bpmin ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlav_adjustedDupl)
summary(anova_pareado_Bpmin)
anova_pareado_Bpmax <- aov(formula = Bpmax ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlav_adjustedDupl)
summary(anova_pareado_Bpmax)
<-
anova_pareado_Frec <- aov(formula = Frec ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = plasmaFlav_adjustedDupl)
summary(anova_pareado_Frec)
preprocessTablas <- function(root, nombreTabla) {
# Getting data ready
rootTabla <- paste0(root, nombreTabla)
tabla <- read.csv(rootTabla)
# Make factors of categorical features
tabla$Endulzante <- factor(tabla$Endulzante, levels = c("SA", "ST", "SU"))
tabla$Sexo <- factor(tabla$Sexo, levels = c("HOMBRE", "MUJER"))
tabla$Tiempo <- factor(tabla$Tiempo, levels = c("0", "Final"))
tabla$numVol <- factor(tabla$numVol)
for (i in seq(1:nrow(tabla))){
if (tabla$Tiempo[i] == "0"){
tabla$Peso[i] = tabla$Peso.inicial[i]
tabla$IMC[i] = tabla$IMC.Inicial[i]
tabla$Grasa[i] = tabla$Grasa.inicial[i]
tabla$IRCV[i] = tabla$IRCV.inicial[i]
tabla$Bpmin[i] = tabla$Bpmin.inicial[i]
tabla$Bpmax[i] = tabla$Bpmax.inicial[i]
tabla$Frec[i] = tabla$Frec.inicial[i]
}
else if (tabla$Tiempo[i] == "Final"){
tabla$Peso[i] = tabla$Peso.final[i]
tabla$IMC[i] = tabla$IMC.Final[i]
tabla$Grasa[i] = tabla$Grasa.final[i]
tabla$IRCV[i] = tabla$IRCV.Final[i]
tabla$Bpmin[i] = tabla$Bpmin.final[i]
tabla$Bpmax[i] = tabla$Bpmax.final[i]
tabla$Frec[i] = tabla$Frec.final[i]
}
}
# Removing of trivial redundant and useless features
set.A <- subset(tabla, select =-c(X.1, X, Peso.inicial, Peso.final, Delta.Peso, Talla, IMC.Inicial, IMC.Final,
Delta.IMC, Grasa.inicial, Grasa.final, Delta.Grasa, IRCV.Final, IRCV.inicial,
Bpmin.final, Bpmin.inicial, Bpmax.final, Bpmax.inicial, Frec.final, Frec.inicial))
# Only numerical features
set.A_num <- subset(set.A, select=-c(Endulzante, Sexo, Tiempo, numVol))
#Rescaling, can use "set.A_rescaled <- scale(set.A_num)" too
set.A_rescaled <- set.A_num %>% mutate_each_(list(~rescale(.) %>% as.vector),
vars = colnames(set.A_num))
set.A_factors <- cbind(set.A_rescaled, Endulzante = set.A$Endulzante,
Tiempo = set.A$Tiempo, Sexo = set.A$Sexo, numVol = set.A$numVol)
tabla_Tiempo <- subset(set.A_factors, select=-c(Endulzante, Sexo))
tabla_Tiempo0 <- subset(tabla_Tiempo, Tiempo == "0", select = -Tiempo)
tabla_TiempoF <- subset(tabla_Tiempo, Tiempo == "Final", select = -Tiempo)
tabla_Sexo <- subset(set.A_factors, select=-c(Endulzante, Tiempo))
tabla_SexoM <- subset(tabla_Sexo, Sexo == "HOMBRE", select = -Sexo)
tabla_SexoF <- subset(tabla_Sexo, Sexo == "MUJER", select = -Sexo)
tabla_Endulzante <- subset(set.A_factors, select=-c(Sexo, Tiempo))
tabla_EndulzanteSA <- subset(tabla_Endulzante, Endulzante == "SA", select = -Endulzante)
tabla_EndulzanteSU <- subset(tabla_Endulzante, Endulzante == "SU", select = -Endulzante)
tabla_EndulzanteST <- subset(tabla_Endulzante, Endulzante == "ST", select = -Endulzante)
tabla_0xM <- subset(set.A_factors, Tiempo == "0" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante))
tabla_0xF <- subset(set.A_factors, Tiempo == "0" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante))
tabla_FxM <- subset(set.A_factors, Tiempo == "Final" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante))
tabla_FxF <- subset(set.A_factors, Tiempo == "Final" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSAx0 <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSAxF <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSAx0 <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSAxF <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSTx0 <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSTxF <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="ST"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSTx0 <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSTxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSUx0 <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSUxF <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSUx0 <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSUxF <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
return(list(tablaFactors = set.A_factors, tablaNum = set.A_rescaled,
tabla_Tiempo = tabla_Tiempo, tabla_Tiempo0 = tabla_Tiempo0,
tabla_TiempoF = tabla_TiempoF,  tabla_Sexo=tabla_Sexo,
tabla_SexoM=tabla_SexoM, tabla_SexoF=tabla_SexoF,
tabla_Endulzante=tabla_Endulzante,
tabla_EndulzanteSA=tabla_EndulzanteSA,
tabla_EndulzanteSU=tabla_EndulzanteSU,
tabla_EndulzanteST=tabla_EndulzanteST,
tabla_0xM=tabla_0xM,tabla_0xF=tabla_0xF,
tabla_FxM=tabla_FxM, tabla_FxF=tabla_FxF,
tabla_MxSAx0=tabla_MxSAx0, tabla_MxSAxF=tabla_MxSAxF,
tabla_FxSAx0=tabla_FxSAx0, tabla_FxSAxF=tabla_FxSAxF,
tabla_MxSTx0=tabla_MxSTx0, tabla_MxSTxF=tabla_MxSTxF,
tabla_FxSTx0=tabla_FxSTx0, tabla_FxSTxF=tabla_FxSTxF,
tabla_MxSUx0=tabla_MxSUx0, tabla_MxSUxF=tabla_MxSUxF,
tabla_FxSUx0=tabla_FxSUx0, tabla_FxSUxF=tabla_FxSUxF))
}
checkCluster <- function(tabla){
nombreTabla <- deparse(quote(tabla))
set.A_rescaled <- tabla
# Validación de método de clustering
## Manual
datos_simulados <- map_df(set.A_rescaled,
.f = function(x){runif(n = length(x),
min = min(x),
max = max(x))
}
)
pca_datos_A      <- prcomp(set.A_rescaled)
pca_datos_simulados <- prcomp(datos_simulados)
p1 <- fviz_pca_ind(X = pca_datos_A,
geom = "point", title = paste("PCA - Datos ", nombreTabla),
pallete = "jco") +
theme_bw() + theme(legend.position = "bottom")
p2 <- fviz_pca_ind(X = pca_datos_simulados, geom = "point",
title = paste("PCA - datos simulados ",nombreTabla), pallete = "jco") +
theme_bw() + theme(legend.position = "bottom")
print(ggarrange(p1, p2), common.legend = TRUE)
dist_datos_A      <- get_dist(set.A_rescaled, method = "manhattan")
dist_datos_simulados <- get_dist(datos_simulados, method = "manhattan")
p7 <- fviz_dist(dist.obj = dist_datos_A, show_labels = FALSE) +
labs(title = paste("Datos ", nombreTabla)) + theme(legend.position = "bottom")
p8 <- fviz_dist(dist.obj = dist_datos_simulados, show_labels = FALSE) +
labs(title = paste("Datos simulados ", nombreTabla)) + theme(legend.position = "bottom")
print(ggarrange(p7, p8))
print(fviz_nbclust(set.A_rescaled, kmeans, method="wss"))
print(fviz_nbclust(x = set.A_rescaled, FUNcluster = pam, method = "wss", k.max = 15,
diss = get_dist(set.A_rescaled, method = "manhattan")))
}
pcaVarios<- function(tabla, nombreTabla){
#nombreTabla <- deparse(quote(tabla))
tabla_Tiempo <- subset(tabla, select=-c(Endulzante, Sexo, numVol))
tabla_Tiempo0 <- subset(tabla_Tiempo, Tiempo == "0", select = -Tiempo)
tabla_TiempoF <- subset(tabla_Tiempo, Tiempo == "Final", select = -Tiempo)
tabla_Sexo <- subset(tabla, select=-c(Endulzante, Tiempo, numVol))
tabla_SexoM <- subset(tabla_Sexo, Sexo == "HOMBRE", select = -Sexo)
tabla_SexoF <- subset(tabla_Sexo, Sexo == "MUJER", select = -Sexo)
tabla_Endulzante <- subset(tabla, select=-c(Sexo, Tiempo, numVol))
tabla_EndulzanteSA <- subset(tabla_Endulzante, Endulzante == "SA", select = -Endulzante)
tabla_EndulzanteSU <- subset(tabla_Endulzante, Endulzante == "SU", select = -Endulzante)
tabla_EndulzanteST <- subset(tabla_Endulzante, Endulzante == "ST", select = -Endulzante)
# PCA Tiempo
pca_datos_A <- PCA(tabla_Tiempo0, scale.unit = F)
print(fviz_contrib(pca_datos_A, choice="var", title = paste("Importancia variables dim 1 PCA Tiempo 0 ",
nombreTabla)))
print(fviz_contrib(pca_datos_A, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Tiempo 0 ",
nombreTabla)))
pca_datos_B <- PCA(tabla_TiempoF)
print(fviz_contrib(pca_datos_B, choice="var", axes=1, title = paste("Importancia variables dim 1 PCA Tiempo Final "
,nombreTabla)))
print(fviz_contrib(pca_datos_B, choice="var", axes=2, title = paste("Importancia variables dim 2 PCA Tiempo Final "
,nombreTabla)))
# PCA Sexo
pca_datos_C <- PCA(tabla_SexoM,scale.unit = F)
print(fviz_contrib(pca_datos_C, choice="var", title = paste("Importancia variables dim 1 PCA Sexo M ",
nombreTabla)))
print(fviz_contrib(pca_datos_C, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Sexo M ",
nombreTabla)))
pca_datos_D <- PCA(tabla_SexoF,scale.unit = F)
print(fviz_contrib(pca_datos_D, choice="var", title = paste("Importancia variables dim 1 PCA Sexo F ",
nombreTabla)))
print(fviz_contrib(pca_datos_D, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Sexo F",
nombreTabla)))
# PCA Endulzantes
pca_datos_E      <- PCA(tabla_EndulzanteSA, scale.unit = F)
print(fviz_contrib(pca_datos_E, choice="var", title = paste("Importancia variables dim 1 PCA Endulzante SA ",
nombreTabla)))
print(fviz_contrib(pca_datos_E, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Endulzante SA ",
nombreTabla)))
pca_datos_F      <- PCA(tabla_EndulzanteSU, scale.unit = F)
print(fviz_contrib(pca_datos_F, choice="var", title = paste("Importancia variables dim 1 PCA Endulzante SU ",
nombreTabla)))
print(fviz_contrib(pca_datos_F, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Endulzante SU ",
nombreTabla)))
pca_datos_G      <- PCA(tabla_EndulzanteST, scale.unit = F)
print(fviz_contrib(pca_datos_G, choice="var", title = paste("Importancia variables dim 1 PCA Endulzante ST ",
nombreTabla)))
print(fviz_contrib(pca_datos_G, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Endulzante ST ",
nombreTabla)))
# PCA TiempoxSexo
tabla_0xM <- subset(tabla, Tiempo == "0" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_0xF <- subset(tabla, Tiempo == "0" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxM <- subset(tabla, Tiempo == "Final" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxF <- subset(tabla, Tiempo == "Final" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante, numVol))
pca_0xM <- PCA(tabla_0xM, scale.unit=F)
print(fviz_contrib(pca_0xM, choice="var", title = paste("ContribVar dim1 Tiempo 0 Sexo M", nombreTabla)))
print(fviz_contrib(pca_0xM, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo 0 Sexo M",
nombreTabla)))
pca_0xF <- PCA(tabla_0xF, scale.unit=F)
print(fviz_contrib(pca_0xF, choice="var", title = paste("ContribVar dim1 Tiempo 0 Sexo F", nombreTabla)))
print(fviz_contrib(pca_0xF, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo 0 Sexo F",
nombreTabla)))
pca_FxM <- PCA(tabla_FxM, scale.unit=F)
print(fviz_contrib(pca_FxM, choice="var", title = paste("ContribVar dim1 Tiempo F Sexo M", nombreTabla)))
print(fviz_contrib(pca_FxM, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo F Sexo M",
nombreTabla)))
pca_FxF <- PCA(tabla_FxF, scale.unit=F)
print(fviz_contrib(pca_FxF, choice="var", title = paste("ContribVar dim1 Tiempo F Sexo F", nombreTabla)))
print(fviz_contrib(pca_FxF, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo F Sexo F",
nombreTabla)))
print(fviz_contrib(pca_0xM, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo 0 Sexo M",
nombreTabla)))
# PCA TiempoxEndulzante
# PCA SexoxEndulzante
tabla_MxSAx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSAxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSAx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSAxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSTx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSTxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="ST"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSTx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSTxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSUx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSUxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSUx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSUxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
pca_MxSAx0 <- PCA(tabla_MxSAx0, scale.unit=F)
print(fviz_contrib(pca_MxSAx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SA Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSAx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SA Tiempo 0",
nombreTabla)))
pca_MxSAxF <- PCA(tabla_MxSAxF, scale.unit=F)
print(fviz_contrib(pca_MxSAxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SA Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSAxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SA Tiempo F",
nombreTabla)))
pca_FxSAx0 <- PCA(tabla_FxSAx0, scale.unit=F)
print(fviz_contrib(pca_FxSAx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SA Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_FxSAx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SA Tiempo 0",
nombreTabla)))
pca_FxSAxF <- PCA(tabla_FxSAxF, scale.unit=F)
print(fviz_contrib(pca_FxSAxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SA Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_FxSAxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SA Tiempo F",
nombreTabla)))
pca_MxSTx0 <- PCA(tabla_MxSTx0, scale.unit=F)
print(fviz_contrib(pca_MxSTx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante ST Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSTx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante ST Tiempo 0",
nombreTabla)))
pca_MxSTxF <- PCA(tabla_MxSTxF, scale.unit=F)
print(fviz_contrib(pca_MxSTxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante ST Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSTxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante ST Tiempo F",
nombreTabla)))
pca_FxSTx0 <- PCA(tabla_FxSTx0, scale.unit=F)
print(fviz_contrib(pca_FxSTx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante ST Tiempo 0", nombreTabla)))
print(fviz_contrib(pca_FxSTx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante ST Tiempo 0",
nombreTabla)))
pca_FxSTxF <- PCA(tabla_FxSTxF, scale.unit=F)
print(fviz_contrib(pca_FxSTxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante ST Tiempo F", nombreTabla)))
print(fviz_contrib(pca_FxSTxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante ST Tiempo F",
nombreTabla)))
pca_MxSUx0 <- PCA(tabla_MxSUx0, scale.unit=F)
print(fviz_contrib(pca_MxSUx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SU Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSUx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SU Tiempo 0",
nombreTabla)))
pca_MxSUxF <- PCA(tabla_MxSUxF, scale.unit=F)
print(fviz_contrib(pca_MxSUxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SU Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSUxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SU Tiempo F",
nombreTabla)))
pca_FxSUx0 <- PCA(tabla_FxSUx0, scale.unit=F)
print(fviz_contrib(pca_FxSUx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SU Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_FxSUx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SU Tiempo 0",
nombreTabla)))
pca_FxSUxF <- PCA(tabla_FxSUxF, scale.unit=F)
print(fviz_contrib(pca_FxSUxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SU Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_FxSUxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SU Tiempo F",
nombreTabla)))
}
clusterVarios <- function (tabla, nclust) {
nombreTabla <- deparse(quote(tabla))
### Aplicamos clustering
# K-means clustering
set.seed(123)
km_datos_A <- kmeans(x = tabla, centers = nclust)
p1 <- fviz_cluster(object = km_datos_A, data = tabla,
ellipse.type = "norm", geom = "point", main = paste("Resultados clustering kmeans ",
nombreTabla),
stand = FALSE, palette = "jco", show.legend = T)
# PAM clustering
pam_clusters <- pam(x = tabla, k = nclust, metric = "manhattan")
p2 <- fviz_cluster(object = pam_clusters, data = tabla, ellipse.type = "t",
repel = TRUE) +
theme_bw() +
labs(title = "Resultados clustering PAM") +
theme(legend.position = "none")
# fuzzy clustering
fuzzy_cluster <- fanny(x = tabla, k = nclust, diss = FALSE, metric = "manhattan", stand = FALSE)
p3 <- fviz_cluster(object = fuzzy_cluster, repel = TRUE, ellipse.type = "norm",
pallete = "jco") + theme_bw() + labs(title = "Fuzzy Cluster plot")
# Hierarchical clustering
p4 <- fviz_dend(x = hclust(get_dist(tabla, method = "manhattan")), k = nclust, k_colors = "jco",
show_labels = T, main = paste("Datos ", nombreTabla))
model_clustering <- Mclust(tabla)
p5 <- fviz_mclust(object = model_clustering, what = "BIC", pallete = "jco") +
scale_x_discrete(limits = c(1:10))
p6 <- fviz_mclust(model_clustering, what = "classification", geom = "point",
pallete = "jco")
print(p1)
print(p2)
print(p3)
print(p4)
print(p5)
print(p6)
return(model_clustering)
}
set.seed(123)
orinaFlav <- preprocessTablas("data/", "tablaOrinaFlav.csv")
library(tidyverse)
library(rstatix)
library(scales)
library(ggpubr)
library(factoextra)
library(GGally)
library(plotly)
library(FactoMineR)
library(cluster)
library(mclust)
library(reshape2)
library(gridExtra)
orinaFlav <- preprocessTablas("data/", "tablaOrinaFlav.csv")
orinaAnt <- preprocessTablas("data/", "tablaOrinaAnt.csv")
orinaFlav <- preprocessTablas("data/", "tablaOrinaFlav.csv")
orinaAnt <- preprocessTablas("data/", "tablaorinaAnt.csv")
plasmaAnt <- preprocessTablas("data/", "tablaplasmaAnt.csv")
plasmaFlav <- preprocessTablas("data/", "tablaplasmaFlav.csv")
tabla1 <- orinaFlav$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tabla2 <- orinaAnt$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
tabla3 <- plasmaAnt$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
tabla_antro <- plasmaFlav$tablaFactors %>%
select(c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tabla_merge <- na.omit(full_join( full_join( full_join(
tabla_antro %>% group_by(numVol) %>% mutate(id = row_number()),
tabla1 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id")),
tabla2 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id")),
tabla3 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id")) )
counts <- data.frame(table(tabla_merge$numVol))
tabla_mergeDupl <- tabla_merge[tabla_merge$numVol %in% counts$Var1[counts$Freq > 1],]
aov_results <- lapply(tabla_mergeDupl, function(x) aov(as.numeric(x) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl))
pruebaUwu <- anova(aov_results[[2]]$`numVol:Tiempo`)
pruebaUwu
pruebaUwu <- anova(aov_results[[2]]$numVol)
pruebaUwu
aov_results[[2]]
summary(aov_results[[2]])
pruebaUwu <- summary(aov_results[[2]])
pruebaUwu
pruebaUwu$`Error: numVol:Tiempo`
str(epruebaUwu$`Error: numVol:Tiempo`)
str(pruebaUwu$`Error: numVol:Tiempo`)
pruebaUwu$`Error: numVol:Tiempo`
pruebaUwu$`Error: numVol:Tiempo`[[1]]
pruebaUwu$`Error: numVol:Tiempo`[[2]]
pruebaUwu$`Error: numVol:Tiempo`[[0]]
pruebaUwu <- summary(aov_results[[2]])$`Error: numVol:Tiempo`
anova(pruebaUwu)
data.frame(pruebaUwu)
pruebaUwu
pruebaUwu[1]
pruebaUwu[1,]
pruebaUwu[2]
pruebaUwu[3]
pruebaUwu
class(pruebaUwu)
as.data.frame(pruebaUwu)
as.matrix(pruebaUwu)
as.matrix(pruebaUwu)[1]
pruebaUwu <- anova(aov_results[[2]])$`Error: numVol:Tiempo`
pruebaUwu <- anova(aov_results[[2]]$numVol)
pruebaUwu
pruebaUwu <- anova(aov_results[[2]]$`numVol:Tiempo`)
pruebaUwu
pruebaUwu <- summary(aov_results[[2]])
pruebaUwu
pruebaUwu[[1]]
pruebaUwu[[2]]
pruebaUwu[[2]][,5]
pruebaUwu$`Error: numVol`[[1]][,5][1]
pruebaUwu$`Error: numVol`[[1]][,5]
pruebaUwu$`Error: numVol`[[1]][,5]
pruebaUwu$`Error: numVol`
nrow(pruebaUwu$`Error: numVol`)
nrow(pruebaUwu$`Error: numVol:Tiempo`)
pruebaUwu$`Error: numVol:Tiempo`
pruebaUwu$`Error: numVol:Tiempo`[[1]][,5]
seq(1,4)
pruebaUwu$`Error: numVol:Tiempo`[[1]][1,]
for (j in seq(1, length(aov_results))) {
print(paste("Variable analizada: ", names(aov_results)[j]))
resultado <- summary(aov_results[[j]])$`Error: numVol:Tiempo`
for (i in seq(1,4)){
if (resultado[[1]][,5][i] < 0.05){
print(resultado[[1]][i,])
}
}
}
source("~/Estudio/1stStepsPhD/article1.R", encoding = 'UTF-8')
source("~/Estudio/1stStepsPhD/article1.R", encoding = 'UTF-8')

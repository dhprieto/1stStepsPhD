antro$Endulzante[i] <- "ST"
}
if ((antro$Nº.Volunt.[i] >= 51) & (antro$Nº.Volunt.[i] <= 96)){
antro$Endulzante[i] <- "SU"
}
if ((antro$Nº.Volunt.[i] >= 101) & (antro$Nº.Volunt.[i] <= 146)){
antro$Endulzante[i] <- "SA"
}
}
antro_ST <- subset(antro, antro$Endulzante == "ST")
antro_SU <- subset(antro, antro$Endulzante == "SU")
antro_SA <- subset(antro, antro$Endulzante == "SA")
if (agudo == T) {
for (i in seq(1, nrow(table))){
table[,1][i] <- gsub("U.*", "", table[,1][i])
}
} else {
for (i in seq(1, nrow(table))){
table[,1][i] <- gsub("[A-C].", "", table[,1][i])
}
}
table_ST <- subset(table, table$Endulzante == "ST")
table_SU <- subset(table, table$Endulzante == "SU")
table_SA <- subset(table, table$Endulzante == "SA")
antro_ST[,1] <- round(rescale(antro_ST[,1], to=c(min(as.integer(table_ST[,1])),max(as.integer(table_ST[,1])))))
print(c(antro_ST[,1],table_ST[,1]))
return(table)
}
table <- addAntro("data/datosAntropometricosCardiovasculares.csv",table)
return(table)
}
tableName1 = "agudoOrinaAntLimpio.csv"
rootDir = "data/"
tablePath = paste0(rootDir,tableName1)
agudoOrinaAnt <- preprocess (tablePath, 0.05, T)
preprocess <- function(tablePath, nasPercentageCol, nasRow){
table <- read.csv(tablePath, sep = ";", dec = ",")
for (i in seq(1, nrow(table))){
if (grepl(pattern = "A", x = table$X[i])){
table$Endulzante[i] <- "ST"
}
else if (grepl(pattern = "B", x = table$X[i])){
table$Endulzante[i] <- "SU"
}
else if (grepl(pattern = "C", x = table$X[i])){
table$Endulzante[i] <- "SA"
}
}
if (grepl("agudo", tablePath)){agudo = T}
else {agudo = F}
if(agudo == T){
for (i in seq(1, nrow(table))){
if (grepl(pattern = "([A-C]) -1", x = table$X[i])){
table$Tiempo[i] <- "-1"
}
else if (grepl(pattern = "([A-C]) 3,5", x = table$X[i])){
table$Tiempo[i] <- "3,5"
}
else if (grepl(pattern = "([A-C]) 12", x = table$X[i])){
table$Tiempo[i] <- "12"
}
else if (grepl(pattern = "([A-C]) 24", x = table$X[i])){
table$Tiempo[i] <- "24"
}
}
}
else {
for (i in seq(1, nrow(table))){
if (grepl(pattern = "F", x = table$X[i])){
table$Tiempo[i] <- "Final"
}
if (grepl(pattern = "([A-C])0", x = table$X[i])){
table$Tiempo[i] <- "0"
}
}
}
table <- table[,colSums(is.na(table))<(nrow(table)*nasPercentageCol)]
if (nasRow == T){
table <- na.omit(table)
}
addAntro <- function (pathToAntro, table) {
antro <- read.csv(pathToAntro, sep = ";", dec = ",")
for (i in seq(1,nrow(antro))){
if (antro$Nº.Volunt.[i] <= 46){
antro$Endulzante[i] <- "ST"
}
if ((antro$Nº.Volunt.[i] >= 51) & (antro$Nº.Volunt.[i] <= 96)){
antro$Endulzante[i] <- "SU"
}
if ((antro$Nº.Volunt.[i] >= 101) & (antro$Nº.Volunt.[i] <= 146)){
antro$Endulzante[i] <- "SA"
}
}
antro_ST <- subset(antro, antro$Endulzante == "ST")
antro_SU <- subset(antro, antro$Endulzante == "SU")
antro_SA <- subset(antro, antro$Endulzante == "SA")
if (agudo == T) {
for (i in seq(1, nrow(table))){
table[,1][i] <- gsub("U.*", "", table[,1][i])
}
} else {
for (i in seq(1, nrow(table))){
table[,1][i] <- gsub("[A-C].", "", table[,1][i])
}
}
table_ST <- subset(table, table$Endulzante == "ST")
table_SU <- subset(table, table$Endulzante == "SU")
table_SA <- subset(table, table$Endulzante == "SA")
antro_ST[,1] <- rescale(antro_ST[,1], to=c(min(as.integer(table_ST[,1])),max(as.integer(table_ST[,1]))))
print(c(antro_ST[,1],table_ST[,1]))
return(table)
}
table <- addAntro("data/datosAntropometricosCardiovasculares.csv",table)
return(table)
}
agudoOrinaAnt <- preprocess (tablePath, 0.05, T)
round(6.9)
library(scales)
library(caret)
install.packages(c("dummies", "FNN", "caret"))
sexVol <- read.csv("data/sexoVoluntarios.csv", sep = ";")
View(sexVol)
library(scales)
preprocess <- function(tablePath, nasPercentageCol, nasRow){
table <- read.csv(tablePath, sep = ";", dec = ",")
for (i in seq(1, nrow(table))){
if (grepl(pattern = "A", x = table$X[i])){
table$Endulzante[i] <- "ST"
}
else if (grepl(pattern = "B", x = table$X[i])){
table$Endulzante[i] <- "SU"
}
else if (grepl(pattern = "C", x = table$X[i])){
table$Endulzante[i] <- "SA"
}
}
if (grepl("agudo", tablePath)){agudo = T}
else {agudo = F}
if(agudo){
for (i in seq(1, nrow(table))){
if (grepl(pattern = "([A-C]) -1", x = table$X[i])){
table$Tiempo[i] <- "-1"
}
else if (grepl(pattern = "([A-C]) 3,5", x = table$X[i])){
table$Tiempo[i] <- "3,5"
}
else if (grepl(pattern = "([A-C]) 12", x = table$X[i])){
table$Tiempo[i] <- "12"
}
else if (grepl(pattern = "([A-C]) 24", x = table$X[i])){
table$Tiempo[i] <- "24"
}
}
for (i in seq(1, nrow(table))){
table$numVol[i] <- as.integer(gsub("U.*", "", table[,1][i]))
}
}
else {
for (i in seq(1, nrow(table))){
if (grepl(pattern = "F", x = table$X[i])){
table$Tiempo[i] <- "Final"
}
if (grepl(pattern = "([A-C])0", x = table$X[i])){
table$Tiempo[i] <- "0"
}
}
for (i in seq(1, nrow(table))){
table$numVol[i] <- gsub("[A-C].", "", table[,1][i])
}
}
table <- table[,colSums(is.na(table))<(nrow(table)*nasPercentageCol)]
if (nasRow == T){
table <- na.omit(table)
}
addAntro <- function (pathToAntro, table) {
antro <- read.csv(pathToAntro, sep = ";", dec = ",")
for (i in seq(1,nrow(antro))){
if (antro$Nº.Volunt.[i] <= 46){
antro$Endulzante[i] <- "ST"
}
if ((antro$Nº.Volunt.[i] >= 51) & (antro$Nº.Volunt.[i] <= 96)){
antro$Endulzante[i] <- "SU"
antro$Nº.Volunt.[i] <- antro$Nº.Volunt.[i]-50
}
if ((antro$Nº.Volunt.[i] >= 101) & (antro$Nº.Volunt.[i] <= 146)){
antro$Endulzante[i] <- "SA"
antro$Nº.Volunt.[i] <- antro$Nº.Volunt.[i]-100
}
}
table$numVol <- as.integer(table$numVol)
table <- merge(x= table, y= antro, by.x = c("numVol","Endulzante"), by.y= c("Nº.Volunt.", "Endulzante"), all=T)
sexVol <- read.csv("data/sexoVoluntarios.csv", sep = ";")
table <- merge(x=table, y=sex, by.x="numVol", by.y="Voluntario", all=T)
return(table)
}
table <- addAntro("data/datosAntropometricosCardiovasculares.csv",table)
table <- table[order(table$Endulzante, table$Tiempo,table$numVol),]
return(na.omit(table))
}
preprocess <- function(tablePath, nasPercentageCol, nasRow){
table <- read.csv(tablePath, sep = ";", dec = ",")
for (i in seq(1, nrow(table))){
if (grepl(pattern = "A", x = table$X[i])){
table$Endulzante[i] <- "ST"
}
else if (grepl(pattern = "B", x = table$X[i])){
table$Endulzante[i] <- "SU"
}
else if (grepl(pattern = "C", x = table$X[i])){
table$Endulzante[i] <- "SA"
}
}
if (grepl("agudo", tablePath)){agudo = T}
else {agudo = F}
if(agudo){
for (i in seq(1, nrow(table))){
if (grepl(pattern = "([A-C]) -1", x = table$X[i])){
table$Tiempo[i] <- "-1"
}
else if (grepl(pattern = "([A-C]) 3,5", x = table$X[i])){
table$Tiempo[i] <- "3,5"
}
else if (grepl(pattern = "([A-C]) 12", x = table$X[i])){
table$Tiempo[i] <- "12"
}
else if (grepl(pattern = "([A-C]) 24", x = table$X[i])){
table$Tiempo[i] <- "24"
}
}
for (i in seq(1, nrow(table))){
table$numVol[i] <- as.integer(gsub("U.*", "", table[,1][i]))
}
}
else {
for (i in seq(1, nrow(table))){
if (grepl(pattern = "F", x = table$X[i])){
table$Tiempo[i] <- "Final"
}
if (grepl(pattern = "([A-C])0", x = table$X[i])){
table$Tiempo[i] <- "0"
}
}
for (i in seq(1, nrow(table))){
table$numVol[i] <- gsub("[A-C].", "", table[,1][i])
}
}
table <- table[,colSums(is.na(table))<(nrow(table)*nasPercentageCol)]
if (nasRow == T){
table <- na.omit(table)
}
addAntro <- function (pathToAntro, table) {
antro <- read.csv(pathToAntro, sep = ";", dec = ",")
for (i in seq(1,nrow(antro))){
if (antro$Nº.Volunt.[i] <= 46){
antro$Endulzante[i] <- "ST"
}
if ((antro$Nº.Volunt.[i] >= 51) & (antro$Nº.Volunt.[i] <= 96)){
antro$Endulzante[i] <- "SU"
antro$Nº.Volunt.[i] <- antro$Nº.Volunt.[i]-50
}
if ((antro$Nº.Volunt.[i] >= 101) & (antro$Nº.Volunt.[i] <= 146)){
antro$Endulzante[i] <- "SA"
antro$Nº.Volunt.[i] <- antro$Nº.Volunt.[i]-100
}
}
table$numVol <- as.integer(table$numVol)
table <- merge(x= table, y= antro, by.x = c("numVol","Endulzante"), by.y= c("Nº.Volunt.", "Endulzante"), all=T)
sexVol <- read.csv("data/sexoVoluntarios.csv", sep = ";")
table <- merge(x=table, y=sex, by.x="numVol", by.y="Voluntario", all=T)
return(table)
}
table <- addAntro("data/datosAntropometricosCardiovasculares.csv",table)
table <- table[order(table$Endulzante, table$Tiempo,table$numVol),]
return(na.omit(table))
}
tableName2 = "cronicoPlasmaAntLimpio.csv"
rootDir = "data/"
tablePath = paste0(rootDir,tableName2)
cronicoOrinaAnt_Antro <- preprocess (tablePath, 0.05, T)
preprocess <- function(tablePath, nasPercentageCol, nasRow){
table <- read.csv(tablePath, sep = ";", dec = ",")
for (i in seq(1, nrow(table))){
if (grepl(pattern = "A", x = table$X[i])){
table$Endulzante[i] <- "ST"
}
else if (grepl(pattern = "B", x = table$X[i])){
table$Endulzante[i] <- "SU"
}
else if (grepl(pattern = "C", x = table$X[i])){
table$Endulzante[i] <- "SA"
}
}
if (grepl("agudo", tablePath)){agudo = T}
else {agudo = F}
if(agudo){
for (i in seq(1, nrow(table))){
if (grepl(pattern = "([A-C]) -1", x = table$X[i])){
table$Tiempo[i] <- "-1"
}
else if (grepl(pattern = "([A-C]) 3,5", x = table$X[i])){
table$Tiempo[i] <- "3,5"
}
else if (grepl(pattern = "([A-C]) 12", x = table$X[i])){
table$Tiempo[i] <- "12"
}
else if (grepl(pattern = "([A-C]) 24", x = table$X[i])){
table$Tiempo[i] <- "24"
}
}
for (i in seq(1, nrow(table))){
table$numVol[i] <- as.integer(gsub("U.*", "", table[,1][i]))
}
}
else {
for (i in seq(1, nrow(table))){
if (grepl(pattern = "F", x = table$X[i])){
table$Tiempo[i] <- "Final"
}
if (grepl(pattern = "([A-C])0", x = table$X[i])){
table$Tiempo[i] <- "0"
}
}
for (i in seq(1, nrow(table))){
table$numVol[i] <- gsub("[A-C].", "", table[,1][i])
}
}
table <- table[,colSums(is.na(table))<(nrow(table)*nasPercentageCol)]
if (nasRow == T){
table <- na.omit(table)
}
addAntro <- function (pathToAntro, table) {
antro <- read.csv(pathToAntro, sep = ";", dec = ",")
for (i in seq(1,nrow(antro))){
if (antro$Nº.Volunt.[i] <= 46){
antro$Endulzante[i] <- "ST"
}
if ((antro$Nº.Volunt.[i] >= 51) & (antro$Nº.Volunt.[i] <= 96)){
antro$Endulzante[i] <- "SU"
antro$Nº.Volunt.[i] <- antro$Nº.Volunt.[i]-50
}
if ((antro$Nº.Volunt.[i] >= 101) & (antro$Nº.Volunt.[i] <= 146)){
antro$Endulzante[i] <- "SA"
antro$Nº.Volunt.[i] <- antro$Nº.Volunt.[i]-100
}
}
table$numVol <- as.integer(table$numVol)
table <- merge(x= table, y= antro, by.x = c("numVol","Endulzante"), by.y= c("Nº.Volunt.", "Endulzante"), all=T)
sexVol <- read.csv("data/sexoVoluntarios.csv", sep = ";")
table <- merge(x=table, y=sexVol, by.x="numVol", by.y="Voluntario", all=T)
return(table)
}
table <- addAntro("data/datosAntropometricosCardiovasculares.csv",table)
table <- table[order(table$Endulzante, table$Tiempo,table$numVol),]
return(na.omit(table))
}
tableName2 = "cronicoPlasmaAntLimpio.csv"
rootDir = "data/"
tablePath = paste0(rootDir,tableName2)
cronicoOrinaAnt_Antro <- preprocess (tablePath, 0.05, T)
View(cronicoOrinaAnt_Antro)
tableName2 = "cronicoPlasmaAntLimpio.csv"
rootDir = "data/"
tablePath = paste0(rootDir,tableName2)
tabla1 <- preprocess (tablePath, 0.05, T)
saveRDS(tabla1, "data/cronicoPlasmaAnt_Antro.csv")
tableName2 = "cronicoOrinaAntLimpio.csv"
rootDir = "data/"
tablePath = paste0(rootDir,tableName2)
tabla1 <- preprocess (tablePath, 0.05, T)
saveRDS(tabla1, "data/cronicoOrinaAnt_Antro.RDS")
write.csv(tabla1, "data/cronicoOrinaAnt_Antro.csv")
tableName2 = "cronicoPlasmaAntLimpio.csv"
rootDir = "data/"
tablePath = paste0(rootDir,tableName2)
tabla1 <- preprocess (tablePath, 0.05, T)
write.csv(tabla1, "data/cronicoPlasmaAnt_Antro.csv")
tableName2 = "cronicoPlasmaFlavLimpio.csv"
rootDir = "data/"
tablePath = paste0(rootDir,tableName2)
tabla1 <- preprocess (tablePath, 0.05, T)
write.csv(tabla1, "data/cronicoFlavAnt_Antro.csv")
tableName2 = "cronicoOrinaFlavLimpio.csv"
rootDir = "data/"
tablePath = paste0(rootDir,tableName2)
tabla1 <- preprocess (tablePath, 0.05, T)
write.csv(tabla1, "data/cronicoFlavAnt_Antro.csv")
write.csv(tabla1, "data/cronicoOrinaAnt_Antro.csv")
tableName2 = "cronicoOrinaFlavLimpio.csv"
rootDir = "data/"
tablePath = paste0(rootDir,tableName2)
tabla1 <- preprocess (tablePath, 0.05, T)
write.csv(tabla1, "data/cronicoOrinaFlav_Antro.csv")
tableName2 = "cronicoOrinaAntLimpio.csv"
rootDir = "data/"
tablePath = paste0(rootDir,tableName2)
tabla1 <- preprocess (tablePath, 0.05, T)
write.csv(tabla1, "data/cronicoOrinaAnt_Antro.csv")
tableName2 = "cronicoPlasmaAntLimpio.csv"
rootDir = "data/"
tablePath = paste0(rootDir,tableName2)
tabla1 <- preprocess (tablePath, 0.05, T)
write.csv(tabla1, "data/cronicoPlasmaAnt_Antro.csv")
tableName2 = "cronicoPlasmaFlavLimpio.csv"
rootDir = "data/"
tablePath = paste0(rootDir,tableName2)
tabla1 <- preprocess (tablePath, 0.05, T)
write.csv(tabla1, "data/cronicoPlasmaFlav_Antro.csv")
sexVol <- read.csv("data/sexoVoluntarios.csv", sep = ";")
library(dummies)
library(FNN)
library(factoextra)
c_O_A.A <- read.csv("data/cronicoOrinaAnt_Antro.csv")
c_O_A.A$Endulzante <- factor(c_O_A.A$Endulzante, levels = c("SA", "ST", "SU"))
c_O_A.A$Sexo <- factor(c_O_A.A$Sexo, levels = c("HOMBRE", "MUJER"))
c_O_A.A$Tiempo <- factor(c_O_A.A$Tiempo, levels = c("0", "Final"))
set.A <- c_O_A.A[,-c(1,2,4)]
set.A_num <- set.A[,-c(1,7,26)]
fviz_nbclust(x = set.A_num, FUNcluster = kmeans, method = "wss", k.max = 10,
diss = get_dist(set.A_num, method = "pearson"), nstart = 50)
set.seed(123)
km_clusters <- kmeans(x = set.A_num, centers = 5, nstart = 1000)
fviz_nbclust(x = set.A_num, FUNcluster = kmeans, method = "wss", k.max = 10,
diss = get_dist(set.A_num, method = "pearson"), nstart = 50)
set.seed(123)
km_clusters <- kmeans(x = set.A_num, centers = 7, nstart = 1000, )
fviz_cluster(object = km_clusters, data = set.A_num,
show.clust.cent = TRUE,
ellipse.type = "euclid", star.plot = TRUE, repel = TRUE) +
labs(title = "K-means - Cronico Orina Antocianos + Datos Antropométricos") +
theme_bw() +
theme(legend.position = "none", plot.title = element_text(hjust = 0.5))
library(dplyr)
library(scales)
library(purrr)
library(ggpubr)
library(factoextra)
library(clustertend)
preprocessTablas1 <- function(root, nombreTabla) {
# Getting data ready
rootTabla <- paste0(root, nombreTabla)
tabla <- read.csv(rootTabla)
# Make factors of categorical features, deltaing intial-final features
tabla$Endulzante <- factor(tabla$Endulzante, levels = c("SA", "ST", "SU"))
tabla$Sexo <- factor(tabla$Sexo, levels = c("HOMBRE", "MUJER"))
tabla$Tiempo <- factor(tabla$Tiempo, levels = c("0", "Final"))
tabla$Delta.IRCV <- tabla$IRCV.Final - tabla$IRCV.inicial
tabla$Delta.Bpmin <- tabla$Bpmin.final - tabla$Bpmin.inicial
tabla$Delta.Bpmax <- tabla$Bpmax.final - tabla$Bpmax.inicial
tabla$Delta.Frec <- tabla$Frec.final - tabla$Frec.inicial
# Removing of trivial redundant and useless features
set.A <- subset(tabla, select =-c(X.1, numVol, X, Peso.inicial, Peso.final, Talla, IMC.Inicial, IMC.Final,
Grasa.inicial, Grasa.final, IRCV.Final, IRCV.inicial, Bpmin.final,
Bpmin.inicial, Bpmax.final, Bpmax.inicial, Frec.final, Frec.inicial))
# Only numerical features
set.A_num <- subset(set.A, select=-c(Endulzante, Sexo, Tiempo))
#Rescaling, can use "set.A_rescaled <- scale(set.A_num)" too
set.A_rescaled <- set.A_num %>% mutate_each_(list(~rescale(.) %>% as.vector),
vars = colnames(set.A_num))
# Validación de método de clustering
## Manual
datos_simulados <- map_df(set.A_rescaled,
.f = function(x){runif(n = length(x),
min = min(x),
max = max(x))
}
)
pca_datos_A      <- prcomp(set.A_rescaled)
pca_datos_simulados <- prcomp(datos_simulados)
p1 <- fviz_pca_ind(X = pca_datos_A, habillage = set.A$Sexo,
geom = "point", title = paste("PCA - datos sexo", nombreTabla),
pallete = "jco") +
theme_bw() + theme(legend.position = "bottom")
p2 <- fviz_pca_ind(X = pca_datos_simulados, geom = "point",
title = paste("PCA - datos simulados",nombreTabla), pallete = "jco") +
theme_bw() + theme(legend.position = "bottom")
print(ggarrange(p1, p2))#, common.legend = TRUE)
print(fviz_contrib(pca_datos_A, choice="var", top = 13))
### Aplicamos clustering
# K-means clustering
km_datos_A <- kmeans(x = set.A_rescaled, centers = 2)
p3 <- fviz_cluster(object = km_datos_A, data = set.A_rescaled,
ellipse.type = "norm", geom = "point", main = paste("Datos sexo", nombreTabla),
stand = FALSE, palette = "jco", show.legend = F) +
geom_point(aes(shape = set.A$Sexo), show.legend = TRUE)
km_datos_simulados <- kmeans(x = datos_simulados, centers = 2)
p4 <- fviz_cluster(object = km_datos_simulados, data = datos_simulados, habillage = set.A$Sexo,
ellipse.type = "norm", geom = "point",
main = paste("Datos simulados", nombreTabla), stand = FALSE, palette = "jco") +
theme_bw() + theme(legend.position = "none")
# Hierarchical clustering
p5 <- fviz_dend(x = hclust(dist(set.A_rescaled)), k = 2, k_colors = "jco",
show_labels = FALSE, main = paste("Datos sexo", nombreTabla))
p6 <- fviz_dend(x = hclust(dist(datos_simulados)), k = 2, k_colors = "jco",
show_labels = FALSE, main = paste("Datos simulados", nombreTabla))
print(ggarrange(p3, p4))
print(ggarrange(p5, p6))
### Estadístico de Hopkins ----
set.seed(101)
hopkins(set.A_rescaled, n = nrow(set.A_rescaled)-1)
hopkins(datos_simulados, n = nrow(datos_simulados)-1)
### VAT (Comparación visual) ----
dist_datos_A      <- dist(set.A_rescaled, method = "euclidean")
dist_datos_simulados <- dist(datos_simulados, method = "euclidean")
p7 <- fviz_dist(dist.obj = dist_datos_A, show_labels = FALSE) +
labs(title = paste("Datos sexo", nombreTabla)) + theme(legend.position = "bottom")
p8 <- fviz_dist(dist.obj = dist_datos_simulados, show_labels = FALSE) +
labs(title = paste("Datos simulados", nombreTabla)) + theme(legend.position = "bottom")
print(ggarrange(p7, p8))
}
preprocessTablas1("data/","cronicoPlasmaFlav_Antro.csv")
preprocessTablas1("data/","cronicoPlasmaAnt_Antro.csv")
resultadoA_O_F.A <- preprocessTablas1("data/","cronicoOrinaFlav_Antro.csv")

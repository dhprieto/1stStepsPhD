model_clustering_OF <- Mclust(tablaNumMet)
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_clusters <- tablaNumMet %>% tibble::add_column(Peso = listaTablas$Peso,
IMC = listaTablas$IMC,
Grasa = listaTablas$Grasa,
IRCV = listaTablas$IRCV,
Bpmin = listaTablas$Bpmin,
Bpmax = listaTablas$Bpmax,
Frec = listaTablas$Frec,
clusters = model_clustering_OF$classification,
Endulzante = rescale(as.numeric(listaTablas$Endulzante)),
Sexo = rescale(as.numeric(listaTablas$Sexo)),
Tiempo = listaTablas$Tiempo) %>%
select(everything(),Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante, Sexo, Tiempo, clusters)
tableSexo <- table(tabla_clusters$Sexo, tabla_clusters$clusters)#tabla_clusters %>% count(Sexo, clusters)
tableEdulcorante <- table(tabla_clusters$Endulzante, tabla_clusters$clusters) #tabla_clusters %>% count(Endulzante, clusters)
tabla_clusters$Endulzante <- rescale(as.numeric(tabla_clusters$Endulzante))
tabla_clusters$Sexo <- rescale(as.numeric(tabla_clusters$Sexo))
longtableOF <- melt(tabla_clusters, id = c("clusters", "Tiempo"))
longtableOF <- tabla_clusters %>% gather(variable, values, -clusters, -Tiempo, )
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = which(unique(longtableOF$variable)=="Sexo"), y = 1.03, label = "Mujer") +
annotate("text",x = which(unique(longtableOF$variable)=="Sexo"), y = -0.03, label = "Hombre") +
annotate("text", x = which(unique(longtableOF$variable)=="Endulzante"), y = 1.03, label = "SU") +
annotate("text",x = which(unique(longtableOF$variable)=="Endulzante"), y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexo, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0, ymax=0.25)+
ggtitle(paste("Boxplot Cluster Analysis ", deparse(substitute(listaTablas))))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
}
clusterNPlot(orinaAnt)
library(reshape2)
clusterNPlot <- function(listaTablas){
tablaNumMet <- listaTablas  %>%
dplyr::select(-c(anthro, Endulzante, Sexo, numVol, Tiempo))
model_clustering_OF <- Mclust(tablaNumMet)
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_clusters <- tablaNumMet %>% tibble::add_column(Peso = listaTablas$Peso,
IMC = listaTablas$IMC,
Grasa = listaTablas$Grasa,
IRCV = listaTablas$IRCV,
Bpmin = listaTablas$Bpmin,
Bpmax = listaTablas$Bpmax,
Frec = listaTablas$Frec,
clusters = model_clustering_OF$classification,
Endulzante = rescale(as.numeric(listaTablas$Endulzante)),
Sexo = rescale(as.numeric(listaTablas$Sexo)),
Tiempo = listaTablas$Tiempo) %>%
select(everything(),Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante, Sexo, Tiempo, clusters)
tableSexo <- table(tabla_clusters$Sexo, tabla_clusters$clusters)#tabla_clusters %>% count(Sexo, clusters)
tableEdulcorante <- table(tabla_clusters$Endulzante, tabla_clusters$clusters) #tabla_clusters %>% count(Endulzante, clusters)
tabla_clusters$Endulzante <- rescale(as.numeric(tabla_clusters$Endulzante))
tabla_clusters$Sexo <- rescale(as.numeric(tabla_clusters$Sexo))
longtableOF <- melt(tabla_clusters, id = c("clusters", "Tiempo"))
longtableOF <- tabla_clusters %>% gather(variable, values, -clusters, -Tiempo, )
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = which(unique(longtableOF$variable)=="Sexo"), y = 1.03, label = "Mujer") +
annotate("text",x = which(unique(longtableOF$variable)=="Sexo"), y = -0.03, label = "Hombre") +
annotate("text", x = which(unique(longtableOF$variable)=="Endulzante"), y = 1.03, label = "SU") +
annotate("text",x = which(unique(longtableOF$variable)=="Endulzante"), y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexo, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0, ymax=0.25)+
ggtitle(paste("Boxplot Cluster Analysis ", deparse(substitute(listaTablas))))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
}
clusterNPlot(orinaAnt)
colnames(orinaFlav)
orinaAnt <- escaladoTablas(removeOutliers(preprocessTables("data/", "tablaorinaAnt.csv")$tablaFactors))
plasmaAnt <- escaladoTablas(removeOutliers(preprocessTables("data/", "tablaplasmaAnt.csv")$tablaFactors))
plasmaFlav <- escaladoTablas(removeOutliers(preprocessTables("data/", "tablaplasmaFlav_adjusted.csv")$tablaFactors))
colnames(orinaFlav)[3]
colnames(orinaFlav)[3] <- "HE-G"
colnames(orinaFlav)
write.csv(orinaFlav, "data/mainUrineFlav.csv")
colnames(orinaAnt)
colnames(orinaAnt) <- c("CA-G", "DHPAA-G", "TFA-G", "TFA-S", "VA", anthro)
orinaAnt
colnames(orinaAnt)
colnames(orinaAnt) <- c("CA-G", "DHPAA-G", "TFA-G", "TFA-S", "VA", anthro, "Sweetener", "Time",
"Sex", "numVol")
colnames(orinaAnt)
orinaAnt
write.csv(orinaAnt, "data/mainUrineAnt.csv")
colnames(plasmaAnt)
colnames(plasmaAnt) <- c("CA", "CA-G", "DHPAA", "DHPAA-G", "VA-GG", "VA-GS",
anthro, "Sweetener", "Time",
"Sex", "numVol")
colnames(plasmaAnt)
write.csv(plasmaAnt, "data/mainPlasmaAnt.csv")
colnames(plasmaFlav)
colnames(plasmaFlav) <- c("E", "ES",
anthro, "Sweetener", "Time",
"Sex", "numVol")
write.csv(plasmaFlav, "data/mainPlasmaFlav.csv")
clusterNPlot(orinaAnt)
clusterNPlot <- function(listaTablas){
tablaNumMet <- listaTablas  %>%
dplyr::select(-c(anthro, Sweetener, Sex, numVol, Time))
model_clustering_OF <- Mclust(tablaNumMet)
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_clusters <- tablaNumMet %>% tibble::add_column(Peso = listaTablas$Peso,
IMC = listaTablas$IMC,
Grasa = listaTablas$Grasa,
IRCV = listaTablas$IRCV,
Bpmin = listaTablas$Bpmin,
Bpmax = listaTablas$Bpmax,
Frec = listaTablas$Frec,
clusters = model_clustering_OF$classification,
Sweetener = rescale(as.numeric(listaTablas$Sweetener)),
Sex = rescale(as.numeric(listaTablas$Sex)),
Time = listaTablas$Time) %>%
select(everything(),Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Sweetener, Sex, Time, clusters)
tableSex <- table(tabla_clusters$Sex, tabla_clusters$clusters)#tabla_clusters %>% count(Sex, clusters)
tableEdulcorante <- table(tabla_clusters$Sweetener, tabla_clusters$clusters) #tabla_clusters %>% count(Sweetener, clusters)
tabla_clusters$Sweetener <- rescale(as.numeric(tabla_clusters$Sweetener))
tabla_clusters$Sex <- rescale(as.numeric(tabla_clusters$Sex))
longtableOF <- melt(tabla_clusters, id = c("clusters", "Time"))
longtableOF <- tabla_clusters %>% gather(variable, values, -clusters, -Time, )
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = which(unique(longtableOF$variable)=="Sex"), y = 1.03, label = "Women") +
annotate("text",x = which(unique(longtableOF$variable)=="Sex"), y = -0.03, label = "Men") +
annotate("text", x = which(unique(longtableOF$variable)=="Sweetner"), y = 1.03, label = "SU") +
annotate("text",x = which(unique(longtableOF$variable)=="Sweetner"), y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSex, rows = c("M", "F"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0, ymax=0.25)+
ggtitle(paste("Boxplot Cluster Analysis ", deparse(substitute(listaTablas))))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Time)
}
clusterNPlot(orinaAnt)
clusterNPlot <- function(listaTablas, anthropometric){
tablaNumMet <- listaTablas  %>%
dplyr::select(-c(anthro, Sweetener, Sex, numVol, Time))
model_clustering_OF <- Mclust(tablaNumMet)
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
if(anthropometric){
tabla_clusters <- tablaNumMet %>% tibble::add_column(Peso = listaTablas$Peso,
IMC = listaTablas$IMC,
Grasa = listaTablas$Grasa,
IRCV = listaTablas$IRCV,
Bpmin = listaTablas$Bpmin,
Bpmax = listaTablas$Bpmax,
Frec = listaTablas$Frec,
clusters = model_clustering_OF$classification,
Sweetener = rescale(as.numeric(listaTablas$Sweetener)),
Sex = rescale(as.numeric(listaTablas$Sex)),
Time = listaTablas$Time) %>%
select(everything(),Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Sweetener, Sex, Time, clusters)
tableSex <- table(tabla_clusters$Sex, tabla_clusters$clusters)#tabla_clusters %>% count(Sex, clusters)
tableEdulcorante <- table(tabla_clusters$Sweetener, tabla_clusters$clusters) #tabla_clusters %>% count(Sweetener, clusters)
tabla_clusters$Sweetener <- rescale(as.numeric(tabla_clusters$Sweetener))
tabla_clusters$Sex <- rescale(as.numeric(tabla_clusters$Sex))
longtableOF <- melt(tabla_clusters, id = c("clusters", "Time"))
longtableOF <- tabla_clusters %>% gather(variable, values, -clusters, -Time, )
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = which(unique(longtableOF$variable)=="Sex"), y = 1.03, label = "Women") +
annotate("text",x = which(unique(longtableOF$variable)=="Sex"), y = -0.03, label = "Men") +
annotate("text", x = which(unique(longtableOF$variable)=="Sweetner"), y = 1.03, label = "SU") +
annotate("text",x = which(unique(longtableOF$variable)=="Sweetner"), y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSex, rows = c("M", "F"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0, ymax=0.25)+
ggtitle(paste("Boxplot Cluster Analysis ", deparse(substitute(listaTablas))))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Time)
}
else {
tabla_clusters <- tablaNumMet %>% tibble::add_column(clusters = model_clustering_OF$classification,
Sweetener = rescale(as.numeric(listaTablas$Sweetener)),
Sex = rescale(as.numeric(listaTablas$Sex)),
Time = listaTablas$Time) %>%
select(everything(), Sweetener, Sex, Time, clusters)
tableSex <- table(tabla_clusters$Sex, tabla_clusters$clusters)#tabla_clusters %>% count(Sex, clusters)
tableEdulcorante <- table(tabla_clusters$Sweetener, tabla_clusters$clusters) #tabla_clusters %>% count(Sweetener, clusters)
tabla_clusters$Sweetener <- rescale(as.numeric(tabla_clusters$Sweetener))
tabla_clusters$Sex <- rescale(as.numeric(tabla_clusters$Sex))
longtableOF <- melt(tabla_clusters, id = c("clusters", "Time"))
longtableOF <- tabla_clusters %>% gather(variable, values, -clusters, -Time, )
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = which(unique(longtableOF$variable)=="Sex"), y = 1.03, label = "Women") +
annotate("text",x = which(unique(longtableOF$variable)=="Sex"), y = -0.03, label = "Men") +
annotate("text", x = which(unique(longtableOF$variable)=="Sweetner"), y = 1.03, label = "SU") +
annotate("text",x = which(unique(longtableOF$variable)=="Sweetner"), y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSex, rows = c("M", "F"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0, ymax=0.25)+
ggtitle(paste("Boxplot Cluster Analysis ", deparse(substitute(listaTablas))))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Time)
}
}
clusterNPlot(orinaAnt, anthropometric = F)
clusterNPlot <- function(listaTablas, anthropometric){
tablaNumMet <- listaTablas  %>%
dplyr::select(-c(anthro, Sweetener, Sex, numVol, Time))
model_clustering_OF <- Mclust(tablaNumMet)
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
if(anthropometric){
tabla_clusters <- tablaNumMet %>% tibble::add_column(Peso = listaTablas$Peso,
IMC = listaTablas$IMC,
Grasa = listaTablas$Grasa,
IRCV = listaTablas$IRCV,
Bpmin = listaTablas$Bpmin,
Bpmax = listaTablas$Bpmax,
Frec = listaTablas$Frec,
clusters = model_clustering_OF$classification,
Sweetener = rescale(as.numeric(listaTablas$Sweetener)),
Sex = rescale(as.numeric(listaTablas$Sex)),
Time = listaTablas$Time) %>%
select(everything(),Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Sweetener, Sex, Time, clusters)
tableSex <- table(tabla_clusters$Sex, tabla_clusters$clusters)#tabla_clusters %>% count(Sex, clusters)
tableEdulcorante <- table(tabla_clusters$Sweetener, tabla_clusters$clusters) #tabla_clusters %>% count(Sweetener, clusters)
tabla_clusters$Sweetener <- rescale(as.numeric(tabla_clusters$Sweetener))
tabla_clusters$Sex <- rescale(as.numeric(tabla_clusters$Sex))
longtableOF <- melt(tabla_clusters, id = c("clusters", "Time"))
longtableOF <- tabla_clusters %>% gather(variable, values, -clusters, -Time, )
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = which(unique(longtableOF$variable)=="Sex"), y = 1.03, label = "Women") +
annotate("text",x = which(unique(longtableOF$variable)=="Sex"), y = -0.03, label = "Men") +
annotate("text", x = which(unique(longtableOF$variable)=="Sweetner"), y = 1.03, label = "SU") +
annotate("text",x = which(unique(longtableOF$variable)=="Sweetner"), y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSex, rows = c("M", "F"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0, ymax=0.25)+
ggtitle(paste("Boxplot Cluster Analysis ", deparse(substitute(listaTablas))))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Time)
}
else {
tabla_clusters <- tablaNumMet %>% tibble::add_column(clusters = model_clustering_OF$classification,
Sweetener = rescale(as.numeric(listaTablas$Sweetener)),
Sex = rescale(as.numeric(listaTablas$Sex)),
Time = listaTablas$Time) %>%
select(everything(), Sweetener, Sex, Time, clusters)
tableSex <- table(tabla_clusters$Sex, tabla_clusters$clusters)#tabla_clusters %>% count(Sex, clusters)
tableEdulcorante <- table(tabla_clusters$Sweetener, tabla_clusters$clusters) #tabla_clusters %>% count(Sweetener, clusters)
tabla_clusters$Sweetener <- rescale(as.numeric(tabla_clusters$Sweetener))
tabla_clusters$Sex <- rescale(as.numeric(tabla_clusters$Sex))
longtableOF <- melt(tabla_clusters, id = c("clusters", "Time"))
longtableOF <- tabla_clusters %>% gather(variable, values, -clusters, -Time, )
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = which(unique(longtableOF$variable)=="Sex"), y = 1.03, label = "Women") +
annotate("text",x = which(unique(longtableOF$variable)=="Sex"), y = -0.03, label = "Men") +
annotate("text", x = which(unique(longtableOF$variable)=="Sweetner"), y = 1.03, label = "SU") +
annotate("text",x = which(unique(longtableOF$variable)=="Sweetner"), y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSex, rows = c("M", "F"), theme = ttheme_default(base_size = 8)), xmin= 5,xmax=7, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 8)), xmin= 5,xmax=7, ymin=0, ymax=0.25)+
ggtitle(paste("Boxplot Cluster Analysis ", deparse(substitute(listaTablas))))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Time)
}
}
clusterNPlot(orinaAnt, anthropometric = F)
orinaAnt$numVol
for i in nrow(orinaAnt){
print(i)
}
for( i in nrow(orinaAnt)){
print(i)
}
for(i in seq(1,nrow(orinaAnt))){
print(i)
}
print(orinaAnt$numVol[i])
for(i in seq(1,nrow(orinaAnt))){
print(orinaAnt$numVol[i])
}
orinaAnt %>% group_by("numVol")
orinaAnt %>% select(-anthro) %>% group_by("numVol")
orinaAnt %>% select(-anthro) %>% group_by(numVol)
View(orinaAnt %>% select(-anthro) %>% group_by(numVol))
View(orinaAnt %>% select(-anthro) %>% arrange(desc(numVol))
)
counts <- data.frame(table(orinaAnt$numVol))
orinaAntDupl <- orinaAnt[orinaAnt$numVol %in% counts$Var1[counts$Freq > 1],]
View(orinaAntDupl %>% select(-anthro) %>% arrange(numVol))
for(i in seq(1,nrow(orinaAnt))){
if (orinaAntDupl$numVol[i] == orinaAntDupl$numVol[i+1]){
rowMeans(c(orinaAntDupl$numVol[i], orinaAntDupl$numVol[i+1]))
}}
for(i in seq(1,nrow(orinaAntDupl))){
if (orinaAntDupl$numVol[i] == orinaAntDupl$numVol[i+1]){
rowMeans(c(orinaAntDupl$numVol[i], orinaAntDupl$numVol[i+1]))
}
}
orinaAntDupl$numVol[i]
orinaAntDupl$numVol[i+1]
for(i in seq(1,nrow(orinaAntDupl))){
if (orinaAntDupl$numVol[i] == orinaAntDupl$numVol[i+1]){
rowMeans(c(orinaAntDupl$numVol[i], orinaAntDupl$numVol[i+1]))
}
}
for(i in seq(1,nrow(orinaAntDupl))){
if (orinaAntDupl$numVol[i] == orinaAntDupl$numVol[i+1]){
print(rowMeans(c(orinaAntDupl$numVol[i], orinaAntDupl$numVol[i+1])))
}
}
orinaAntDupl$numVol[i] == orinaAntDupl$numVol[i]
orinaAntDupl$numVol[i] == orinaAntDupl$numVol[i+1]
while (i < 81){
for(i in seq(1,nrow(orinaAntDupl))){
if (orinaAntDupl$numVol[i] == orinaAntDupl$numVol[i+1]){
print(rowMeans(c(orinaAntDupl$numVol[i], orinaAntDupl$numVol[i+1])))
}
}
}
seq(1,nrow(orinaAntDupl)
)
while (i < 81){
for(i in seq(1,nrow(orinaAntDupl))){
if (orinaAntDupl$numVol[i] == orinaAntDupl$numVol[i+1]){
print(rowMeans(c(orinaAntDupl$numVol[i], orinaAntDupl$numVol[i+1])))
}
}
}
orinaAntDupl$numVol[1] == orinaAntDupl$numVol[1+1]
orinaAntDupl$numVol[1+1]
orinaAntDupl$numVol[1]
orinaAntDuplArr <- orinaAntDupl %>% select(-anthro) %>% arrange(numVol)
while (i < 81){
for(i in seq(1,nrow(orinaAntDuplArr))){
if (orinaAntDuplArr$numVol[i] == orinaAntDuplArr$numVol[i+1]){
print(rowMeans(c(orinaAntDuplArr$numVol[i], orinaAntDuplArr$numVol[i+1])))
}
}
}
while (i < 81){
for(i in seq(1,nrow(orinaAntDuplArr))){
if (orinaAntDuplArr$numVol[i] == orinaAntDuplArr$numVol[i+1]){
rowMeans(c(orinaAntDuplArr$numVol[i], orinaAntDuplArr$numVol[i+1]))
}
}
}
while (i < 81){
for(i in seq(1,nrow(orinaAntDuplArr))){
if (orinaAntDuplArr$numVol[i] == orinaAntDuplArr$numVol[i+1]){
rowMeans(c(orinaAntDuplArr[i], orinaAntDuplArr[i+1]))
}
}
}
orinaAntDuplArr[i]
orinaAntDuplArr[i,]
while (i < 81){
for(i in seq(1,nrow(orinaAntDuplArr))){
if (orinaAntDuplArr$numVol[i] == orinaAntDuplArr$numVol[i+1]){
mean(c(orinaAntDuplArr[i,], orinaAntDuplArr[i+1,]))
}
}
}
warnings()
while (i < 81){
for(i in seq(1,nrow(orinaAntDuplArr))){
if (orinaAntDuplArr$numVol[i] == orinaAntDuplArr$numVol[i+1]){
nuVector <- mean(c(orinaAntDuplArr[i,], orinaAntDuplArr[i+1,]))
print(nuVector)
}
}
}
while (i < 81){
for(i in seq(1,nrow(orinaAntDuplArr))){
if (orinaAntDuplArr$numVol[i] == orinaAntDuplArr$numVol[i+1]){
nuVector <- rowMeans(c(orinaAntDuplArr[i,], orinaAntDuplArr[i+1,]))
print(nuVector)
}
}
}
c(orinaAntDuplArr[i,],orinaAntDuplArr[i-1,])
c(orinaAntDuplArr[i,],orinaAntDuplArr[i+1,])
orinaAntDuplArr[i+1,]
orinaAntDuplArr[i,]
as.data.frame(orinaAntDuplArr[i,],orinaAntDuplArr[i+1,])
data.frame(orinaAntDuplArr[i,],orinaAntDuplArr[i+1,])
rowMeans(data.frame(orinaAntDuplArr[i,],orinaAntDuplArr[i+1,]))
if (orinaAntDuplArr$numVol[i] == orinaAntDuplArr$numVol[i+1]){
nuVector <- rowMeans(data.frame(as.numeric(orinaAntDuplArr[i,]), as.numeric(orinaAntDuplArr[i+1,])))
print(nuVector)
}
install.packages("clust.bin.pair")
library(clus.bin.pair)
library("clus.bin.pair")
library("clust.bin.pair")
paired.to.contingency(orinaAnt$numVol, orinaAnt %>% filter(Time=="0"), orinaAnt %>% filter(Time=="Final"))
warnings
warnings()
orinaAntDupl %>% filter(Time=="0")
orinaAntDupl %>% filter(Time=="Final")
paired.to.contingency(orinaAntDupl$numVol, orinaAntDupl %>% filter(Time=="0"), orinaAntDupl %>% filter(Time=="Final"))
orinaAntDupl$numVol
install.packages("TSClust")
install.packages("TSclust")
library(TSclust)
orinaAntDupl_0 <- orinaAntDupl %>% filter(Time == "0")
orinaAntDupl_F<- orinaAntDupl %>% filter(Time == "Final")
diss.DTWARP(orinaAntDupl_0, orinaAntDupl_F)
orinaAntDupl_0 <- orinaAntDupl %>% filter(Time == "0") %>% select((-c(Time, Sweetener, Sex)))
orinaAntDupl_F <- orinaAntDupl %>% filter(Time == "Final") %>% select(-c(Time, Sweetener, Sex))
diss.DTWARP(orinaAntDupl_0, orinaAntDupl_F)
orinaAntDupl_0
orinaAntDupl_0 <- orinaAntDupl %>% filter(Time == "0") %>% select((-c(Time, Sweetener, Sex,numVol)))
orinaAntDupl_F <- orinaAntDupl %>% filter(Time == "Final") %>% select(-c(Time, Sweetener, Sex, numVol))
diss.DTWARP(orinaAntDupl_0, orinaAntDupl_F)
t(orinaAntDupl_0)
diss.DTWARP(t(orinaAntDupl_0), t(orinaAntDupl_F))
install.packages("dtwclust")
library(dtwclust)
tsclust(lista(t(orinaAntDupl_0), t(orinaAntDupl_F)))
tsclust(list(t(orinaAntDupl_0), t(orinaAntDupl_F)))
tsclust(list(t(orinaAntDupl_0), t(orinaAntDupl_F)), k = 2)
tsclust(c(t(orinaAntDupl_0), t(orinaAntDupl_F)), k = 2)
t(orinaAntDupl_0)
tsclust(t(orinaAntDupl_0), t(orinaAntDupl_F), k = 2)
as.list(orinaAntDupl_0))
as.list(orinaAntDupl_0)
t(as.list(orinaAntDupl_0))
tsclust(as.list(orinaAntDupl_0), k = 2)
as.list(orinaAntDupl_0)
orinaAntDuplArr
t(as.list(orinaAntDuplArr))
tsclust(t(as.list(orinaAntDuplArr)), k = 2)
tsclust(as.list(t(orinaAntDuplArr)), k = 2)
as.list(t(orinaAntDuplArr))
t(orinaAntDuplArr)
listOrinaAnt <- split(orinaAntDuplArr, f = orinaAntDuplArr$numVol)
listOrinaAnt <- split(orinaAntDuplArr, f = orinaAntDuplArr$numVol, drop = T)
tsclust(t(listOrinaAnt), k = 4)
tsclust(listOrinaAnt, k = 4)
listOrinaAnt <- split(orinaAntDuplArr %>% select((-c(Time, Sweetener, Sex,numVol)), f = orinaAntDuplArr$numVol, drop = T)
listOrinaAnt <- split(orinaAntDuplArr %>% select((-c(Time, Sweetener, Sex,numVol))), f = orinaAntDuplArr$numVol, drop = T)
tsclust(listOrinaAnt, k = 4)
tsclust(listOrinaAnt, k = 14)
tsclust(listOrinaAnt, k = 4)
n
tsclust(listOrinaAnt, k = 4)
tsclust(listOrinaAnt, k = 4)
boxplot.stats
skimr::skim("data/mainPlasmaAnt.csv")
read.csv("data/mainPlasmaAnt.csv")
skimr::skim(read.csv("data/mainPlasmaAnt.csv"))
mainPlasmaDesc <- skimr::skim(read.csv("data/mainPlasmaAnt.csv"))
source("scripts/preprocess.R")
install.packages(c("modeest", "psych"))
library(modeest)
library(psych)
mainPlasmaDesc <- skimr::skim(plasmaAnt) %>% add_column(skewness(plasmaAnt))
mainPlasmaDesc <- skimr::skim(plasmaAnt) %>% add_column(skewness(as.numeric(plasmaAnt)))
as.numeric(plasmaAnt)
plasmaAnt
mainPlasmaDesc <- skimr::skim(plasmaAnt) %>%
select(-c(Tiempo, Sexo, Endulzante)) %>%
add_column(skewness(as.numeric(plasmaAnt)))
skimr::skim(plasmaAnt) %>%
select(-c(Tiempo, Sexo, Endulzante))
plasmaAnt
plasmaAnt <- read.csv("data/mainPlasmaAnt.csv") %>%  select(-c(Tiempo, Sexo, Endulzante))
read.csv("data/mainPlasmaAnt.csv")
plasmaAnt <- read.csv("data/mainPlasmaAnt.csv") %>% select(-c(Time, Sex, Sweetener))
plasmaAnt <- read.csv("data/mainPlasmaAnt.csv") %>% select(-c(Time, Sex, Sweetener))
mainPlasmaDesc <- skimr::skim(plasmaAnt) %>%
add_column(skewness(as.numeric(plasmaAnt)))
mainPlasmaDesc <- skimr::skim(plasmaAnt) %>%
add_column(skewness(plasmaAnt))
skewness(plasmaAnt)
plasmaAnt
plasmaAnt <- read.csv("data/mainPlasmaAnt.csv") %>% select(-c(Time, Sex, Sweetener, numVol))
mainPlasmaDesc <- skimr::skim(plasmaAnt) %>%
add_column(skewness(plasmaAnt))
plasmaAnt
mainPlasmaDesc <- skimr::skim(plasmaAnt) %>%
add_column(skewness(as.numeric(plasmaAnt)))
plasmaAnt <- read.csv("data/mainPlasmaAnt.csv") %>% select(-c(Time, Sex, Sweetener, numVol, X))
mainPlasmaDesc <- skimr::skim(plasmaAnt) %>%
add_column(skewness(as.numeric(plasmaAnt)))
mainPlasmaDesc <- skimr::skim(plasmaAnt) %>%
add_column(skewness(plasmaAnt))
apply(plasmaAnt, MARGIN = 2, skewness)
mainPlasmaDesc <- skimr::skim(plasmaAnt) %>%
add_column(apply(plasmaAnt, MARGIN = 2, skewness))
(
mainPlasmaDesc
mainPlasmaDesc
mainPlasmaDesc <- skimr::skim(plasmaAnt) %>%
add_column(skewness = apply(plasmaAnt, MARGIN = 2, skewness))
tabla <- read.csv("data/cronicoOrinaAnt_Antro.csv", sep = ";", dec = ",")
tabla <- read.csv("data/cronicoOrinaAnt_Antro.csv")
View(tabla)
tabla2 <- read.csv("data/mainPlasmaAnt.csv")

model_clustering_OF <- Mclust(tablaNumMet)
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_clusters <- tablaNumMet %>% tibble::add_column(Peso = listaTablas$tablaNum$Peso,
IMC = listaTablas$tablaNum$IMC,
Grasa = listaTablas$tablaNum$Grasa,
IRCV = listaTablas$tablaNum$IRCV,
Bpmin = listaTablas$tablaNum$Bpmin,
Bpmax = listaTablas$tablaNum$Bpmax,
Frec = listaTablas$tablaNum$Frec,
clusters = model_clustering_OF$classification,
Endulzante = rescale(as.numeric(tablaFactorsAll$Endulzante)),
Sexo = rescale(as.numeric(tablaFactorsAll$Sexo)),
Tiempo = tablaFactorsAll$Tiempo) %>%
select(everything(),Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante, Sexo, Tiempo, clusters)
tableSexo <- table(tabla_clusters$Sexo, tabla_clusters$clusters)#tabla_clusters %>% count(Sexo, clusters)
tableEdulcorante <- table(tabla_clusters$Endulzante, tabla_clusters$clusters) #tabla_clusters %>% count(Endulzante, clusters)
tabla_clusters$Endulzante <- rescale(as.numeric(tabla_clusters$Endulzante))
tabla_clusters$Sexo <- rescale(as.numeric(tabla_clusters$Sexo))
longtableOF <- melt(tabla_clusters, id = c("clusters", "Tiempo"))
longtableOF <- tabla_clusters %>% gather(variable, values, -clusters, -Tiempo, )
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = which(unique(longtableOF$variable)=="Sexo"), y = 1.03, label = "Mujer") +
annotate("text",x = which(unique(longtableOF$variable)=="Sexo"), y = -0.03, label = "Hombre") +
annotate("text", x = which(unique(longtableOF$variable)=="Endulzante"), y = 1.03, label = "SU") +
annotate("text",x = which(unique(longtableOF$variable)=="Endulzante"), y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexo, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0, ymax=0.25)+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
}
clusterNPlot(orinaAnt)
paste("Boxplot Cluster Analysis Orina Flavonoids ", deparse(listaTablas))
deparse(pruebauwu)
deparse(pruebaWwu)
deparse(pruebaUwu)
parse(pruebaUwu)
deparse(substitute(pruebaUwu))
clusterNPlot <- function(listaTablas){
tablaNumMet <- listaTablas$tablaNum %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tablaFactorsAll <-listaTablas$tablaFactors
model_clustering_OF <- Mclust(tablaNumMet)
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_clusters <- tablaNumMet %>% tibble::add_column(Peso = listaTablas$tablaNum$Peso,
IMC = listaTablas$tablaNum$IMC,
Grasa = listaTablas$tablaNum$Grasa,
IRCV = listaTablas$tablaNum$IRCV,
Bpmin = listaTablas$tablaNum$Bpmin,
Bpmax = listaTablas$tablaNum$Bpmax,
Frec = listaTablas$tablaNum$Frec,
clusters = model_clustering_OF$classification,
Endulzante = rescale(as.numeric(tablaFactorsAll$Endulzante)),
Sexo = rescale(as.numeric(tablaFactorsAll$Sexo)),
Tiempo = tablaFactorsAll$Tiempo) %>%
select(everything(),Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante, Sexo, Tiempo, clusters)
tableSexo <- table(tabla_clusters$Sexo, tabla_clusters$clusters)#tabla_clusters %>% count(Sexo, clusters)
tableEdulcorante <- table(tabla_clusters$Endulzante, tabla_clusters$clusters) #tabla_clusters %>% count(Endulzante, clusters)
tabla_clusters$Endulzante <- rescale(as.numeric(tabla_clusters$Endulzante))
tabla_clusters$Sexo <- rescale(as.numeric(tabla_clusters$Sexo))
longtableOF <- melt(tabla_clusters, id = c("clusters", "Tiempo"))
longtableOF <- tabla_clusters %>% gather(variable, values, -clusters, -Tiempo, )
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = which(unique(longtableOF$variable)=="Sexo"), y = 1.03, label = "Mujer") +
annotate("text",x = which(unique(longtableOF$variable)=="Sexo"), y = -0.03, label = "Hombre") +
annotate("text", x = which(unique(longtableOF$variable)=="Endulzante"), y = 1.03, label = "SU") +
annotate("text",x = which(unique(longtableOF$variable)=="Endulzante"), y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexo, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0, ymax=0.25)+
ggtitle(paste("Boxplot Cluster Analysis Orina Flavonoids ", deparse(substitute(listaTablas))))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
}
clusterNPlot(orinaAnt)
clusterNPlot <- function(listaTablas){
tablaNumMet <- listaTablas$tablaNum %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tablaFactorsAll <-listaTablas$tablaFactors
model_clustering_OF <- Mclust(tablaNumMet)
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_clusters <- tablaNumMet %>% tibble::add_column(Peso = listaTablas$tablaNum$Peso,
IMC = listaTablas$tablaNum$IMC,
Grasa = listaTablas$tablaNum$Grasa,
IRCV = listaTablas$tablaNum$IRCV,
Bpmin = listaTablas$tablaNum$Bpmin,
Bpmax = listaTablas$tablaNum$Bpmax,
Frec = listaTablas$tablaNum$Frec,
clusters = model_clustering_OF$classification,
Endulzante = rescale(as.numeric(tablaFactorsAll$Endulzante)),
Sexo = rescale(as.numeric(tablaFactorsAll$Sexo)),
Tiempo = tablaFactorsAll$Tiempo) %>%
select(everything(),Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante, Sexo, Tiempo, clusters)
tableSexo <- table(tabla_clusters$Sexo, tabla_clusters$clusters)#tabla_clusters %>% count(Sexo, clusters)
tableEdulcorante <- table(tabla_clusters$Endulzante, tabla_clusters$clusters) #tabla_clusters %>% count(Endulzante, clusters)
tabla_clusters$Endulzante <- rescale(as.numeric(tabla_clusters$Endulzante))
tabla_clusters$Sexo <- rescale(as.numeric(tabla_clusters$Sexo))
longtableOF <- melt(tabla_clusters, id = c("clusters", "Tiempo"))
longtableOF <- tabla_clusters %>% gather(variable, values, -clusters, -Tiempo, )
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = which(unique(longtableOF$variable)=="Sexo"), y = 1.03, label = "Mujer") +
annotate("text",x = which(unique(longtableOF$variable)=="Sexo"), y = -0.03, label = "Hombre") +
annotate("text", x = which(unique(longtableOF$variable)=="Endulzante"), y = 1.03, label = "SU") +
annotate("text",x = which(unique(longtableOF$variable)=="Endulzante"), y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexo, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0, ymax=0.25)+
ggtitle(paste("Boxplot Cluster Analysis ", deparse(substitute(listaTablas))))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
}
clusterNPlot(orinaAnt)
clusterNPlot(orinaAnt)
clusterNPlot(orinaFlav)
clusterNPlot(plasmaAnt)
clusterNPlot(plasmaFlav_adjusted)
install.packages("QuantPsyc")
tablaNumMet1 <- orinaFlav$tablaNum %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
library(tidyverse)
library(rstatix)
library(scales)
library(ggpubr)
library(factoextra)
library(GGally)
library(plotly)
library(FactoMineR)
library(cluster)
library(mclust)
library(reshape2)
library(gridExtra)
clusterNPlot <- function(listaTablas){
tablaNumMet <- listaTablas$tablaNum %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tablaFactorsAll <-listaTablas$tablaFactors
model_clustering_OF <- Mclust(tablaNumMet)
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_clusters <- tablaNumMet %>% tibble::add_column(Peso = listaTablas$tablaNum$Peso,
IMC = listaTablas$tablaNum$IMC,
Grasa = listaTablas$tablaNum$Grasa,
IRCV = listaTablas$tablaNum$IRCV,
Bpmin = listaTablas$tablaNum$Bpmin,
Bpmax = listaTablas$tablaNum$Bpmax,
Frec = listaTablas$tablaNum$Frec,
clusters = model_clustering_OF$classification,
Endulzante = rescale(as.numeric(tablaFactorsAll$Endulzante)),
Sexo = rescale(as.numeric(tablaFactorsAll$Sexo)),
Tiempo = tablaFactorsAll$Tiempo) %>%
select(everything(),Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante, Sexo, Tiempo, clusters)
tableSexo <- table(tabla_clusters$Sexo, tabla_clusters$clusters)#tabla_clusters %>% count(Sexo, clusters)
tableEdulcorante <- table(tabla_clusters$Endulzante, tabla_clusters$clusters) #tabla_clusters %>% count(Endulzante, clusters)
tabla_clusters$Endulzante <- rescale(as.numeric(tabla_clusters$Endulzante))
tabla_clusters$Sexo <- rescale(as.numeric(tabla_clusters$Sexo))
longtableOF <- melt(tabla_clusters, id = c("clusters", "Tiempo"))
longtableOF <- tabla_clusters %>% gather(variable, values, -clusters, -Tiempo, )
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = which(unique(longtableOF$variable)=="Sexo"), y = 1.03, label = "Mujer") +
annotate("text",x = which(unique(longtableOF$variable)=="Sexo"), y = -0.03, label = "Hombre") +
annotate("text", x = which(unique(longtableOF$variable)=="Endulzante"), y = 1.03, label = "SU") +
annotate("text",x = which(unique(longtableOF$variable)=="Endulzante"), y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexo, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0, ymax=0.25)+
ggtitle(paste("Boxplot Cluster Analysis ", deparse(substitute(listaTablas))))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
}
tablaNumMet1 <- orinaFlav$tablaNum %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
library(QuantPsyc)
mult.norm(tablaNumMet1)
multivarTest <- mult.norm(tablaNumMet1)$mult.test
multivarTest <- mult.norm(tablaNumMet1)$mult.test
multivarTest
multivarTest[3]
multivarTest[4]
multivarTest[5]
multivarTest[6]
multivarTest[0]
multivarTest[1]
install.packages("energy")
library(energu)
library(energy)
mvnorm.etest(tablaNumMet1, R=100)
mvnorm.etest(tablaNumMet1, R=1000)
checkMultVar <- function(listaTabla) {tablaNumMet1 <- listaTablas$tablaNum %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
multivarTest <- mult.norm(tablaNumMet1)$mult.test
print(multivarTest)
print (mvnorm.etest(tablaNumMet1, R=1000))
}
checkMultVar(orinaAnt)
checkMultVar <- function(listaTablas) {
tablaNumMet1 <- listaTablas$tablaNum %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
multivarTest <- mult.norm(tablaNumMet1)$mult.test
print(multivarTest)
print (mvnorm.etest(tablaNumMet1, R=1000))
}
checkMultVar(orinaAnt)
checkMultVar <- function(listaTablas) {
tablaNumMet1 <- listaTablas$tablaNum %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
multivarTest <- mult.norm(tablaNumMet1)$mult.test
print(multivarTest)
print (mvnorm.etest(tablaNumMet1, R=1000))
}
checkMultVar(orinaAnt)
checkMultVar <- function(listaTablas) {
tablaNumMet1 <- listaTablas$tablaNum
multivarTest <- mult.norm(tablaNumMet1)$mult.test
print(multivarTest)
print (mvnorm.etest(tablaNumMet1, R=1000))
}
checkMultVar(orinaAnt)
checkMultVar <- function(listaTablas) {
tablaNumMet1 <- listaTablas$tablaNum %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
multivarTest <- mult.norm(tablaNumMet1)$mult.test
print(multivarTest)
print (mvnorm.etest(tablaNumMet1, R=1000))
}
checkMultVar(orinaAnt)
clusterNPlot(orinaAnt)
clusterNPlot(orinaFlav)
checkMultVar <- function(listaTablas) {
tablaNumMet1 <- listaTablas$tablaNum %>% select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
multivarTest <- mult.norm(tablaNumMet1)$mult.test
print(multivarTest)
print (mvnorm.etest(tablaNumMet1, R=1000))
}
checkMultVar(orinaAnt)
checkMultVar <- function(listaTablas) {
print(listaTablas$tablaNum)
tablaNumMet1 <- listaTablas$tablaNum %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
multivarTest <- mult.norm(tablaNumMet1)$mult.test
print(multivarTest)
print (mvnorm.etest(tablaNumMet1, R=1000))
}
checkMultVar(orinaAnt)
checkMultVar <- function(listaTablas) {
print(listaTablas$tablaNum)
tablaNumMet1 <- listaTablas$tablaNum %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
multivarTest <- mult.norm(tablaNumMet1)$mult.test
print(multivarTest)
print (mvnorm.etest(tablaNumMet1, R=1000))
}
checkMultVar(orinaAnt)
clusterNPlot(orinaAnt)
select
library(tidyverse)
clusterNPlot <- function(listaTablas){
tablaNumMet <- listaTablas$tablaNum %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tablaFactorsAll <-listaTablas$tablaFactors
model_clustering_OF <- Mclust(tablaNumMet)
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_clusters <- tablaNumMet %>% tibble::add_column(Peso = listaTablas$tablaNum$Peso,
IMC = listaTablas$tablaNum$IMC,
Grasa = listaTablas$tablaNum$Grasa,
IRCV = listaTablas$tablaNum$IRCV,
Bpmin = listaTablas$tablaNum$Bpmin,
Bpmax = listaTablas$tablaNum$Bpmax,
Frec = listaTablas$tablaNum$Frec,
clusters = model_clustering_OF$classification,
Endulzante = rescale(as.numeric(tablaFactorsAll$Endulzante)),
Sexo = rescale(as.numeric(tablaFactorsAll$Sexo)),
Tiempo = tablaFactorsAll$Tiempo) %>%
select(everything(),Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante, Sexo, Tiempo, clusters)
tableSexo <- table(tabla_clusters$Sexo, tabla_clusters$clusters)#tabla_clusters %>% count(Sexo, clusters)
tableEdulcorante <- table(tabla_clusters$Endulzante, tabla_clusters$clusters) #tabla_clusters %>% count(Endulzante, clusters)
tabla_clusters$Endulzante <- rescale(as.numeric(tabla_clusters$Endulzante))
tabla_clusters$Sexo <- rescale(as.numeric(tabla_clusters$Sexo))
longtableOF <- melt(tabla_clusters, id = c("clusters", "Tiempo"))
longtableOF <- tabla_clusters %>% gather(variable, values, -clusters, -Tiempo, )
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = which(unique(longtableOF$variable)=="Sexo"), y = 1.03, label = "Mujer") +
annotate("text",x = which(unique(longtableOF$variable)=="Sexo"), y = -0.03, label = "Hombre") +
annotate("text", x = which(unique(longtableOF$variable)=="Endulzante"), y = 1.03, label = "SU") +
annotate("text",x = which(unique(longtableOF$variable)=="Endulzante"), y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexo, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0, ymax=0.25)+
ggtitle(paste("Boxplot Cluster Analysis ", deparse(substitute(listaTablas))))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
}
checkMultVar <- function(listaTablas) {
print(listaTablas$tablaNum)
tablaNumMet1 <- listaTablas$tablaNum %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
multivarTest <- mult.norm(tablaNumMet1)$mult.test
print(multivarTest)
print (mvnorm.etest(tablaNumMet1, R=1000))
}
checkMultVar(orinaAnt)
checkMultVar <- function(listaTablas) {
print(listaTablas$tablaNum)
tablaNumMet1 <- listaTablas$tablaNum %>%
dplyr::select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
multivarTest <- mult.norm(tablaNumMet1)$mult.test
print(multivarTest)
print (mvnorm.etest(tablaNumMet1, R=1000))
}
checkMultVar(orinaAnt)
clusterNPlot <- function(listaTablas){
tablaNumMet <- listaTablas$tablaNum %>%
dplyr::select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tablaFactorsAll <-listaTablas$tablaFactors
model_clustering_OF <- Mclust(tablaNumMet)
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_clusters <- tablaNumMet %>% tibble::add_column(Peso = listaTablas$tablaNum$Peso,
IMC = listaTablas$tablaNum$IMC,
Grasa = listaTablas$tablaNum$Grasa,
IRCV = listaTablas$tablaNum$IRCV,
Bpmin = listaTablas$tablaNum$Bpmin,
Bpmax = listaTablas$tablaNum$Bpmax,
Frec = listaTablas$tablaNum$Frec,
clusters = model_clustering_OF$classification,
Endulzante = rescale(as.numeric(tablaFactorsAll$Endulzante)),
Sexo = rescale(as.numeric(tablaFactorsAll$Sexo)),
Tiempo = tablaFactorsAll$Tiempo) %>%
select(everything(),Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante, Sexo, Tiempo, clusters)
tableSexo <- table(tabla_clusters$Sexo, tabla_clusters$clusters)#tabla_clusters %>% count(Sexo, clusters)
tableEdulcorante <- table(tabla_clusters$Endulzante, tabla_clusters$clusters) #tabla_clusters %>% count(Endulzante, clusters)
tabla_clusters$Endulzante <- rescale(as.numeric(tabla_clusters$Endulzante))
tabla_clusters$Sexo <- rescale(as.numeric(tabla_clusters$Sexo))
longtableOF <- melt(tabla_clusters, id = c("clusters", "Tiempo"))
longtableOF <- tabla_clusters %>% gather(variable, values, -clusters, -Tiempo, )
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = which(unique(longtableOF$variable)=="Sexo"), y = 1.03, label = "Mujer") +
annotate("text",x = which(unique(longtableOF$variable)=="Sexo"), y = -0.03, label = "Hombre") +
annotate("text", x = which(unique(longtableOF$variable)=="Endulzante"), y = 1.03, label = "SU") +
annotate("text",x = which(unique(longtableOF$variable)=="Endulzante"), y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexo, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 8)), xmin= 11,xmax=13, ymin=0, ymax=0.25)+
ggtitle(paste("Boxplot Cluster Analysis ", deparse(substitute(listaTablas))))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
}
checkMultVar <- function(listaTablas) {
tablaNumMet1 <- listaTablas$tablaNum %>%
dplyr::select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
multivarTest <- mult.norm(tablaNumMet1)$mult.test
print(multivarTest)
print (mvnorm.etest(tablaNumMet1, R=1000))
}
checkMultVar(orinaAnt)
checkMultVar(plasmaaAnt)
checkMultVar(plasmaAnt)
checkMultVar(orinaFlav)
datos <- orinaFlavFactors
ggplot(data = orinaFlavFactors, aes(x = Peso)) +
geom_histogram(aes(y = ..density.., fill = ..count..)) +
scale_fill_gradient(low = "#DCDCDC", high = "#7C7C7C") +
stat_function(fun = dnorm, colour = "firebrick",
args = list(mean = mean(orinaFlavFactors$Peso),
sd = sd(orinaFlavFactors$Peso))) +
ggtitle("Histograma con curva normal teórica") +
theme_bw()
datos %>% sample_n_by(EG, Peso, size = 1)
datos <- datos %>%
select(Endulzante, Sexo, Tiempo, numVol, Peso)%>%
group_by(Endulzante, Sexo, Tiempo) %>%
mutate(zscore = scale(EG)) %>%
filter(between(zscore, -1, +2.))
datos <- datos %>%
dplyr::select(Endulzante, Sexo, Tiempo, numVol, Peso)%>%
group_by(Endulzante, Sexo, Tiempo) %>%
mutate(zscore = scale(EG)) %>%
filter(between(zscore, -1, +2.))
bxp <- ggboxplot(
datos, x = "Endulzante", y = "Peso",
color = "Tiempo", pallette = "jco",
facet.by = "Sexo", short.panel.labs = FALSE,
outlier.shape = "p"
)
bxp
datos %>%
select(Endulzante, Sexo, Tiempo, numVol, Peso)%>%
group_by(Endulzante, Sexo, Tiempo) %>%
identify_outliers(Peso)
datos %>%
group_by(Endulzante, Sexo, Tiempo) %>%
shapiro_test(Peso)
ggqqplot(datos, "Peso", ggtheme = theme_bw()) +
facet_grid(Endulzante + Sexo ~Tiempo, labeller="label_both")
res.aov <- anova_test(
data = datos, dv = Peso, wid= numVol,
within = c(Endulzante, Sexo, Tiempo)
)
get_anova_table(res.aov)
lm(Peso~numVol+Tiempo:Endulzante:Sexo, data= datos)
all(is.na(datos$EG))
all(is.na(datos$numVol))
all(is.na(datos$Tiempo))
all(is.na(datos$Sexo))
all(is.na(datos$Endulzante))
set.seed(123)
datos <- orinaFlav$tablaFactors
datos %>% sample_n_by(Sexo, Endulzante, size=1)
str(datos)
datos <- orinaFlav$tablaFactors %>% select (numVol, Sexo, Endulzante, Tiempo, EG)
datos <- orinaFlav$tablaFactors %>% dplyr::select (numVol, Sexo, Endulzante, Tiempo, EG)
datos %>% sample_n_by(Sexo, Endulzante, size=1)
datos %>%
group_by(Sexo, Endulzante, Tiempo) %>%
get_summary_stats(EG, type = "mean_sd")
bxp <- ggboxplot(
datos, x = "Endulzante", y = "EG",
color = "Tiempo", palette = "jco",
facet.by = "Sexo", short.panel.labs = FALSE
)
bxp
datos %>%
group_by(Sexo, Endulzante, Tiempo) %>%
identify_outliers(EG)
boxplot(datos$Endulzante, datos$EG)
bxp_nogg <- boxplot(datos$Endulzante, datos$EG)
bxp_nogg$out
bxp$labels
bxp$layers
bxp$scales
bxp$facet$vars
bxp$facet$vars
datos <- datos[-which(datos$EG %in% bxp_nogg$out),]
datos %>%
group_by(Sexo, Endulzante, Tiempo) %>%
identify_outliers(EG)
bxp <- ggboxplot(
datos, x = "Endulzante", y = "EG",
color = "Tiempo", palette = "jco",
facet.by = "Sexo", short.panel.labs = FALSE
)
bxp
datos %>%
group_by(Sexo, Endulzante, Tiempo) %>%
shapiro_test(EG)
res.aov <- anova.test(
data = datos, dv = EG, wid = numVol,
withing = c(Endulzante, Sexo, Tiempo)
)
res.aov <- anovatest(
data = datos, dv = EG, wid = numVol,
withing = c(Endulzante, Sexo, Tiempo)
)
res.aov <- anova_test(
data = datos, dv = EG, wid = numVol,
withing = c(Endulzante, Sexo, Tiempo)
)
res.aov <- anova_test(
data = datos, dv = EG, wid = numVol,
within = c(Endulzante, Sexo, Tiempo)
)
res.aov <- anova_test(
data = datos, dv = EG, wid = numVol,
within = c(Sexo, Tiempo)
)
res.aov <- anova_test(
data = datos, dv = EG, wid = numVol,
within = c(Endulzante, Tiempo)
)
counts <- data.frame(table(orinaFlavFactors$numVol))
orinaFlavDupl <- orinaFlavFactors[orinaFlavFactors$numVol %in% counts$Var1[counts$Freq > 1],]
anova_pareado_EG <- aov(formula = EG ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = orinaFlavDupl)
plot(anova_pareado_EG)
plot(anova_pareado_EG, 1)
plot(anova_pareado_EG$`numVol:Tiempo`, 1)
plot(anova_pareado_EG$`numVol:Tiempo`)
anova_pareado_EG$`numVol:Tiempo`
plot(anova_pareado_EG$`numVol:Tiempo`$residuals)
plot(anova_pareado_EG$`numVol:Tiempo`)
plot(anova(anova_pareado_EG))
anova(anova_pareado_EG)
anova_pareado_EG
datos
datos[-1]
datos[-4]
datos <- orinaFlav$tablaFactors %>% dplyr::select (numVol, Sexo, Endulzante, Tiempo, EG)
datos[-4]
datos <- as.matrix(datos[-4])
modelo_lm <- lm(datos ~1)
modelo_lm

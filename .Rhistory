print(fviz_contrib(pca_0xM, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo 0 Sexo M",
nombreTabla)))
# PCA TiempoxEndulzante
# PCA SexoxEndulzante
tabla_MxSAx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSAxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSAx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSAxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSTx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSTxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="ST"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSTx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSTxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSUx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSUxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSUx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSUxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
pca_MxSAx0 <- PCA(tabla_MxSAx0, scale.unit=F)
print(fviz_contrib(pca_MxSAx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SA Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSAx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SA Tiempo 0",
nombreTabla)))
pca_MxSAxF <- PCA(tabla_MxSAxF, scale.unit=F)
print(fviz_contrib(pca_MxSAxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SA Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSAxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SA Tiempo F",
nombreTabla)))
pca_FxSAx0 <- PCA(tabla_FxSAx0, scale.unit=F)
print(fviz_contrib(pca_FxSAx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SA Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_FxSAx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SA Tiempo 0",
nombreTabla)))
pca_FxSAxF <- PCA(tabla_FxSAxF, scale.unit=F)
print(fviz_contrib(pca_FxSAxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SA Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_FxSAxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SA Tiempo F",
nombreTabla)))
pca_MxSTx0 <- PCA(tabla_MxSTx0, scale.unit=F)
print(fviz_contrib(pca_MxSTx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante ST Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSTx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante ST Tiempo 0",
nombreTabla)))
pca_MxSTxF <- PCA(tabla_MxSTxF, scale.unit=F)
print(fviz_contrib(pca_MxSTxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante ST Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSTxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante ST Tiempo F",
nombreTabla)))
pca_FxSTx0 <- PCA(tabla_FxSTx0, scale.unit=F)
print(fviz_contrib(pca_FxSTx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante ST Tiempo 0", nombreTabla)))
print(fviz_contrib(pca_FxSTx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante ST Tiempo 0",
nombreTabla)))
pca_FxSTxF <- PCA(tabla_FxSTxF, scale.unit=F)
print(fviz_contrib(pca_FxSTxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante ST Tiempo F", nombreTabla)))
print(fviz_contrib(pca_FxSTxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante ST Tiempo F",
nombreTabla)))
pca_MxSUx0 <- PCA(tabla_MxSUx0, scale.unit=F)
print(fviz_contrib(pca_MxSUx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SU Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSUx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SU Tiempo 0",
nombreTabla)))
pca_MxSUxF <- PCA(tabla_MxSUxF, scale.unit=F)
print(fviz_contrib(pca_MxSUxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SU Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSUxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SU Tiempo F",
nombreTabla)))
pca_FxSUx0 <- PCA(tabla_FxSUx0, scale.unit=F)
print(fviz_contrib(pca_FxSUx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SU Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_FxSUx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SU Tiempo 0",
nombreTabla)))
pca_FxSUxF <- PCA(tabla_FxSUxF, scale.unit=F)
print(fviz_contrib(pca_FxSUxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SU Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_FxSUxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SU Tiempo F",
nombreTabla)))
}
clusterVarios <- function (tabla, nclust) {
nombreTabla <- deparse(quote(tabla))
### Aplicamos clustering
# K-means clustering
set.seed(123)
km_datos_A <- kmeans(x = tabla, centers = nclust)
p1 <- fviz_cluster(object = km_datos_A, data = tabla,
ellipse.type = "norm", geom = "point", main = paste("Resultados clustering kmeans ",
nombreTabla),
stand = FALSE, palette = "jco", show.legend = T)
# PAM clustering
pam_clusters <- pam(x = tabla, k = nclust, metric = "manhattan")
p2 <- fviz_cluster(object = pam_clusters, data = tabla, ellipse.type = "t",
repel = TRUE) +
theme_bw() +
labs(title = "Resultados clustering PAM") +
theme(legend.position = "none")
# fuzzy clustering
fuzzy_cluster <- fanny(x = tabla, k = nclust, diss = FALSE, metric = "manhattan", stand = FALSE)
p3 <- fviz_cluster(object = fuzzy_cluster, repel = TRUE, ellipse.type = "norm",
pallete = "jco") + theme_bw() + labs(title = "Fuzzy Cluster plot")
# Hierarchical clustering
p4 <- fviz_dend(x = hclust(get_dist(tabla, method = "manhattan")), k = nclust, k_colors = "jco",
show_labels = T, main = paste("Datos ", nombreTabla))
model_clustering <- Mclust(tabla)
p5 <- fviz_mclust(object = model_clustering, what = "BIC", pallete = "jco") +
scale_x_discrete(limits = c(1:10))
p6 <- fviz_mclust(model_clustering, what = "classification", geom = "point",
pallete = "jco")
print(p1)
print(p2)
print(p3)
print(p4)
print(p5)
print(p6)
return(model_clustering)
}
set.seed(123)
orinaFlav <- preprocessTablas("data/", "tablaOrinaFlav.csv")
orinaFlavFactors <- orinaFlav$tablaFactors
orinaFlavNum <- orinaFlav$tablaNum
orinaFlavT_0 <- orinaFlav$tabla_Tiempo0
orinaFlavT_F <- orinaFlav$tabla_TiempoF
tabla1 <- orinaFlav$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tabla2 <- orinaAnt$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
orinaAnt <- preprocessTablas("data/", "tablaOrinaAnt.csv")
plasmaAnt <- preprocessTablas("data/", "tablaplasmaAnt.csv")
tabla1 <- orinaFlav$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tabla2 <- orinaAnt$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
tabla3 <- plasmaAnt$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
tabla_antro <- plasmaFlav$tablaFactors %>%
select(c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
plasmaFlav <- preprocessTablas("data/", "tablaplasmaFlav.csv")
tabla_antro <- plasmaFlav$tablaFactors %>%
select(c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tabla_merge <- tabla_antro %>% inner_join(tabla1) %>% inner_join(tabla2) %>%
inner_join(tabla3,by ="numVol")
tabla_merge <- tabla_antro %>% inner_join(tabla1) #%>% inner_join(tabla2) %>%
View(tabla_merge)
tabla_merge <- tabla_antro %>% left_join(tabla1) #%>% inner_join(tabla2) %>%
tabla_merge <- tabla_antro %>% right_join(tabla1) #%>% inner_join(tabla2) %>%
tabla_merge <- tabla_antro %>% full_join(tabla1) #%>% inner_join(tabla2) %>%
tabla_merge <- tabla_antro %>% outer_join(tabla1) #%>% inner_join(tabla2) %>%
tabla_merge <- tabla_antro %>% right_join(tabla1) #%>% inner_join(tabla2) %>%
tabla_merge <- tabla_antro %>% right_join(tabla1, na_matches = "never") #%>% inner_join(tabla2) %>%
tabla_merge <- full_join(tabla_antro %>% group_by(numVol) %>% mutate(id = row_number()),
tabla1 %>% group_by(numVol) %>% mutate(id = row_number()),
by = c(numVol, id))
tabla_antro %>% group_by(numVol) %>% mutate(id = row_number()
)
tabla1 %>% group_by(numVol) %>% mutate(id = row_number())
tabla_merge <- full_join(tabla_antro %>% group_by(numVol) %>% mutate(id = row_number()),
tabla1 %>% group_by(numVol) %>% mutate(id = row_number()),
by = c(numVol, id))
tabla_merge <- full_join(tabla_antro %>% group_by(numVol) %>% mutate(id = row_number()),
tabla1 %>% group_by(numVol) %>% mutate(id = row_number()),
by = c("numVol", "id"))
View(tabla_merge)
tabla_merge <- full_join( full_join(tabla_antro %>% group_by(numVol) %>% mutate(id = row_number()),
tabla1 %>% group_by(numVol) %>% mutate(id = row_number()),
by = c("numVol", "id")), tabla2 %>% group_by(numVol) %>% mutate(id = row_number())
, by = c("numVol", "id"))
tabla_merge <- full_join( full_join( full_join(tabla_antro %>% group_by(numVol) %>% mutate(id = row_number()),
tabla1 %>% group_by(numVol) %>% mutate(id = row_number()),
by = c("numVol", "id")),
tabla2 %>% group_by(numVol) %>% mutate(id = row_number())
, by = c("numVol", "id")),
tabla3 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id"))
tabla_merge <- na.omit(full_join( full_join( full_join(tabla_antro %>% group_by(numVol) %>% mutate(id = row_number()),
tabla1 %>% group_by(numVol) %>% mutate(id = row_number()),
by = c("numVol", "id")),
tabla2 %>% group_by(numVol) %>% mutate(id = row_number())
, by = c("numVol", "id")),
tabla3 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id")) )
tabla_merge
model_clustering_OF <- Mclust(tabla_merge)
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tableSexoOF <- table(tabla_merge_clusters$Sexo,tabla_merge_clusters$clusters)
tabla_merge_clusters <- cbind(tabla_merge, clusters = as.factor(model_clustering_OF$classification),
Endulzante = tabla_merge$Endulzante,
Sexo = tabla_merge$Sexo,
Tiempo = tabla_merge$Tiempo)
tabla_merge
tabla_merge %>% select(-c(Endulzante,
Sexo, Tiempo))
model_clustering_OF <- Mclust(tabla_merge %>% select(-c(Endulzante, Sexo, Tiempo)))
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_merge_clusters <- cbind(tabla_merge, clusters = as.factor(model_clustering_OF$classification))
tableSexoOF <- table(tabla_merge_clusters$Sexo,tabla_merge_clusters$clusters)
tableEdulcoranteOF <- table(tabla_merge_clusters$Endulzante,tabla_merge_clusters$clusters)
tabla_merge_clusters$Endulzante <- rescale(as.numeric(tabla_merge_clusters$Endulzante))
tabla_merge_clusters$Sexo <- rescale(as.numeric(tabla_merge_clusters$Sexo))
tabla_merge_clusters$Tiempo <- rescale(as.numeric(tabla_merge_clusters$Tiempo))
longtableOF <- melt(tabla_merge_clusters, id = c("clusters", "Tiempo"))
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOF, theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids")+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
tabla_merge %>% drop(numVol)
tabla_merge_clusters <- cbind(tabla_merge %>% select(-numVol), clusters = as.factor(model_clustering_OF$classification))
model_clustering_OF <- Mclust(tabla_merge %>% select(-c(Endulzante, Sexo, Tiempo, numVol)))
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_merge_clusters <- cbind(tabla_merge %>% select(-numVol), clusters = as.factor(model_clustering_OF$classification))
tableSexoOF <- table(tabla_merge_clusters$Sexo,tabla_merge_clusters$clusters)
tableEdulcoranteOF <- table(tabla_merge_clusters$Endulzante,tabla_merge_clusters$clusters)
tabla_merge_clusters$Endulzante <- rescale(as.numeric(tabla_merge_clusters$Endulzante))
tabla_merge_clusters$Sexo <- rescale(as.numeric(tabla_merge_clusters$Sexo))
tabla_merge_clusters$Tiempo <- rescale(as.numeric(tabla_merge_clusters$Tiempo))
longtableOF <- melt(tabla_merge_clusters, id = c("clusters", "Tiempo"))
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOF, theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids")+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
tabla_merge %>% select(-c(Endulzante, Sexo, Tiempo, numVol))
tabla_merge %>% select(-c(numVol, Endulzante, Sexo, Tiempo))
ungroup(tabla_merge) %>% select(-c(numVol, Endulzante, Sexo, Tiempo))
model_clustering_OF <- Mclust(ungroup(tabla_merge) %>% select(-c(numVol, Endulzante, Sexo, Tiempo)))
model_clustering_OF <- Mclust(ungroup(tabla_merge) %>% select(-c(numVol, Endulzante, Sexo, Tiempo, id)))
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_merge_clusters <- cbind(tabla_merge %>% select(-numVol, id), clusters = as.factor(model_clustering_OF$classification))
tabla_merge_clusters <- cbind(ungroup(tabla_merge) %>% select(-numVol, id), clusters = as.factor(model_clustering_OF$classification))
tableSexoOF <- table(tabla_merge_clusters$Sexo,tabla_merge_clusters$clusters)
tableEdulcoranteOF <- table(tabla_merge_clusters$Endulzante,tabla_merge_clusters$clusters)
tabla_merge_clusters$Endulzante <- rescale(as.numeric(tabla_merge_clusters$Endulzante))
tabla_merge_clusters$Sexo <- rescale(as.numeric(tabla_merge_clusters$Sexo))
tabla_merge_clusters$Tiempo <- rescale(as.numeric(tabla_merge_clusters$Tiempo))
longtableOF <- melt(tabla_merge_clusters, id = c("clusters", "Tiempo"))
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOF, theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids")+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
ungroup(tabla_merge) %>% select(-numVol, id)
tabla_merge_clusters <- cbind(ungroup(tabla_merge) %>% select(c(-numVol, id)), clusters = as.factor(model_clustering_OF$classification))
tableSexoOF <- table(tabla_merge_clusters$Sexo,tabla_merge_clusters$clusters)
tableEdulcoranteOF <- table(tabla_merge_clusters$Endulzante,tabla_merge_clusters$clusters)
tabla_merge_clusters$Endulzante <- rescale(as.numeric(tabla_merge_clusters$Endulzante))
tabla_merge_clusters$Sexo <- rescale(as.numeric(tabla_merge_clusters$Sexo))
tabla_merge_clusters$Tiempo <- rescale(as.numeric(tabla_merge_clusters$Tiempo))
longtableOF <- melt(tabla_merge_clusters, id = c("clusters", "Tiempo"))
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOF, theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids")+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
tabla_merge_clusters <- cbind(ungroup(tabla_merge) %>% select(-c(numVol, id)), clusters = as.factor(model_clustering_OF$classification))
ungroup(tabla_merge) %>% select(-c(numVol, id)
)
tabla_merge_clusters <- cbind(ungroup(tabla_merge) %>% select(-c(numVol, id)), clusters = as.factor(model_clustering_OF$classification))
tableSexoOF <- table(tabla_merge_clusters$Sexo,tabla_merge_clusters$clusters)
tableEdulcoranteOF <- table(tabla_merge_clusters$Endulzante,tabla_merge_clusters$clusters)
tabla_merge_clusters$Endulzante <- rescale(as.numeric(tabla_merge_clusters$Endulzante))
tabla_merge_clusters$Sexo <- rescale(as.numeric(tabla_merge_clusters$Sexo))
tabla_merge_clusters$Tiempo <- rescale(as.numeric(tabla_merge_clusters$Tiempo))
longtableOF <- melt(tabla_merge_clusters, id = c("clusters", "Tiempo"))
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOF, theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids")+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 22,xmax=24, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOF, theme = ttheme_default(base_size = 8)), xmin= 22,xmax=24, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids")+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
model_clustering_OF <- Mclust(ungroup(tabla_merge) %>% select(-c(numVol, Endulzante, Sexo, Tiempo, id, Peso, IMC,
Grasa, IRCV, Bpmin, Bpmax, Frec)))
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_merge_clusters <- cbind(ungroup(tabla_merge) %>% select(-c(numVol, id)), clusters = as.factor(model_clustering_OF$classification))
tableSexoOF <- table(tabla_merge_clusters$Sexo,tabla_merge_clusters$clusters)
tableEdulcoranteOF <- table(tabla_merge_clusters$Endulzante,tabla_merge_clusters$clusters)
tabla_merge_clusters$Endulzante <- rescale(as.numeric(tabla_merge_clusters$Endulzante))
tabla_merge_clusters$Sexo <- rescale(as.numeric(tabla_merge_clusters$Sexo))
tabla_merge_clusters$Tiempo <- rescale(as.numeric(tabla_merge_clusters$Tiempo))
longtableOF <- melt(tabla_merge_clusters, id = c("clusters", "Tiempo"))
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 22,xmax=24, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOF, theme = ttheme_default(base_size = 8)), xmin= 22,xmax=24, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids")+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
counts <- data.frame(table(tabla_merge$numVol))
View(counts)
tabla_merge$numVol
tabla_mergeDupl <- tabla_merge[tabla_merge$numVol %in% counts$Var1[counts$Freq > 1],]
tabla_mergeDupl
anova_pareado_EG <- aov(formula = EG ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
summary(anova_pareado_EG)
colnames(tabla_mergeDupl)
for(i in colnames(tabla_mergeDupl)) {
print (i)
# anova_paired <- aov(formula = ES ~ Sexo * Endulzante * Tiempo +
#                       Error(numVol/Tiempo),
#                     data = tabla_mergeDupl)
#
}
for(i in colnames(tabla_mergeDupl)) {
print (enquo(i))
# anova_paired <- aov(formula = ES ~ Sexo * Endulzante * Tiempo +
#                       Error(numVol/Tiempo),
#                     data = tabla_mergeDupl)
#
}
for(i in colnames(tabla_mergeDupl)) {
print (eval(i))
# anova_paired <- aov(formula = ES ~ Sexo * Endulzante * Tiempo +
#                       Error(numVol/Tiempo),
#                     data = tabla_mergeDupl)
#
}
for(i in colnames(tabla_mergeDupl)) {
print (eval(parse(i)))
# anova_paired <- aov(formula = ES ~ Sexo * Endulzante * Tiempo +
#                       Error(numVol/Tiempo),
#                     data = tabla_mergeDupl)
#
}
for(i in colnames(tabla_mergeDupl)) {
anova_paired <- aov(formula = i ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
for(i in colnames(tabla_mergeDupl)) {
print (i)
anova_paired <- aov(formula = i ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
for(i in colnames(tabla_mergeDupl[,-1])) {
print (i)
anova_paired <- aov(formula = i ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
anova_paired <- aov(formula = Peso ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
anova_paired <- aov(formula = "Peso" ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
for(i in colnames(tabla_mergeDupl)) {
anova_paired <- aov(formula = as.name(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
for(i in colnames(tabla_mergeDupl)) {
print(as.name(i))
# anova_paired <- aov(formula = ES ~ Sexo * Endulzante * Tiempo +
#                       Error(numVol/Tiempo),
#                     data = tabla_mergeDupl)
#
}
for(i in colnames(tabla_mergeDupl)) {
anova_paired <- aov(formula = as.name(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
for(i in colnames(tabla_mergeDupl)) {
if (i == "numVol"){
print("uwu")
}
else{
anova_paired <- aov(formula = as.name(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
}
for(i in colnames(tabla_mergeDupl)) {
if (i == "numVol"){
print("uwu")
}
else{
print(i)
anova_paired <- aov(formula = as.name(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
}
for(i in colnames(tabla_mergeDupl)) {
if (i == "numVol"){
print("uwu")
}
else{
print(as.name(i))
anova_paired <- aov(formula = as.name(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
}
for(i in colnames(tabla_mergeDupl)) {
if (i == "numVol"){
print("uwu")
}
else{
print(as.formula(i))
anova_paired <- aov(formula = as.name(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
}
for(i in colnames(tabla_mergeDupl)) {
if (i == "numVol"){
print("uwu")
}
else{
print(as.matrix(i))
anova_paired <- aov(formula = as.formula(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
}
for(i in colnames(tabla_mergeDupl)) {
if (i == "numVol"){
print("uwu")
}
else{
print(as.matrix(i))
anova_paired <- aov(formula = as.matrix(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
}
tabla_mergeDupl[,2:9]
anova_results <- purrr::map(tabla_mergeDupl[,2:9], ~aov(.x ~  Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo)))
anova_results <- purrr::map(tabla_mergeDupl[,1:9], ~aov(.x ~  Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo)))
tabla_mergeDupl[,1:9]
anova_results <- purrr::map(tabla_mergeDupl[,2:9], ~aov(.x ~  tabla_mergeDupl$Sexo * tabla_mergeDupl$Endulzante
* tabla_mergeDupl$Tiempo +
Error(tabla_mergeDupl$numVol/tabla_mergeDupl$Tiempo)))
anova_results[[1]]

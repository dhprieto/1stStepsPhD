knitr::opts_chunk$set(echo = TRUE)
fenSA <- read.csv("data/resultadosmetabolitos/Compuestos fenolicos SA VidaUtil Cronico_1.csv")
knitr::opts_chunk$set(echo = TRUE)
fenSA <- read.csv("data/resultadosmetabolitos/Compuestos fenolicos SA VidaUtil Cronico_1.csv")
fenSA <- read.csv("data/resultadosmetabolitos/Compuestos fenolicos SA VidaUtil Cronico_1.csv", sep = ";")
fenSA
fenSA
View(fenSA)
summary(fenSA)
fenSA$Deriv..Naringenin.hexosido.mg.100mlzumo
as.numeric(fenSA$Deriv..Naringenin.hexosido.mg.100mlzumo)
fenSA <- read.csv("data/resultadosmetabolitos/Compuestos fenolicos SA VidaUtil Cronico_1.csv", sep = ";", dec = ",")
summary(fenSA)
install.packages("dplyr")
library("dplyr")
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(df), 2), function(i){
x <- df[ i:(i + 1), , drop = FALSE]
res <- rbind(x, colSums(x)/2)
rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
}))
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA), 2), function(i){
x <- fenSA[ i:(i + 1), , drop = FALSE]
res <- rbind(x, colSums(x)/2)
rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
}))
rownames(fenSA)
rownames(fenSA) <- fenSA$Condiciones
fenSA_num <- fenSA[-1,]
fenSA_num <- fenSA[-1]
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(x, colSums(x)/2)
rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
}))
View(fenSA_mean)
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
#res <- rbind(x, colSums(x)/2)
#rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
}))
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(x, colSums(x)/2)
#rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
}))
fenSA_mean <- colMeans(fenSA_num)
fenSA_mean <- colMeans(fenSA_num, dims = 2)
fenSA_mean <- colMeans(fenSA_num, dims = 1)
fenSA_mean <- colMeans(fenSA_num, dims = 3)
fenSA_mean <- do.call(rbind, colMeans(fenSA_num))
fenSA_mean <- do.call(rbind, lapply((seq(1, nrow(fenSA_num), 2), colMeans)
seq(1, nrow(fenSA_num), 2)
fenSA_mean <- do.call(rbind, lapply(seq(1, nrow(fenSA_num), 2), colMeans))
seq(1, nrow(fenSA_num), 2)
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(x, colSums(x)/2)
res <- res[seq(1, nrow(fenSA_num), 2)]
# rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
}))
seq(1, nrow(fenSA_num), 2)
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(x, colSums(x)/2)
res <- res[seq(1, nrow(fenSA_num), 2),]
# rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
}))
View(fenSA_mean)
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(x, colSums(x)/2)
browser()
res <- res[seq(1, nrow(fenSA_num), 2),]
# rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
}))
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(x, colSums(x)/2)
browser()
res <- res[i,]
# rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
}))
View(fenSA_mean)
fenSA_mean <- lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(x, colSums(x)/2)
res <- res[i,]
# rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
})
View(fenSA_mean)
fenSA_mean <- lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(x, colSums(x)/2)
rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
})
View(fenSA_mean)
fenSA_mean <- lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = TRUE]
res <- rbind(x, colSums(x)/2)
rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
})
View(fenSA_mean)
fenSA_mean <- lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(colSums(x)/2)
rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
})
fenSA_mean <- do.call(rbind, lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(colSums(x)/2)
rownames(res)[ nrow(res) ] <- paste(rownames(x), collapse = "_")
res
}))
View(fenSA_mean)
duplicated(rownames(fenSA_num))
rownames(fenSA_num)
duplicated(fenSA$Condiciones)
fenSA$Condiciones[-duplicated(fenSA$Condiciones),]
duplicated(fenSA$Condiciones)
fenSA$Condiciones[-duplicated(fenSA$Condiciones),]
fenSA$Condiciones
unique(fenSA$Condiciones)
fenSA_mean <- do.call(rbind, lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(colSums(x)/2)
rownames(res) <- unique(fenSA$Condiciones)
res
}))
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(colSums(x)/2)
rownames(res)[ nrow(res) ] <- unique(fenSA$Condiciones)
res
}))
View(fenSA_mean)
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(colSums(x)/2)
rownames(res)[ nrow(res) ] <- unique(fenSA$Condiciones)[ nrow(res) ]
res
}))
View(fenSA_mean)
rownames(fenSA_Mean) <- unique(fenSA$Condiciones)
rownames(fenSA_mean) <- unique(fenSA$Condiciones)
View(fenSA_mean)
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(colSums(x)/2, sd(x))
res
}))
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(st(x))
res
}))
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(sd(x))
res
}))
df <- data.frame(1,2,3)
sd(df)
df <- data.frame(1,2,3,4)
sd(df)
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(sd(as.list(x)))
res
}))
res <- rbind(sd(as.double(x)))
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(sd(as.double(x)))
res
}))
df <- list(1,2,3,4)
sd(df)
df <- as.double(list(1,2,3,4))
sd(df)
res <- rbind(sd(as.data.frame(x)))
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
res <- rbind(sd(as.data.frame(x)))
res
}))
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
print(x)
res <- rbind(colSums(x)/2)
res
}))
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
browser()
res <- rbind(colSums(x)/2)
res
}))
View(x)
View(x)
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
browser()
# res <- rbind(colSums(x)/2)
res <- rbind(apply(x, 2, sd))
res
}))
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
# res <- rbind(colSums(x)/2)
res <- rbind(apply(x, 2, sd))
res
}))
View(fenSA_mean)
fenSA_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSA_num), 2), function(i){
x <- fenSA_num[ i:(i + 1), , drop = FALSE]
# res <- rbind(colSums(x)/2)
res <- rbind(colSums(x)/2,apply(x, 2, sd))
res
}))
View(fenSA_num)
View(fenSA_mean)
knitr::opts_chunk$set(echo = TRUE)
install.packages("skimr")
knitr::opts_chunk$set(echo = TRUE)
skim(fenSA)
skimr::skim(fenSA)
summary(fenST_mean)
install.packages("normtest")
shapiro.test(fenST_mean)
View(fenSA_mean)
fenSU <- read.csv("data/Compuestos fenolicos SU VidaUtil Cronico_1.csv", sep = ";", dec = ",")
fenSU_num <- fenSU[-1]
summary(fenSU)
fenSU_mean <- do.call(rbind,
lapply(seq(1, nrow(fenSU_num), 2), function(i){
x <- fenSU_num[ i:(i + 1), , drop = FALSE]
res <- rbind(colSums(x)/2)
res
}))
rownames(fenSU_mean) <- unique(fenSU$Condiciones)
fenSU_sd <- do.call(rbind,
lapply(seq(1, nrow(fenSU_num), 2), function(i){
x <- fenSU_num[ i:(i + 1), , drop = FALSE]
res <- rbind(apply(x, 2, sd))
res
}))
rownames(fenSU_sd) <- unique(fenSU$Condiciones)
skimr::skim(fenSU_mean)
ggplot(data = fenSU_mean, aes(x = posicion, y = bateo, color = posicion)) +
ggplot(data = fenSU_mean, aes(x = posicion, y = bateo, color = posicion)) +
geom_boxplot() +
theme_bw()
install.packages("ggplot2")
library("ggplot2")
ggplot(data = fenSU, aes(x = Condiciones, y = Deriv..Naringenin.hexosido.mg.100mlzumo, color = posicion)) +
geom_boxplot() +
theme_bw()
ggplot(data = fenSU, aes(x = Condiciones, y = Deriv..Naringenin.hexosido.mg.100mlzumo, color = Condiciones)) +
geom_boxplot() +
theme_bw()
View(fenSU_mean)
fenSU_T <- T(fenSU_mean)
fenSU_T <- t(fenSU_mean)
View(fenSU_T)
fenSU_T
ggplot(data = fenSU, aes(x = Sucralosa dia 0, y = Sucralosa 25º Osc dia 90, color = Condiciones)) +
geom_boxplot() +
theme_bw()
library("ggplot2")
ggplot(data = fenSU, aes(x = Sucralosa dia 0, y = Sucralosa 25º Osc dia 90, color = Condiciones)) +
geom_boxplot() +
theme_bw()
ggplot(data = fenSU, aes(x = Sucralosa dia 0, y = Sucralosa 25º Osc dia 90, color = Condiciones)) +
geom_boxplot() +
theme_bw()
ggplot(data = fenSU, aes(x = Sucralosa.dia.0, y = Sucralosa.25º.Osc.dia.90, color = Condiciones)) +
geom_boxplot() +
theme_bw()
ggplot(data = fenSU_T, aes(x = Sucralosa.dia.0, y = Sucralosa.25º.Osc.dia.90, color = Condiciones)) +
geom_boxplot() +
theme_bw()
View(fenSU_T)
ggplot(data = as.data.frame(fenSU_T), aes(x = Sucralosa.dia.0, y = Sucralosa.25º.Osc.dia.90, color = Condiciones)) +
geom_boxplot() +
theme_bw()
fenSU_T
ggplot(data = as.data.frame(fenSU_T), aes(x = Sucralosa dia 0, y = Sucralosa.25º.Osc.dia.90, color = Condiciones)) +
geom_boxplot() +
theme_bw()
ggplot(data = as.data.frame(fenSU_T), aes(x = "Sucralosa dia 0", y = "Sucralosa 25º Osc dia 90", color = Condiciones)) +
geom_boxplot() +
theme_bw()
ggplot(data = as.data.frame(fenSU_T), aes(x = "Sucralosa dia 0", y = "Sucralosa 25º Osc dia 90", color = "Sucralosa dia 0")) +
geom_boxplot() +
theme_bw()
fenSU
install.packages("reshape2")
library("reshape2")
stack(fenSu)
stack(fenSU)
stack(fenSU_mean)
View(fenSU_num)
View(fenSU_mean)
stack(as.data.frame(fenSU_mean))
fenSU_1 <- stack(as.data.frame(fenSU_mean))
View(fenSU_1)
View(fenSU_mean)
rownames(fenSU_1) <- fenSU$Condiciones
rownames(fenSU_1) <- fenSU$Condicionesx4
View(fenSU_1)
rownames(fenSU_1)
unique(fenSU$Condiciones)*4
unique(fenSU$Condiciones)
fenSU_1$Condiciones <- unique(fenSU$Condiciones)+unique(fenSU$Condiciones)
rep(unique(fenSU$Condiciones),4)
fenSU_1$Condiciones <- rep(unique(fenSU$Condiciones),4)
fenSU_1
ggplot(data = as.data.frame(fenSU_1), aes(x = ind, y = values, color = ind)) +
geom_boxplot() +
theme_bw()
fligner.test(values ~ ind, fenSU_1)
install.packages("gridExtra")
library("gridExtra")
p1 <- ggplot(data = as.data.frame(fenSU_1), aes(x = ind, y = values)) +
geom_boxplot() + theme_bw()
p2 <- ggplot(data = as.data.frame(fenSU_1), aes(x = Condiciones, y = values)) +
geom_boxplot() + theme_bw()
p3 <- ggplot(data = as.data.frame(fenSU_1), aes(x = ind, y = values, colour = Condiciones)) +
geom_boxplot() + theme_bw()
grid.arrange(p1, p2, ncol = 2)
p3
View(fenSU_sd)
View(fenSU_T)
View(fenSU_T)
View(fenSU_sd)
View(fenSU_mean)
fenSU_total <- merge(fenSU_mean, fenSU_sd)
View(fenSU_total)
fenSU_total <- merge(fenSU_mean, fenSU_sd, by = NULL)
View(fenSU_total)
fenSU_2 <- stack(as.data.frame(fenSU_sd))
fenSU_2$Condiciones <- rep(unique(fenSU$Condiciones),4)
fenSU_total <- merge(fenSU_1, fenSU_2, by = c("Condiciones", "ind"))
View(fenSU_total)
View(fenSU_sd)
View(fenSU_total)
library("dplyr")
View(fenSU_total)
dplyr::rename(fenSU_total, values.x = mean, values.y = SD)
dplyr::rename(fenSU_total, mean = values.x , SD = values.y)
dplyr::rename(fenSU_total, mean = values.x , SD = values.y, Compuesto = ind)
fenSU_total$Endulzante <- rep("SU", nrow(fenSU_total))
View(fenSU_total)
dplyr::rename(fenSU_total, mean = values.x , SD = values.y, Compuesto = ind)
View(fenSU_total)
deparse(fenSA)
deparse(lalal)
SU <- "SU"
deparse(SU)
eval(SU)
SU = "SA"
eval(SU)
deparse(SU)
paste(SU)
procesado <- function(tabla, endulzante){
tabla_num <- tabla[-1]
# Se obtienen las medias de cada medida
tabla_mean <- do.call(rbind,
lapply(seq(1, nrow(tabla_num), 2), function(i){
x <- tabla_num[ i:(i + 1), , drop = FALSE]
res <- rbind(colSums(x)/2)
res
}))
rownames(tabla_mean) <- unique(tabla$Condiciones)
# La desviación estándar
tabla_sd <- do.call(rbind,
lapply(seq(1, nrow(tabla_num), 2), function(i){
x <- tabla_num[ i:(i + 1), , drop = FALSE]
res <- rbind(apply(x, 2, sd))
res
}))
# Apilamos datos
tabla_1 <- stack(as.data.frame(tabla_mean))
tabla_1$Condiciones <- rep(unique(tabla$Condiciones),4)
tabla_2 <- stack(as.data.frame(tabla_sd))
tabla_2$Condiciones <- rep(unique(tabla$Condiciones),4)
tabla_total <- merge(tabla_1, tabla_2, by = c("Condiciones", "ind"))
tabla_total$Endulzante <- rep(endulzante, nrow(tabla_total))
dplyr::rename(tabla_total, mean = values.x , SD = values.y, Compuesto = ind)
}
prueba <- procesado(fenSU)
prueba <- procesado(fenSU, "SU")
View(prueba)
fenSU <- read.csv("data/Compuestos fenolicos SU VidaUtil Cronico_1.csv", sep = ";", dec = ",")
fenSA <- read.csv("data/Compuestos fenolicos SA VidaUtil Cronico_1.csv", sep = ";", dec = ",")
fenST <- read.csv("data/Compuestos fenolicos ST VidaUtil Cronico_1.csv", sep = ";", dec = ",")
fenSU_total <- procesado(fenSU, "SU")
fenSA_total <- procesado(fenSA, "SA")
fenST_total <- procesado(fenST, "ST")
View(fenST_total)
c(fenSU_total, fenSA_total)
fenSU_total + fenSA_total
rbind(fenSU_total, fenSA_total)
rbind(fenSU_total, fenSA_total, fenST_total)
fenFlavTotal <- rbind(fenSU_total, fenSA_total, fenST_total)
ggplot(data = as.data.frame(fenFlavTotal), aes(x = Endulzante, y = values, color = Endulzante) +
theme_bw()
ggplot(data = as.data.frame(fenFlavTotal), aes(x = Endulzante, y = values, color = Endulzante)) +
geom_boxplot() +
theme_bw()
ggplot(data = as.data.frame(fenFlavTotal), aes(x = Endulzante, y = mean, color = Endulzante)) +
geom_boxplot() +
theme_bw()
p1 <- ggplot(data = as.data.frame(fenFlavTotal), aes(x = Endulzante, y = mean)) +
geom_boxplot() + theme_bw()
p2 <- ggplot(data = as.data.frame(fenFlavTotal), aes(x = Condiciones, y = mean)) +
geom_boxplot() + theme_bw()
p3 <- ggplot(data = as.data.frame(fenFlavTotal), aes(x = Endulzante, y = mean, colour = Condiciones)) +
geom_boxplot() + theme_bw()
grid.arrange(p1, p2, ncol = 2)
p3
fisher.test(fenSA_mean)
var.test(x = fenFlavTotal[fenFlavTotal$Endulzante == "ST", "mean"],
y = fenFlavTotal[fenFlavTotal$Endulzante == "SA", "mean"] )
var.test(x = fenFlavTotal[fenFlavTotal$Endulzante == "ST", "mean"],
y = fenFlavTotal[fenFlavTotal$Endulzante == "SU", "mean"] )
var.test(x = fenFlavTotal[fenFlavTotal$Endulzante == "SA", "mean"],
y = fenFlavTotal[fenFlavTotal$Endulzante == "SU", "mean"] )
#----
shapiro.test(fenFlavTotal)
fenFlavTotal
#----
shapiro.test(fenFlavTotal$mean)
#----
shapiro.test(fenFlavTotal$sd)
#----
shapiro.test(fenFlavTotal$SD)
install.packages("tinytex")
tinytex::install_tinytex()
install.packages("tynytex")
install.packages("tinytex")
tinytex::install_tinytex()
tinytex::check_installed()
tinytex::check_installed(pkgs = pkgs)
tinytex::check_installed(pkgs = FALSE)
tinytex::check_installed(pkgs = TRUE)
tinytex::install_tinytex()
tinytex::check_installed(pkgs = TRUE)
tinytex::install_tinytex(force = TRUE)
tinytex::check_installed(pkgs = TRUE)
tinytex::is_tinytex()
tinytex::reinstall_tinytex()
tinytex::uninstall_tinytex(force = TRUE)

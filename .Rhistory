library(caret)
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, IMC, Bpmin, Bpmax, Frec)))
tabla1.1[training.ids,] %>% select(-Sexo)
mod <- randomForest(x = tabla1.1[training.ids,] %>% select(-Sexo),
y = tabla1.1[training.ids,] %>% select(-Sexo),
ntree = 500,
keep.forest = TRUE)
mod <- randomForest(x = tabla1.1[training.ids,] %>% select(-Sexo),
y = tabla1.1[training.ids,] %>% select(Sexo),
ntree = 500,
keep.forest = TRUE)
y = tabla1.1[training.ids,] %>% select(Sexo)
1.1[training.ids,] %>% select(Sexo)
tabla1.1[training.ids,] %>% select(Sexo)
tabla1.1[training.ids,] %>% select(-Sexo)
mod <- randomForest(x = tabla1.1[training.ids,] %>% select(-Sexo),
y = tabla1.1[training.ids,] %>% select(Sexo),
ntree = 500,
keep.forest = TRUE)
mod <- randomForest(x = tabla1.1[training.ids, -"Sexo"],
y = tabla1.1[training.ids, "Sexo"],
ntree = 500,
keep.forest = TRUE)
mod <- randomForest(x = tabla1.1[training.ids, -"Sexo"] %>% select(-Sexo),
y = tabla1.1[training.ids, "Sexo"] %>% select(Sexo),
ntree = 500,
keep.forest = TRUE)
mod <- randomForest(x = tabla1.1[training.ids, ] %>% select(-Sexo),
y = tabla1.1[training.ids, ] %>% select(Sexo),
ntree = 500,
keep.forest = TRUE)
length(tabla1.1[training.ids,] %>% select(Sexo))
tabla1.1[training.ids,] %>% select(Sexo)
length(tabla1.1[training.ids,])
mod <- randomForest(Sexo ~ ., data = tabla1.1[training.ids,],
ntree = 500,
keep.forest = TRUE)
pred <- predict(mod, tabla1.1[-training.ids,], type = "class")
table(tabla1.1[-training.ids,"class"], pred, dnn= c("Actual", "Predicho"))
table(tabla1.1[-training.ids,"Sexo"], pred, dnn= c("Actual", "Predicho"))
mod <- randomForest(Sexo ~ ., data = tabla1.1[training.ids,],
ntree = 5000,
keep.forest = TRUE)
pred <- predict(mod, tabla1.1[-training.ids,], type = "class")
table(tabla1.1[-training.ids,"Sexo"], pred, dnn= c("Actual", "Predicho"))
library(ROCR)
probs <- predict(mod, tabla1.1[-training.ids,], type = "prob")
Â¡head(probs)
head(probs)
pred <- prediction(probs[,2], tabla1.1[-training.ids,"class"])
perf <- performance(pred, "tpr", "fpr")
pred <- prediction(probs[,2], tabla1.1[-training.ids,"Sexo"])
perf <- performance(pred, "tpr", "fpr")
plot(perf)
table <- table(tabla1.1[-training.ids,]$Sexo,  pred.pruned,
dnn =  c("Actual", "Predecido"))
table
prop.table(table)
round(prop.table(table, 1)*100, 2)
round(prop.table(table, 2)*100, 2)
barplot(table, legend = TRUE,
xlab = "Nota predecida por el modelo")
mosaicplot(table, main = "Eficiencia del modelo")
summary(table)
install.packages("e1071")
library(e1071)
source("scripts/preprocess.R")
library(e1071)
library(caret)
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, Bpmin, Bpmax, Frec)))
set.seed(123)
t.ids <- createDataPartition(banknote$class, p = 0.7, list = F)
t.ids <- createDataPartition(tabla1.1$Sexo, p = 0.7, list = F)
mod <- svm(Sexo ~ ., data = tabla1.1[t.ids, ],
class.weights = c("HOMBRE"=0.5, "MUJER"=0.5),
cost=1000)
table(tabla1.1[t.ids,"Sexo"], fitted(mod), dnn = c("Actual", "Predicho"))
pred <- predict(mod, tabla1.1[-t.ids,])
table(tabla1.1[-t.ids, "Sexo"], pred, dnn = c("Actual", "Predicho"))
tuned <- tune.svm(class ~ ., data = tabla1.1[t.ids,],
gamma = 10^(-6:-1), cost = 10^(1:2))
tuned <- tune.svm(Sexo ~ ., data = tabla1.1[t.ids,],
gamma = 10^(-6:-1), cost = 10^(1:2))
summary(tuned)
t.ids <- createDataPartition(tabla1.1$Sexo, p = 0.67, list = F)
mod <- naiveBayes(Sexo ~ ., data = tabla1.1[t.ids,])
mod
pred <- predict(mod, tabla1.1[-t.ids,])
tab <- table(tabla1.1[-t.ids,]$Sexo, pred, dnn = c("Actual", "Predicha"))
confusionMatrix(tab)
install.packages("class")
install.packages("class")
library(class)
library(caret)
source("scripts/preprocess.R")
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, Bpmin, Bpmax, Frec)))
View(tabla1.1)
tabla1.1 <- escaladoTablas(removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, Bpmin, Bpmax, Frec))))
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- escaladoTablas(removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, Bpmin, Bpmax, Frec))))
removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, Bpmin, Bpmax, Frec)))
tabla1.1 <- escaladoTablas(datos = removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, Bpmin, Bpmax, Frec))))
tabla1.1 <- escaladoTablas(tabla1.1)
source("scripts/preprocess.R")
tabla1.1 <- escaladoTablas(tabla1.1)
source("scripts/preprocess.R")
source("scripts/preprocess.R")
tabla1.1 <- escaladoTablas(tabla1.1)
source("scripts/preprocess.R")
tabla1.1 <- escaladoTablas(tabla1.1)
tabla1.1
escaladoTablas <- function (datos, varNoEscalar = "noEscalar") {
for (i in colnames(datos)) {
browser()
if (is.numeric(datos[,i]) && i != varNoEscalar){
datos[,i] <- rescale(datos[,i])
}
}
}
tabla1.1 <- escaladoTablas(tabla1.1)
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, Bpmin, Bpmax, Frec)))
source("scripts/preprocess.R")
tabla1.1 <- escaladoTablas(tabla1.1)
is.numeric(is.numeric(datos[,i])
)
datos[,i]
is.numeric(datos[,i])
source("scripts/preprocess.R")
tabla1.1 <- escaladoTablas(tabla1.1)
source("scripts/preprocess.R")
tabla1.1 <- escaladoTablas(tabla1.1)
View(tabla1.1)
library(caret)
library(rpart)
library(rpart.plot)
set.seed(123)
training.ids <- createDataPartition(tabla1.1$Sexo, p = 0.7, list = F)
mod <- rpart(Sexo ~ . ,
data = tabla1.1[training.ids,],
method = "class",
control = rpart.control(minsplit = 5, cp = 0.01))
mod
prp(mod, type = 2, extra = 104, nn = TRUE,
fallen.leaves = TRUE, faclen = 4, varlen = 8,
shadow.col = "gray")
pred.mod <- predict(mod, tabla1.1[-training.ids,], type="class")
table(tabla1.1[-training.ids,]$Sexo, pred.mod,
dnn = c("Actual", "Predicho"))
mod$cptable
mod.pruned <- prune(mod, mod$cptable[3, "CP"])
prp(mod.pruned, type = 2, extra = 104, nn = TRUE,
fallen.leaves = TRUE, faclen = 4, varlen = 8,
shadow.col = "gray")
pred.pruned <- predict(mod.pruned, tabla1.1[-training.ids,], type="class")
table(tabla1.1[-training.ids,]$Sexo, pred.pruned,
dnn = c("Actual", "Predicho"))
mod.pruned <- prune(mod, mod$cptable[4, "CP"])
mod.pruned <- prune(mod, mod$cptable[4, "CP"])
prp(mod.pruned, type = 2, extra = 104, nn = TRUE,
fallen.leaves = TRUE, faclen = 4, varlen = 8,
shadow.col = "gray")
pred.pruned <- predict(mod.pruned, tabla1.1[-training.ids,], type="class")
table(tabla1.1[-training.ids,]$Sexo, pred.pruned,
dnn = c("Actual", "Predicho"))
pred.pruned2 <- predict(mod.pruned, tabla1.1[-training.ids,], type = "prob")
head(pred.pruned)
head(pred.pruned2)
library(ROCR)
pred <- prediction(pred.pruned2[,2], tabla1.1[-training.ids, "Sexo"])
perf <- performance(pred, "tpr", "fpr")
plot(perf)
table <- table(tabla1.1[-training.ids,]$Sexo,  pred.pruned,
dnn =  c("Actual", "Predecido"))
table
prop.table(table)
round(prop.table(table, 1)*100, 2)
round(prop.table(table, 2)*100, 2)
barplot(table, legend = TRUE,
xlab = "Nota predecida por el modelo")
mosaicplot(table, main = "Eficiencia del modelo")
summary(table)
tabla1.1 <- escaladoTablas(tabla1.1)
set.seed(123)
training.ids <- createDataPartition(tabla1.1$Sexo, p = 0.7, list = F)
mod <- randomForest(Sexo ~ ., data = tabla1.1[training.ids,],
ntree = 5000,
keep.forest = TRUE)
library(caret)
library(randomForest)
set.seed(123)
training.ids <- createDataPartition(tabla1.1$Sexo, p = 0.7, list = F)
mod <- randomForest(Sexo ~ ., data = tabla1.1[training.ids,],
ntree = 5000,
keep.forest = TRUE)
pred <- predict(mod, tabla1.1[-training.ids,], type = "class")
table(tabla1.1[-training.ids,"Sexo"], pred, dnn= c("Actual", "Predicho"))
library(ROCR)
probs <- predict(mod, tabla1.1[-training.ids,], type = "prob")
head(probs)
pred <- prediction(probs[,2], tabla1.1[-training.ids,"Sexo"])
perf <- performance(pred, "tpr", "fpr")
plot(perf)
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, IMC, Bpmin, Bpmax, Frec)))
tabla1.1 <- escaladoTablas(tabla1.1)
library(caret)
library(randomForest)
set.seed(123)
training.ids <- createDataPartition(tabla1.1$Sexo, p = 0.7, list = F)
mod <- randomForest(Sexo ~ ., data = tabla1.1[training.ids,],
ntree = 5000,
keep.forest = TRUE)
pred <- predict(mod, tabla1.1[-training.ids,], type = "class")
table(tabla1.1[-training.ids,"Sexo"], pred, dnn= c("Actual", "Predicho"))
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, Bpmin, Bpmax, Frec)))
library(e1071)
library(caret)
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, Bpmin, Bpmax, Frec)))
tabla1.1 <- escaladoTablas(tabla1.1)
set.seed(123)
t.ids <- createDataPartition(tabla1.1$Sexo, p = 0.7, list = F)
mod <- svm(Sexo ~ ., data = tabla1.1[t.ids, ],
class.weights = c("HOMBRE"=0.5, "MUJER"=0.5),
cost=1000)
table(tabla1.1[t.ids,"Sexo"], fitted(mod), dnn = c("Actual", "Predicho"))
pred <- predict(mod, tabla1.1[-t.ids,])
table(tabla1.1[-t.ids, "Sexo"], pred, dnn = c("Actual", "Predicho"))
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, Bpmin, Bpmax, Frec)))
tabla1.1 <- escaladoTablas(tabla1.1)
set.seed(123)
t.ids <- createDataPartition(tabla1.1$Sexo, p = 0.67, list = F)
mod <- naiveBayes(Sexo ~ ., data = tabla1.1[t.ids,])
mod
pred <- predict(mod, tabla1.1[-t.ids,])
tab <- table(tabla1.1[-t.ids,]$Sexo, pred, dnn = c("Actual", "Predicha"))
confusionMatrix(tab)
set.seed(123)
tabla1.1 <- escaladoTablas(tabla1.1)
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, Bpmin, Bpmax, Frec)))
tabla1.1 <- escaladoTablas(tabla1.1)
set.seed(123)
t.ids <- createDataPartition(tabla1.1$Sexo, p=0.5, list = F)
train <- vac[t.ids, ]
train <- tabla1.1[t.ids, ]
temp <- tabla1.1[-t.ids, ]
v.ids <- createDataPartition(temp$Sexo, p=0.5, list = F)
val <- temp[v.ids,]
test <- temp[-v.ids,]
pred1 <- knn(train[,4:5], val[,4:5], train[,3], k = 5)
errmat1 <- table(val$Result, pred1, dnn = c("Actual", "Predichos"))
errmat1 <- table(val$Sexo, pred1, dnn = c("Actual", "Predichos"))
errmat1
pred2 <- knn(train[,4:5], test[,4:5], train[,3], k = 1)
errmat2 <- table(test$Result, pred2, dnn = c("Actual", "Predichos"))
errmat2
pred2 <- knn(train[,4:5], test[,4:5], train[,3], k = 1)
errmat2 <- table(test$Sexo, pred2, dnn = c("Actual", "Predichos"))
errmat2
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, IMC, Bpmin, Bpmax, Frec)))
tabla1.1 <- escaladoTablas(tabla1.1)
set.seed(123)
t.ids <- createDataPartition(tabla1.1$Sexo, p=0.5, list = F)
train <- tabla1.1[t.ids, ]
temp <- tabla1.1[-t.ids, ]
v.ids <- createDataPartition(temp$Sexo, p=0.5, list = F)
val <- temp[v.ids,]
test <- temp[-v.ids,]
pred1 <- knn(train[,-8], val[,-8], train[,8], k = 5)
errmat1 <- table(val$Sexo, pred1, dnn = c("Actual", "Predichos"))
errmat1
train[,-8]
pred1
val[,-8]
train[,3]
train[,8]
pred1 <- knn(train[,-8], val[,-8], train[,8], k = 5)
pred1
train[,8]
pred1 <- knn(train[,-8], val[,-8], cl = train[,8], k = 5)
val[,-8]
train[,-8]
train
pred1 <- knn(train[,-8], val[,-8], cl = train[,8], k = 5)
errmat1 <- table(val$Sexo, pred1, dnn = c("Actual", "Predichos"))
errmat1
train[,8]
as.factor(train[,8])
pred1 <- knn(train = train[,-8],
test = val[,-8],
cl = as.factor(train[,8]),
k = 5)
train[,-8]
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, IMC, Bpmin,
Bpmax, Frec, Endulzante, Tiempo)))
tabla1.1 <- escaladoTablas(tabla1.1)
set.seed(123)
t.ids <- createDataPartition(tabla1.1$Sexo, p=0.5, list = F)
train <- tabla1.1[t.ids, ]
temp <- tabla1.1[-t.ids, ]
v.ids <- createDataPartition(temp$Sexo, p=0.5, list = F)
val <- temp[v.ids,]
test <- temp[-v.ids,]
pred1 <- knn(train = train[,-8],
test = val[,-8],
cl = as.factor(train[,8]),
k = 5)
pred1 <- knn(train = train[,-6],
test = val[,-6],
cl = as.factor(train[,6]),
k = 5)
errmat1 <- table(val$Sexo, pred1, dnn = c("Actual", "Predichos"))
errmat1
pred2 <- knn(train[,4:5], test[,4:5], train[,3], k = 1)
errmat2 <- table(test$Sexo, pred2, dnn = c("Actual", "Predichos"))
errmat2
pred2 <- knn(train = train[,-6],
test = val[,-6],
cl = as.factor(train[,6]), k =1)
errmat2 <- table(test$Sexo, pred2, dnn = c("Actual", "Predichos"))
errmat2
knn.automate <- function(tr_predictors, val_predictors, tr_target,
val_target, start_k, end_k){
for (k in start_k:end_k) {
pred <- knn(tr_predictors, val_predictors, tr_target, k)
tab <- table(val_target, pred, dnn = c("Actual", "Predichos") )
cat(paste("Matriz de confusiÃ³n para k = ",k,"\n"))
cat("==============================\n")
print(tab)
cat("------------------------------\n")
}
}
knn.automate(train[,-6],
val[,-6],
train[,6],
val[,6],1,8)
trcntrl <- trainControl(method="repeatedcv", number = 10, repeats = 3)
caret_knn_fit <- train(Sexo ~ ., data = train,
method = "knn", trControl = trcntrl,
preProcess = c("center", "scale"),
tuneLength = 10)
caret_knn_fit
install.packages("nnet")
install.packages("nnet")
install.packages("nnet")
install.packages("nnet")
install.packages("nnet")
install.packages("nnet")
install.packages("nnet")
install.packages("nnet")
source("scripts/preprocess.R")
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV, Bpmin, Bpmax, Frec)))
tabla1.1 <- escaladoTablas(tabla1.1)
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV,IM, Bpmin, Bpmax, Frec)))
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV,IMC, Bpmin, Bpmax, Frec)))
tabla1.1 <- escaladoTablas(tabla1.1)
t.id <- createDataPartition(tabla1.1$Sexo
, p= 0.7, list = F)
library(caret)
library(nnet)
library(nnet)
library(caret)
source("scripts/preprocess.R")
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV,IMC, Bpmin, Bpmax, Frec)))
tabla1.1 <- escaladoTablas(tabla1.1)
t.id <- createDataPartition(tabla1.1$Sexo
, p= 0.7, list = F)
mod <- nnet(Sexo ~ ., data = tabla1.1[t.id,],
size = 3, maxit = 10000, decay = .001, rang = 0.05,
na.action = na.omit, skip = T)
pred <- predict(mod, newdata = tabla1.1[-t.id,], type = "class")
table(tabla1.1[-t.id,]$class, pred,dnn = c("Actual", "Predichos") )
table(tabla1.1[-t.id,]$Sexo, pred,dnn = c("Actual", "Predichos") )
library(ROCR)
pred2 <- predict(mod, newdata = tabla1.1[-t.id,], type = "raw")
perf <- performance(prediction(pred2, tabla1.1[-t.id,"Sexo"]),
"tpr", "fpr")
plot(perf)
mod <- nnet(Sexo ~ ., data = tabla1.1[t.id,],
size = 6, maxit = 1000000, decay = .001, rang = 0.05,
na.action = na.omit, skip = T)
pred <- predict(mod, newdata = tabla1.1[-t.id,], type = "class")
table(tabla1.1[-t.id,]$Sexo, pred,dnn = c("Actual", "Predichos") )
mod <- nnet(Sexo ~ ., data = tabla1.1[t.id,],
size = 2, maxit = 1000000, decay = .001, rang = 0.05,
na.action = na.omit, skip = T)
pred <- predict(mod, newdata = tabla1.1[-t.id,], type = "class")
table(tabla1.1[-t.id,]$Sexo, pred,dnn = c("Actual", "Predichos") )
mod <- nnet(Sexo ~ ., data = tabla1.1[t.id,],
size = 4, maxit = 1000000, decay = .001, rang = 0.05,
na.action = na.omit, skip = T)
pred <- predict(mod, newdata = tabla1.1[-t.id,], type = "class")
table(tabla1.1[-t.id,]$Sexo, pred,dnn = c("Actual", "Predichos") )
mod <- nnet(Sexo ~ ., data = tabla1.1[t.id,],
size = 5, maxit = 1000000, decay = .001, rang = 0.05,
na.action = na.omit, skip = T)
pred <- predict(mod, newdata = tabla1.1[-t.id,], type = "class")
table(tabla1.1[-t.id,]$Sexo, pred,dnn = c("Actual", "Predichos") )
mod <- nnet(Sexo ~ ., data = tabla1.1[t.id,],
size = 3, maxit = 1000000, decay = .001, rang = 0.05,
na.action = na.omit, skip = T)
pred <- predict(mod, newdata = tabla1.1[-t.id,], type = "class")
table(tabla1.1[-t.id,]$Sexo, pred,dnn = c("Actual", "Predichos") )
mod <- nnet(Sexo ~ ., data = tabla1.1[t.id,],
size = 6, maxit = 10000, decay = .001, rang = 0.05,
na.action = na.omit, skip = T)
pred <- predict(mod, newdata = tabla1.1[-t.id,], type = "class")
table(tabla1.1[-t.id,]$Sexo, pred,dnn = c("Actual", "Predichos") )
set.seed(123)
mod <- nnet(Sexo ~ ., data = tabla1.1[t.id,],
size = 3, maxit = 10000, decay = .001, rang = 0.05,
na.action = na.omit, skip = T)
pred <- predict(mod, newdata = tabla1.1[-t.id,], type = "class")
table(tabla1.1[-t.id,]$Sexo, pred,dnn = c("Actual", "Predichos") )
set.seed(123)
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, Grasa, IRCV,IMC, Bpmin, Bpmax, Frec)))
tabla1.1 <- escaladoTablas(tabla1.1)
t.id <- createDataPartition(tabla1.1$Sexo
, p= 0.7, list = F)
mod <- nnet(Sexo ~ ., data = tabla1.1[t.id,],
size = 3, maxit = 10000, decay = .001, rang = 0.05,
na.action = na.omit, skip = T)
pred <- predict(mod, newdata = tabla1.1[-t.id,], type = "class")
table(tabla1.1[-t.id,]$Sexo, pred,dnn = c("Actual", "Predichos") )
mod <- nnet(Sexo ~ ., data = tabla1.1[t.id,],
size = 3, maxit = 10000, decay = .001, rang = 0.05,
na.action = na.omit, skip = T)
pred <- predict(mod, newdata = tabla1.1[-t.id,], type = "class")
table(tabla1.1[-t.id,]$Sexo, pred,dnn = c("Actual", "Predichos") )
install.packages("MASS")
install.packages("MASS")
source("scripts/preprocess.R")
library(MASS)
library(caret)
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec)))
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec)))
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec)))
source("scripts/preprocess.R")
library(MASS)
library(caret)
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
select(-c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec)))
tabla1$tablaSinEsc
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>% select(-c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec)))
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>% select(-c(numVol, Peso, Grasa, IRCV, Bpmin, Bpmax, Frec)))
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
dplyr::select(-c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec)))
tabla1.1 <- escaladoTablas(tabla1.1)
t.id <- createDataPartition(tabla1.1$Sexo, p=0.7, list = F)
mod <- lda(tabla1.1[t.id,1:4], tabla1.1[t.id,5])
mod <- lda(tabla1.1[t.id,-8], tabla1.1[t.id,8])
tabla1.1[t.id, "Pred"] <- predict(mod, tabla1.1[t.id,-8])$Sexo
tabla1.1[t.id, "Pred"] <- predict(mod, tabla1.1[t.id,-8])
mod
predict(mod, tabla1.1[t.id,-8])
tabla1.1[t.id,-8]
tabla1.1[t.id, "Pred"] <- predict(mod, tabla1.1[t.id,-8]$Sexo)
tabla1.1[t.id,-8]$Sexo
tabla1.1[t.id,-8]
predict(mod, tabla1.1[t.id,-8])
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
dplyr::select(-c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec
Endulzante, Tiempo)))
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1.1 <- removeOutliers(tabla1$tablaSinEsc %>%
dplyr::select(-c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec,
Endulzante, Tiempo)))
tabla1.1 <- escaladoTablas(tabla1.1)
t.id <- createDataPartition(tabla1.1$Sexo, p=0.7, list = F)
mod <- lda(tabla1.1[t.id,-6], tabla1.1[t.id,6])
tabla1.1[t.id, "Pred"] <- predict(mod, tabla1.1[t.id,-6])
table(tabla1.1[t.id, "Sexo"], tabla1.1[t.id, "Pred"], dnn = c("Actual", "Predichos"))
tabla1.1[t.id, "Pred"] <- predict(mod, tabla1.1[t.id,-6])$Sexo

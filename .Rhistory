tabla_0xM <- subset(tabla, Tiempo == "0" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_0xF <- subset(tabla, Tiempo == "0" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxM <- subset(tabla, Tiempo == "Final" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxF <- subset(tabla, Tiempo == "Final" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante, numVol))
pca_0xM <- PCA(tabla_0xM, scale.unit=F)
print(fviz_contrib(pca_0xM, choice="var", title = paste("ContribVar dim1 Tiempo 0 Sexo M", nombreTabla)))
print(fviz_contrib(pca_0xM, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo 0 Sexo M",
nombreTabla)))
pca_0xF <- PCA(tabla_0xF, scale.unit=F)
print(fviz_contrib(pca_0xF, choice="var", title = paste("ContribVar dim1 Tiempo 0 Sexo F", nombreTabla)))
print(fviz_contrib(pca_0xF, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo 0 Sexo F",
nombreTabla)))
pca_FxM <- PCA(tabla_FxM, scale.unit=F)
print(fviz_contrib(pca_FxM, choice="var", title = paste("ContribVar dim1 Tiempo F Sexo M", nombreTabla)))
print(fviz_contrib(pca_FxM, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo F Sexo M",
nombreTabla)))
pca_FxF <- PCA(tabla_FxF, scale.unit=F)
print(fviz_contrib(pca_FxF, choice="var", title = paste("ContribVar dim1 Tiempo F Sexo F", nombreTabla)))
print(fviz_contrib(pca_FxF, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo F Sexo F",
nombreTabla)))
print(fviz_contrib(pca_0xM, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo 0 Sexo M",
nombreTabla)))
# PCA TiempoxEndulzante
# PCA SexoxEndulzante
tabla_MxSAx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSAxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSAx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSAxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSTx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSTxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="ST"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSTx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSTxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSUx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSUxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSUx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSUxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
pca_MxSAx0 <- PCA(tabla_MxSAx0, scale.unit=F)
print(fviz_contrib(pca_MxSAx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SA Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSAx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SA Tiempo 0",
nombreTabla)))
pca_MxSAxF <- PCA(tabla_MxSAxF, scale.unit=F)
print(fviz_contrib(pca_MxSAxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SA Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSAxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SA Tiempo F",
nombreTabla)))
pca_FxSAx0 <- PCA(tabla_FxSAx0, scale.unit=F)
print(fviz_contrib(pca_FxSAx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SA Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_FxSAx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SA Tiempo 0",
nombreTabla)))
pca_FxSAxF <- PCA(tabla_FxSAxF, scale.unit=F)
print(fviz_contrib(pca_FxSAxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SA Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_FxSAxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SA Tiempo F",
nombreTabla)))
pca_MxSTx0 <- PCA(tabla_MxSTx0, scale.unit=F)
print(fviz_contrib(pca_MxSTx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante ST Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSTx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante ST Tiempo 0",
nombreTabla)))
pca_MxSTxF <- PCA(tabla_MxSTxF, scale.unit=F)
print(fviz_contrib(pca_MxSTxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante ST Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSTxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante ST Tiempo F",
nombreTabla)))
pca_FxSTx0 <- PCA(tabla_FxSTx0, scale.unit=F)
print(fviz_contrib(pca_FxSTx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante ST Tiempo 0", nombreTabla)))
print(fviz_contrib(pca_FxSTx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante ST Tiempo 0",
nombreTabla)))
pca_FxSTxF <- PCA(tabla_FxSTxF, scale.unit=F)
print(fviz_contrib(pca_FxSTxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante ST Tiempo F", nombreTabla)))
print(fviz_contrib(pca_FxSTxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante ST Tiempo F",
nombreTabla)))
pca_MxSUx0 <- PCA(tabla_MxSUx0, scale.unit=F)
print(fviz_contrib(pca_MxSUx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SU Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSUx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SU Tiempo 0",
nombreTabla)))
pca_MxSUxF <- PCA(tabla_MxSUxF, scale.unit=F)
print(fviz_contrib(pca_MxSUxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SU Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSUxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SU Tiempo F",
nombreTabla)))
pca_FxSUx0 <- PCA(tabla_FxSUx0, scale.unit=F)
print(fviz_contrib(pca_FxSUx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SU Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_FxSUx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SU Tiempo 0",
nombreTabla)))
pca_FxSUxF <- PCA(tabla_FxSUxF, scale.unit=F)
print(fviz_contrib(pca_FxSUxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SU Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_FxSUxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SU Tiempo F",
nombreTabla)))
}
clusterVarios <- function (tabla, nclust) {
nombreTabla <- deparse(quote(tabla))
### Aplicamos clustering
# K-means clustering
set.seed(123)
km_datos_A <- kmeans(x = tabla, centers = nclust)
p1 <- fviz_cluster(object = km_datos_A, data = tabla,
ellipse.type = "norm", geom = "point", main = paste("Resultados clustering kmeans ",
nombreTabla),
stand = FALSE, palette = "jco", show.legend = T)
# PAM clustering
pam_clusters <- pam(x = tabla, k = nclust, metric = "manhattan")
p2 <- fviz_cluster(object = pam_clusters, data = tabla, ellipse.type = "t",
repel = TRUE) +
theme_bw() +
labs(title = "Resultados clustering PAM") +
theme(legend.position = "none")
# fuzzy clustering
fuzzy_cluster <- fanny(x = tabla, k = nclust, diss = FALSE, metric = "manhattan", stand = FALSE)
p3 <- fviz_cluster(object = fuzzy_cluster, repel = TRUE, ellipse.type = "norm",
pallete = "jco") + theme_bw() + labs(title = "Fuzzy Cluster plot")
# Hierarchical clustering
p4 <- fviz_dend(x = hclust(get_dist(tabla, method = "manhattan")), k = nclust, k_colors = "jco",
show_labels = T, main = paste("Datos ", nombreTabla))
model_clustering <- Mclust(tabla)
p5 <- fviz_mclust(object = model_clustering, what = "BIC", pallete = "jco") +
scale_x_discrete(limits = c(1:10))
p6 <- fviz_mclust(model_clustering, what = "classification", geom = "point",
pallete = "jco")
print(p1)
print(p2)
print(p3)
print(p4)
print(p5)
print(p6)
return(model_clustering)
}
set.seed(123)
orinaFlav <- preprocessTablas("data/", "tablaOrinaFlav.csv")
orinaFlavFactors <- orinaFlav$tablaFactors
orinaFlavNum <- orinaFlav$tablaNum
orinaFlavT_0 <- orinaFlav$tabla_Tiempo0
orinaFlavT_F <- orinaFlav$tabla_TiempoF
pcaVarios(orinaFlavFactors, "orina flavonoides")
orinaFlav_Factors_T0 <- subset(orinaFlavFactors, Tiempo == "0")
orinaFlav_Factors_TF <- subset(orinaFlavFactors, Tiempo == "Final")
model_clustering_OFT_0 <- Mclust(orinaFlavT_0[, colnames(orinaFlavT_0) != "numVol"])
model_clustering_OFT_F <- Mclust(orinaFlavT_F[, colnames(orinaFlavT_F) != "numVol"])
orinaFlav_Factors_T0 <- subset(orinaFlavFactors, Tiempo == "0")
orinaFlav_Factors_TF <- subset(orinaFlavFactors, Tiempo == "Final")
model_clustering_OFT_0 <- Mclust(orinaFlavT_0[, colnames(orinaFlavT_0) != "numVol"])
model_clustering_OFT_F <- Mclust(orinaFlavT_F[, colnames(orinaFlavT_F) != "numVol"])
p1 <- fviz_mclust(object = model_clustering_OFT_0, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav T 0") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OFT_0, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav T 0", pallete = "jco")
p3 <- fviz_mclust(object = model_clustering_OFT_F, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav T F") + scale_x_discrete(limits = c(1:10))
p4 <- fviz_mclust(model_clustering_OFT_F, what = "classification", geom = "point",
title = "Clusters plot Orina Flav T F", pallete = "jco")
ggarrange(p1,p3)
ggarrange(p2,p4)
orinaFlavNum_0_clusters <- cbind(orinaFlavT_0, clusters = as.factor(model_clustering_OFT_0$classification),
Endulzante = orinaFlav_Factors_T0$Endulzante,
Sexo = orinaFlav_Factors_T0$Sexo)
orinaFlavNum_F_clusters <- cbind(orinaFlavT_F, clusters = as.factor(model_clustering_OFT_F$classification),
Endulzante = orinaFlav_Factors_TF$Endulzante,
Sexo = orinaFlav_Factors_TF$Sexo)
tableSexo0 <- table(orinaFlavNum_0_clusters$Sexo,orinaFlavNum_0_clusters$clusters)
tableEdulcorante0 <- table(orinaFlavNum_0_clusters$Endulzante,orinaFlavNum_0_clusters$clusters)
tableSexoF <- table(orinaFlavNum_F_clusters$Sexo,orinaFlavNum_F_clusters$clusters)
tableEdulcoranteF <- table(orinaFlavNum_F_clusters$Endulzante,orinaFlavNum_F_clusters$clusters)
orinaFlavNum_0_clusters$Endulzante <- rescale(as.numeric(orinaFlavNum_0_clusters$Endulzante))
orinaFlavNum_0_clusters$Sexo <- rescale(as.numeric(orinaFlavNum_0_clusters$Sexo))
orinaFlavNum_F_clusters$Endulzante <- rescale(as.numeric(orinaFlavNum_F_clusters$Endulzante))
orinaFlavNum_F_clusters$Sexo <- rescale(as.numeric(orinaFlavNum_F_clusters$Sexo))
longtableT_0 <-melt(orinaFlavNum_0_clusters[,colnames(orinaFlavNum_0_clusters)!="numVol"], id = "clusters")
longtableT_F <-melt(orinaFlavNum_F_clusters[,colnames(orinaFlavNum_0_clusters)!="numVol"], id = "clusters")
ggplot(longtableT_0, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexo0, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante0, theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids T 0")+
labs(y = "standarized value", x = "variables/clusters")
ggplot(longtableT_F, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteF, theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids T F")+
labs(y = "standarized value", x = "variables/clusters")
p <- ggparcoord(data = orinaFlavNum_0_clusters[, colnames(orinaFlavT_0) != "numVol"], groupColumn = "clusters",
scale = "std", columns = c(1,2,3,4,5,6,7,8,9,10,11,12,14,15)) +
labs(x = "variables",
y = "value (in standard-deviation units)",
title = "Clustering Tiempo 0")
p1 <- ggparcoord(data = orinaFlavNum_F_clusters[, colnames(orinaFlavT_F) != "numVol"], groupColumn = "clusters",
scale = "std", columns = c(1,2,3,4,5,6,7,8,9,10,11,12,14,15)) +
labs(x = "variables",
y = "value (in standard-deviation units)",
title = "Clustering Tiempo F")
ggarrange(p,p1)
orinaAnt <- preprocessTablas("data/", "tablaOrinaAnt.csv")
preprocessTablas <- function(root, nombreTabla) {
# Getting data ready
rootTabla <- paste0(root, nombreTabla)
tabla <- read.csv(rootTabla)
# Make factors of categorical features
tabla$Endulzante <- factor(tabla$Endulzante, levels = c("SA", "ST", "SU"))
tabla$Sexo <- factor(tabla$Sexo, levels = c("HOMBRE", "MUJER"))
tabla$Tiempo <- factor(tabla$Tiempo, levels = c("0", "Final"))
tabla$numVol <- factor(tabla$numVol)
for (i in seq(1:nrow(tabla))){
if (tabla$Tiempo[i] == "0"){
tabla$Peso[i] = tabla$Peso.inicial[i]
tabla$IMC[i] = tabla$IMC.Inicial[i]
tabla$Grasa[i] = tabla$Grasa.inicial[i]
tabla$IRCV[i] = tabla$IRCV.inicial[i]
tabla$Bpmin[i] = tabla$Bpmin.inicial[i]
tabla$Bpmax[i] = tabla$Bpmax.inicial[i]
tabla$Frec[i] = tabla$Frec.inicial[i]
}
else if (tabla$Tiempo[i] == "Final"){
tabla$Peso[i] = tabla$Peso.final[i]
tabla$IMC[i] = tabla$IMC.Final[i]
tabla$Grasa[i] = tabla$Grasa.final[i]
tabla$IRCV[i] = tabla$IRCV.Final[i]
tabla$Bpmin[i] = tabla$Bpmin.final[i]
tabla$Bpmax[i] = tabla$Bpmax.final[i]
tabla$Frec[i] = tabla$Frec.final[i]
}
}
# Removing of trivial redundant and useless features
set.A <- subset(tabla, select =-c(X.1, X, Peso.inicial, Peso.final, Delta.Peso, Talla, IMC.Inicial, IMC.Final,
Delta.IMC, Grasa.inicial, Grasa.final, Delta.Grasa, IRCV.Final, IRCV.inicial,
Bpmin.final, Bpmin.inicial, Bpmax.final, Bpmax.inicial, Frec.final, Frec.inicial))
# Only numerical features
set.A_num <- subset(set.A, select=-c(Endulzante, Sexo, Tiempo, numVol))
#Rescaling, can use "set.A_rescaled <- scale(set.A_num)" too
set.A_rescaled <- set.A_num %>% mutate_each_(list(~rescale(.) %>% as.vector),
vars = colnames(set.A_num))
set.A_factors <- cbind(set.A_rescaled, Endulzante = set.A$Endulzante,
Tiempo = set.A$Tiempo, Sexo = set.A$Sexo, numVol = set.A$numVol)
tabla_Tiempo <- subset(set.A_factors, select=-c(Endulzante, Sexo))
tabla_Tiempo0 <- subset(tabla_Tiempo, Tiempo == "0", select = -Tiempo)
tabla_TiempoF <- subset(tabla_Tiempo, Tiempo == "Final", select = -Tiempo)
tabla_Sexo <- subset(set.A_factors, select=-c(Endulzante, Tiempo))
tabla_SexoM <- subset(tabla_Sexo, Sexo == "HOMBRE", select = -Sexo)
tabla_SexoF <- subset(tabla_Sexo, Sexo == "MUJER", select = -Sexo)
tabla_Endulzante <- subset(set.A_factors, select=-c(Sexo, Tiempo))
tabla_EndulzanteSA <- subset(tabla_Endulzante, Endulzante == "SA", select = -Endulzante)
tabla_EndulzanteSU <- subset(tabla_Endulzante, Endulzante == "SU", select = -Endulzante)
tabla_EndulzanteST <- subset(tabla_Endulzante, Endulzante == "ST", select = -Endulzante)
tabla_0xM <- subset(set.A_factors, Tiempo == "0" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante))
tabla_0xF <- subset(set.A_factors, Tiempo == "0" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante))
tabla_FxM <- subset(set.A_factors, Tiempo == "Final" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante))
tabla_FxF <- subset(set.A_factors, Tiempo == "Final" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSAx0 <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSAxF <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSAx0 <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSAxF <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSTx0 <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSTxF <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="ST"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSTx0 <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSTxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSUx0 <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSUxF <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSUx0 <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSUxF <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
return(list(tablaFactors = set.A_factors, tablaNum = set.A_rescaled,
tabla_Tiempo = tabla_Tiempo, tabla_Tiempo0 = tabla_Tiempo0,
tabla_TiempoF = tabla_TiempoF,  tabla_Sexo=tabla_Sexo,
tabla_SexoM=tabla_SexoM, tabla_SexoF=tabla_SexoF,
tabla_Endulzante=tabla_Endulzante,
tabla_EndulzanteSA=tabla_EndulzanteSA,
tabla_EndulzanteSU=tabla_EndulzanteSU,
tabla_EndulzanteST=tabla_EndulzanteST,
tabla_0xM=tabla_0xM,tabla_0xF=tabla_0xF,
tabla_FxM=tabla_FxM, tabla_FxF=tabla_FxF,
tabla_MxSAx0=tabla_MxSAx0, tabla_MxSAxF=tabla_MxSAxF,
tabla_FxSAx0=tabla_FxSAx0, tabla_FxSAxF=tabla_FxSAxF,
tabla_MxSTx0=tabla_MxSTx0, tabla_MxSTxF=tabla_MxSTxF,
tabla_FxSTx0=tabla_FxSTx0, tabla_FxSTxF=tabla_FxSTxF,
tabla_MxSUx0=tabla_MxSUx0, tabla_MxSUxF=tabla_MxSUxF,
tabla_FxSUx0=tabla_FxSUx0, tabla_FxSUxF=tabla_FxSUxF))
}
orinaAnt <- preprocessTablas("data/", "tablaOrinaAnt.csv")
orinaAntFactors <- orinaAnt$tablaFactors
orinaAntNum <- orinaAnt$tablaNum
orinaAntT_0 <- orinaAnt$tabla_Tiempo0
orinaAntT_F <- orinaAnt$tabla_TiempoF
pcaVarios(orinaAntFactors, "orina antocianos")
orinaAnt_Factors_T0 <- subset(orinaAntFactors, Tiempo == "0")
orinaAnt_Factors_TF <- subset(orinaAntFactors, Tiempo == "Final")
model_clustering_OFT_0 <- Mclust(orinaAntT_0[, colnames(orinaAntT_0) != "numVol"])
model_clustering_OFT_F <- Mclust(orinaAntT_F[, colnames(orinaAntT_F) != "numVol"])
p1 <- fviz_mclust(object = model_clustering_OFT_0, what = "BIC", pallete = "jco",
title = "Model Selection Orina Ant T 0") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OFT_0, what = "classification", geom = "point",
title = "Clusters Plot Orina Ant T 0", pallete = "jco")
p3 <- fviz_mclust(object = model_clustering_OFT_F, what = "BIC", pallete = "jco",
title = "Model Selection Orina Ant T F") + scale_x_discrete(limits = c(1:10))
p4 <- fviz_mclust(model_clustering_OFT_F, what = "classification", geom = "point",
title = "Clusters Plot Orina Ant T F", pallete = "jco")
ggarrange(p1,p3)
ggarrange(p2,p4)
orinaAntNum_0_clusters <- cbind(orinaAntT_0, clusters = as.factor(model_clustering_OFT_0$classification),
Endulzante = orinaAnt_Factors_T0$Endulzante,
Sexo = orinaAnt_Factors_T0$Sexo)
orinaAntNum_F_clusters <- cbind(orinaAntT_F, clusters = as.factor(model_clustering_OFT_F$classification),
Endulzante = orinaAnt_Factors_TF$Endulzante,
Sexo = orinaAnt_Factors_TF$Sexo)
tableSexo0 <- table(orinaAntNum_0_clusters$Sexo,orinaAntNum_0_clusters$clusters)
tableEdulcorante0 <- table(orinaAntNum_0_clusters$Endulzante,orinaAntNum_0_clusters$clusters)
tableSexoF <- table(orinaAntNum_F_clusters$Sexo,orinaAntNum_F_clusters$clusters)
tableEdulcoranteF <- table(orinaAntNum_F_clusters$Endulzante,orinaAntNum_F_clusters$clusters)
orinaAntNum_0_clusters$Endulzante <- rescale(as.numeric(orinaAntNum_0_clusters$Endulzante))
orinaAntNum_0_clusters$Sexo <- rescale(as.numeric(orinaAntNum_0_clusters$Sexo))
orinaAntNum_F_clusters$Endulzante <- rescale(as.numeric(orinaAntNum_F_clusters$Endulzante))
orinaAntNum_F_clusters$Sexo <- rescale(as.numeric(orinaAntNum_F_clusters$Sexo))
longtableT_0 <-melt(orinaAntNum_0_clusters[,colnames(orinaAntNum_0_clusters)!="numVol"], id = "clusters")
longtableT_F <-melt(orinaAntNum_F_clusters[,colnames(orinaAntNum_0_clusters)!="numVol"], id = "clusters")
ggplot(longtableT_0, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexo0, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante0, theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Antocians T 0")+
labs(y = "standarized value", x = "variables/clusters")
ggplot(longtableT_F, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteF, theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Antocians T F")+
labs(y = "standarized value", x = "variables/clusters")
p <- ggparcoord(data = orinaAntNum_0_clusters[, colnames(orinaAntT_0) != "numVol"], groupColumn = "clusters",
scale = "std", columns = c(1,2,3,4,5,6,7,8,9,10,11,12,14,15)) +
labs(x = "variables",
y = "value (in standard-deviation units)",
title = "Clustering Tiempo 0")
p1 <- ggparcoord(data = orinaAntNum_F_clusters[, colnames(orinaAntT_F) != "numVol"], groupColumn = "clusters",
scale = "std", columns = c(1,2,3,4,5,6,7,8,9,10,11,12,14,15)) +
labs(x = "variables",
y = "value (in standard-deviation units)",
title = "Clustering Tiempo F")
ggarrange(p,p1)
plasmaAnt <- preprocessTablas("data/", "cronicoplasmaAnt_Antro.csv")
plasmaAnt <- preprocessTablas("data/", "tablaplasmaAnt.csv")
plasmaAntFactors <- plasmaAnt$tablaFactors
plasmaAntNum <- plasmaAnt$tablaNum
plasmaAntT_0 <- plasmaAnt$tabla_Tiempo0
plasmaAntT_F <- plasmaAnt$tabla_TiempoF
pcaVarios(plasmaAntFactors, "Plasma Antocianos")
plasmaAnt_Factors_T0 <- subset(plasmaAntFactors, Tiempo == "0")
plasmaAnt_Factors_TF <- subset(plasmaAntFactors, Tiempo == "Final")
model_clustering_OFT_0 <- Mclust(plasmaAntT_0[, colnames(plasmaAntT_0) != "numVol"])
model_clustering_OFT_F <- Mclust(plasmaAntT_F[, colnames(plasmaAntT_F) != "numVol"])
plasmaAntFactors
plasmaAntT_0
p1 <- fviz_mclust(object = model_clustering_OFT_0, what = "BIC", pallete = "jco",
title = "Model Selection Plasma Ant T 0") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OFT_0, what = "classification", geom = "point",
title = "Clusters Plot Plasma Ant T 0", pallete = "jco")
p3 <- fviz_mclust(object = model_clustering_OFT_F, what = "BIC", pallete = "jco",
title = "Model Selection Plasma Ant T F") + scale_x_discrete(limits = c(1:10))
p4 <- fviz_mclust(model_clustering_OFT_F, what = "classification", geom = "point",
title = "Clusters Plot Plasma Ant T F", pallete = "jco")
ggarrange(p1,p3)
ggarrange(p2,p4)
plasmaAntNum_0_clusters <- cbind(plasmaAntT_0, clusters = as.factor(model_clustering_OFT_0$classification),
Endulzante = plasmaAnt_Factors_T0$Endulzante,
Sexo = plasmaAnt_Factors_T0$Sexo)
plasmaAntNum_F_clusters <- cbind(plasmaAntT_F, clusters = as.factor(model_clustering_OFT_F$classification),
Endulzante = plasmaAnt_Factors_TF$Endulzante,
Sexo = plasmaAnt_Factors_TF$Sexo)
tableSexo0 <- table(plasmaAntNum_0_clusters$Sexo,plasmaAntNum_0_clusters$clusters)
tableEdulcorante0 <- table(plasmaAntNum_0_clusters$Endulzante,plasmaAntNum_0_clusters$clusters)
tableSexoF <- table(plasmaAntNum_F_clusters$Sexo,plasmaAntNum_F_clusters$clusters)
tableEdulcoranteF <- table(plasmaAntNum_F_clusters$Endulzante,plasmaAntNum_F_clusters$clusters)
plasmaAntNum_0_clusters$Endulzante <- rescale(as.numeric(plasmaAntNum_0_clusters$Endulzante))
plasmaAntNum_0_clusters$Sexo <- rescale(as.numeric(plasmaAntNum_0_clusters$Sexo))
plasmaAntNum_F_clusters$Endulzante <- rescale(as.numeric(plasmaAntNum_F_clusters$Endulzante))
plasmaAntNum_F_clusters$Sexo <- rescale(as.numeric(plasmaAntNum_F_clusters$Sexo))
longtableT_0 <-melt(plasmaAntNum_0_clusters[,colnames(plasmaAntNum_0_clusters)!="numVol"], id = "clusters")
longtableT_F <-melt(plasmaAntNum_F_clusters[,colnames(plasmaAntNum_0_clusters)!="numVol"], id = "clusters")
ggplot(longtableT_0, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 15, y = 1.03, label = "Mujer") +
annotate("text",x = 15, y = -0.03, label = "Hombre") +
annotate("text", x = 14, y = 1.03, label = "SU") +
annotate("text",x = 14, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexo0, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 15,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante0, theme = ttheme_default(base_size = 8)), xmin= 15,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Plasma Antocians T 0")+
labs(y = "standarized value", x = "variables/clusters")
ggplot(longtableT_F, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 15, y = 1.03, label = "Mujer") +
annotate("text",x = 15, y = -0.03, label = "Hombre") +
annotate("text", x = 14, y = 1.03, label = "SU") +
annotate("text",x = 14, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 15,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteF, theme = ttheme_default(base_size = 8)), xmin= 15,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Plasma Antocians T F")+
labs(y = "standarized value", x = "variables/clusters")
p <- ggparcoord(data = plasmaAntNum_0_clusters[, colnames(plasmaAntT_0) != "numVol"], groupColumn = "clusters",
scale = "std", columns = c(1,2,3,4,5,6,7,8,9,10,11,12,13,15)) +
labs(x = "variables",
y = "value (in standard-deviation units)",
title = "Clustering Tiempo 0")
p1 <- ggparcoord(data = plasmaAntNum_F_clusters[, colnames(plasmaAntT_F) != "numVol"], groupColumn = "clusters",
scale = "std", columns = c(1,2,3,4,5,6,7,8,9,10,11,12,13,15)) +
labs(x = "variables",
y = "value (in standard-deviation units)",
title = "Clustering Tiempo F")
ggarrange(p,p1)
plasmaFlav <- preprocessTablas("data/", "tablaplasmaFlav.csv")
plasmaFlavFactors <- plasmaFlav$tablaFactors
plasmaFlavNum <- plasmaFlav$tablaNum
plasmaFlavT_0 <- plasmaFlav$tabla_Tiempo0
plasmaFlavT_F <- plasmaFlav$tabla_TiempoF
pcaVarios(plasmaFlavFactors, "Plasma Antocianos")
plasmaFlav
plasmaFlav$tablaFactors
read.csv("data/tablaPlasmaFlav.csv")
plasmaFlavFactors <- plasmaFlav$tablaFactors
plasmaFlavNum <- plasmaFlav$tablaNum
plasmaFlavT_0 <- plasmaFlav$tabla_Tiempo0
plasmaFlavT_F <- plasmaFlav$tabla_TiempoF
plasmaFlav_Factors_T0 <- subset(plasmaFlavFactors, Tiempo == "0")
plasmaFlav_Factors_TF <- subset(plasmaFlavFactors, Tiempo == "Final")
model_clustering_OFT_0 <- Mclust(plasmaFlavT_0[, colnames(plasmaFlavT_0) != "numVol"])
model_clustering_OFT_F <- Mclust(plasmaFlavT_F[, colnames(plasmaFlavT_F) != "numVol"])
p1 <- fviz_mclust(object = model_clustering_OFT_0, what = "BIC", pallete = "jco",
title = "Model Selection Plasma Flav T 0") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OFT_0, what = "classification", geom = "point",
title = "Clusters Plot Plasma Flav T 0", pallete = "jco")
p3 <- fviz_mclust(object = model_clustering_OFT_F, what = "BIC", pallete = "jco",
title = "Model Selection Plasma Flav T F") + scale_x_discrete(limits = c(1:10))
p4 <- fviz_mclust(model_clustering_OFT_F, what = "classification", geom = "point",
title = "Clusters Plot Plasma Flav T F", pallete = "jco")
ggarrange(p1,p3)
ggarrange(p2,p4)
plasmaFlavNum_0_clusters <- cbind(plasmaFlavT_0, clusters = as.factor(model_clustering_OFT_0$classification),
Endulzante = plasmaFlav_Factors_T0$Endulzante,
Sexo = plasmaFlav_Factors_T0$Sexo)
plasmaFlavNum_F_clusters <- cbind(plasmaFlavT_F, clusters = as.factor(model_clustering_OFT_F$classification),
Endulzante = plasmaFlav_Factors_TF$Endulzante,
Sexo = plasmaFlav_Factors_TF$Sexo)
tableSexo0 <- table(plasmaFlavNum_0_clusters$Sexo,plasmaFlavNum_0_clusters$clusters)
tableEdulcorante0 <- table(plasmaFlavNum_0_clusters$Endulzante,plasmaFlavNum_0_clusters$clusters)
tableSexoF <- table(plasmaFlavNum_F_clusters$Sexo,plasmaFlavNum_F_clusters$clusters)
tableEdulcoranteF <- table(plasmaFlavNum_F_clusters$Endulzante,plasmaFlavNum_F_clusters$clusters)
plasmaFlavNum_0_clusters$Endulzante <- rescale(as.numeric(plasmaFlavNum_0_clusters$Endulzante))
plasmaFlavNum_0_clusters$Sexo <- rescale(as.numeric(plasmaFlavNum_0_clusters$Sexo))
plasmaFlavNum_F_clusters$Endulzante <- rescale(as.numeric(plasmaFlavNum_F_clusters$Endulzante))
plasmaFlavNum_F_clusters$Sexo <- rescale(as.numeric(plasmaFlavNum_F_clusters$Sexo))
longtableT_0 <-melt(plasmaFlavNum_0_clusters[,colnames(plasmaFlavNum_0_clusters)!="numVol"], id = "clusters")
longtableT_F <-melt(plasmaFlavNum_F_clusters[,colnames(plasmaFlavNum_0_clusters)!="numVol"], id = "clusters")
ggplot(longtableT_0, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 15, y = 1.03, label = "Mujer") +
annotate("text",x = 15, y = -0.03, label = "Hombre") +
annotate("text", x = 14, y = 1.03, label = "SU") +
annotate("text",x = 14, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexo0, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 15,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorante0, theme = ttheme_default(base_size = 8)), xmin= 15,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Plasma Flavonoids T 0")+
labs(y = "standarized value", x = "variables/clusters")
ggplot(longtableT_F, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 15, y = 1.03, label = "Mujer") +
annotate("text",x = 15, y = -0.03, label = "Hombre") +
annotate("text", x = 14, y = 1.03, label = "SU") +
annotate("text",x = 14, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 15,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteF, theme = ttheme_default(base_size = 8)), xmin= 15,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Plasma Flavonoids T F")+
labs(y = "standarized value", x = "variables/clusters")

}
pruebaUwu <- estadisticosDescriptivos(tablaFactores)
estadisticosDescriptivos <- function (tabla) {
for (i in seq(colnames(tabla))){
if (is.numeric(tabla[, i])){
min <- min(tabla[, i], na.rm = TRUE)
q1 <- quantile(tabla[, i], probs = 0.25, na.rm = TRUE)
media <- mean.default(tabla[, i], na.rm = TRUE)
media_rec <- mean.default(tabla[, i], trim = 0.025, na.rm = TRUE)
mediana <- median.default(tabla[, i], na.rm = TRUE)
moda <- mfv(tabla[, i])
var <- var(tabla[, i], na.rm = TRUE)
desvest <- sd(tabla[, i], na.rm = TRUE)
q3 <- quantile(tabla[, i], probs = 0.75, na.rm = TRUE)
max <- max(tabla[, i], na.rm = TRUE)
s <- skew(tabla[, i])
c <- kurtosi(tabla[, i])
#Valores de estadísticos como vector
nombre <- paste("descriptivos_",colnames(tabla)[i])
assign(nombre, as.numeric(c(min, q1, media, media_rec, mediana, moda,
var, desvest, q3, max, s, c)))
#Encabezados de cada estadístico como un vector
nombres <- c("Mínimo", "Q1", "Media", "Media recortada", "Mediana", "Moda",
"Varianza", "Desviación Estándar", "Q3", "Máximo", "Simetría", "Curtosis")
descr2 <- data.frame()
descr2 <- as.data.frame(rbind(descr2, paste("descriptivos_",colnames(tabla)[i])))
}
}
return (descr2)
}
pruebaUwu <- estadisticosDescriptivos(tablaFactores)
View(pruebaUwu)
estadisticosDescriptivos <- function (tabla) {
descr2 <- data.frame()
for (i in seq(colnames(tabla))){
if (is.numeric(tabla[, i])){
min <- min(tabla[, i], na.rm = TRUE)
q1 <- quantile(tabla[, i], probs = 0.25, na.rm = TRUE)
media <- mean.default(tabla[, i], na.rm = TRUE)
media_rec <- mean.default(tabla[, i], trim = 0.025, na.rm = TRUE)
mediana <- median.default(tabla[, i], na.rm = TRUE)
moda <- mfv(tabla[, i])
var <- var(tabla[, i], na.rm = TRUE)
desvest <- sd(tabla[, i], na.rm = TRUE)
q3 <- quantile(tabla[, i], probs = 0.75, na.rm = TRUE)
max <- max(tabla[, i], na.rm = TRUE)
s <- skew(tabla[, i])
c <- kurtosi(tabla[, i])
#Valores de estadísticos como vector
nombre <- paste("descriptivos_",colnames(tabla)[i])
assign(nombre, as.numeric(c(min, q1, media, media_rec, mediana, moda,
var, desvest, q3, max, s, c)))
#Encabezados de cada estadístico como un vector
nombres <- c("Mínimo", "Q1", "Media", "Media recortada", "Mediana", "Moda",
"Varianza", "Desviación Estándar", "Q3", "Máximo", "Simetría", "Curtosis")
descr2 <- as.data.frame(rbind(descr2, paste("descriptivos_",colnames(tabla)[i])))
}
}
return (descr2)
}
pruebaUwu <- estadisticosDescriptivos(tablaFactores)
View(pruebaUwu)
View(pruebaUwu)
estadisticosDescriptivos <- function (tabla) {
descr2 <- data.frame()
for (i in seq(colnames(tabla))){
if (is.numeric(tabla[, i])){
min <- min(tabla[, i], na.rm = TRUE)
q1 <- quantile(tabla[, i], probs = 0.25, na.rm = TRUE)
media <- mean.default(tabla[, i], na.rm = TRUE)
media_rec <- mean.default(tabla[, i], trim = 0.025, na.rm = TRUE)
mediana <- median.default(tabla[, i], na.rm = TRUE)
moda <- mfv(tabla[, i])
var <- var(tabla[, i], na.rm = TRUE)
desvest <- sd(tabla[, i], na.rm = TRUE)
q3 <- quantile(tabla[, i], probs = 0.75, na.rm = TRUE)
max <- max(tabla[, i], na.rm = TRUE)
s <- skew(tabla[, i])
c <- kurtosi(tabla[, i])
#Valores de estadísticos como vector
nombre <- paste("descriptivos_",colnames(tabla)[i])
descriptivos <- as.numeric(c(min, q1, media, media_rec, mediana, moda,
var, desvest, q3, max, s, c)))
#Encabezados de cada estadístico como un vector
nombres <- c(nombre, "Mínimo", "Q1", "Media", "Media recortada", "Mediana", "Moda",
"Varianza", "Desviación Estándar", "Q3", "Máximo", "Simetría", "Curtosis")
descr2 <- as.data.frame(rbind(nombres, nombre))
}
}
return (descr2)
}
estadisticosDescriptivos <- function (tabla) {
if (is.numeric(tabla[, variableNum])){
min <- min(tabla[, variableNum], na.rm = TRUE)
q1 <- quantile(tabla[, variableNum], probs = 0.25, na.rm = TRUE)
media <- mean.default(tabla[, variableNum], na.rm = TRUE)
media_rec <- mean.default(tabla[, variableNum], trim = 0.025, na.rm = TRUE)
mediana <- median.default(tabla[, variableNum], na.rm = TRUE)
moda <- mfv(tabla[, variableNum])
var <- var(tabla[, variableNum], na.rm = TRUE)
desvest <- sd(tabla[, variableNum], na.rm = TRUE)
q3 <- quantile(tabla[, variableNum], probs = 0.75, na.rm = TRUE)
max <- max(tabla[, variableNum], na.rm = TRUE)
s <- skew(tabla[, variableNum])
c <- kurtosi(tabla[, variableNum])
#Valores de estadísticos como vector
descriptivos <- as.numeric(c(min, q1, media, media_rec, mediana, moda,
var, desvest, q3, max, s, c))
#Encabezados de cada estadístico como un vector
nombres <- c("Mínimo", "Q1", "Media", "Media recortada", "Mediana", "Moda",
"Varianza", "Desviación Estándar", "Q3", "Máximo", "Simetría", "Curtosis")
descr2 <- as.data.frame(rbind(nombres, descriptivos))
}
return (descr2)
}
pruebaUwu <- estadisticosDescriptivos(tablaFactores, "Peso")
estadisticosDescriptivos <- function (tabla, variableNum) {
if (is.numeric(tabla[, variableNum])){
min <- min(tabla[, variableNum], na.rm = TRUE)
q1 <- quantile(tabla[, variableNum], probs = 0.25, na.rm = TRUE)
media <- mean.default(tabla[, variableNum], na.rm = TRUE)
media_rec <- mean.default(tabla[, variableNum], trim = 0.025, na.rm = TRUE)
mediana <- median.default(tabla[, variableNum], na.rm = TRUE)
moda <- mfv(tabla[, variableNum])
var <- var(tabla[, variableNum], na.rm = TRUE)
desvest <- sd(tabla[, variableNum], na.rm = TRUE)
q3 <- quantile(tabla[, variableNum], probs = 0.75, na.rm = TRUE)
max <- max(tabla[, variableNum], na.rm = TRUE)
s <- skew(tabla[, variableNum])
c <- kurtosi(tabla[, variableNum])
#Valores de estadísticos como vector
descriptivos <- as.numeric(c(min, q1, media, media_rec, mediana, moda,
var, desvest, q3, max, s, c))
#Encabezados de cada estadístico como un vector
nombres <- c("Mínimo", "Q1", "Media", "Media recortada", "Mediana", "Moda",
"Varianza", "Desviación Estándar", "Q3", "Máximo", "Simetría", "Curtosis")
descr2 <- as.data.frame(rbind(nombres, descriptivos))
}
return (descr2)
}
pruebaUwu <- estadisticosDescriptivos(tablaFactores, "Peso")
View(pruebaUwu)
skimr::skim(tablaFactores)
diana
gc()
source("scripts/reading.R")
source("scripts/preprocess.R")
source("../scripts/preprocess.R")
source("preprocess.R")
source("./preprocess.R")
source("scripts/preprocess.R")
orinaFlav <- preprocessTablas1("../data/", "tablaOrinaFlav.csv")
orinaFlav <- preprocessTables1("../data/", "tablaOrinaFlav.csv")
orinaFlav <- preprocessTables("../data/", "tablaOrinaFlav.csv")
orinaFlav <- preprocessTables("data/", "tablaOrinaFlav.csv")
orinaAnt <- preprocessTables("data/", "tablaorinaAnt.csv")
plasmaAnt <- preprocessTables("data/", "tablaplasmaAnt.csv")
plasmaFlav <- preprocessTables("data/", "tablaplasmaFlav_adjusted.csv")
p <-ggplot(orinaFlav, aes(x=ES, y=Tiempo)) +
geom_boxplot()
p <-ggplot(orinaFlav$tablaFactors, aes(x=ES, y=Tiempo)) +
geom_boxplot()
p
p <-ggplot(orinaFlav$tablaFactors, aes(x=Tiempo, y=ES)) +
geom_boxplot()
p
orinaFlav <- removeOutliers(preprocessTables("data/", "tablaOrinaFlav.csv"))
p <-ggplot(orinaFlav$tablaFactors, aes(x=Tiempo, y=ES)) +
geom_boxplot()
p
orinaFlav <- removeOutliers(
preprocessTables("data/", "tablaOrinaFlav.csv")$tablaFactors)
p <-ggplot(orinaFlav$tablaFactors, aes(x=Tiempo, y=ES)) +
geom_boxplot()
p
orinaFlav <- removeOutliers(preprocessTables("data/", "tablaOrinaFlav.csv")$tablaFactors)
p <-ggplot(orinaFlav$tablaFactors, aes(x=Tiempo, y=ES)) +
geom_boxplot()
p
p <-ggplot(orinaFlav, aes(x=Tiempo, y=ES)) +
geom_boxplot()
p
p <-ggplot(orinaFlav, aes(x=ES, y=Tiempo, color=Endulzante)) +
geom_boxplot()
p
p <-ggplot(orinaFlav, aes(x=Tiempo, y=ES, color=Endulzante)) +
geom_boxplot()
p
boxplotBias <- function (tabla, x, y, color=FALSE){
if (color){
p <- ggplot(tabla, aes(x=x, y=y, color=color))+
geom_boxplot()
}
else{
p <- ggplot(tabla, aes(x=x, y=y))+
geom_boxplot()
}
}
boxplotBias <- function (tabla, x, y, color=FALSE){
if (color){
p <- ggplot(tabla, aes(x=x, y=y, color=color))+
geom_boxplot()
}
else{
p <- ggplot(tabla, aes(x=x, y=y))+
geom_boxplot()
}
p
}
boxplotBias(orinaFlav, x = "Tiempo", y = "ES")
p <-ggplot(orinaFlav, aes(x=Tiempo, y=ES)) +
geom_boxplot()
p
boxplotBias <- function (tabla, x, y, color=FALSE){
if (color){
p <- ggplot(tabla, aes(x=x, y=y, color=color))+
geom_boxplot()
}
else{
p <- ggplot(tabla, aes(x=as.name(x), y=as.name(y)))+
geom_boxplot()
}
p
}
boxplotBias(orinaFlav, x = "Tiempo", y = "ES")
as.name("Tiempo")
as.sym("Tiempo")
sym("Tiempo")
boxplotBias <- function (tabla, x, y, color=FALSE){
if (color){
p <- ggplot(tabla, aes(x=x, y=y, color=color))+
geom_boxplot()
}
else{
p <- ggplot(tabla, aes(x=sym(x), y=sym(y)))+
geom_boxplot()
}
p
}
boxplotBias(orinaFlav, x = "Tiempo", y = "ES")
boxplotBias <- function (tabla, x, y, color=FALSE){
if (color != FALSE){
p <- ggplot(tabla, aes(x=x, y=y, color=color))+
geom_boxplot()
}
else{
p <- ggplot(tabla, aes(x=sym(x), y=sym(y)))+
geom_boxplot()
}
p
}
boxplotBias <- function (tabla, x, y, color=FALSE){
if (color != FALSE){
p <- ggplot(tabla, aes(x=x, y=y, color=color))+
geom_boxplot()
}
else{
p <- ggplot(tabla, aes(x=tabla[,x], y=tabla[,y]))+
geom_boxplot()
}
p
}
boxplotBias(orinaFlav, x = "Tiempo", y = "ES")
boxplotBias <- function (tabla, x, y, color=FALSE){
if (color != FALSE){
p <- ggplot(tabla, aes(x=x, y=y, color=tabla[,color]))+
geom_boxplot()
}
else{
p <- ggplot(tabla, aes(x=tabla[,x], y=tabla[,y]))+
geom_boxplot()
}
p
}
boxplotBias(orinaFlav, x = "Tiempo", y = "ES", color = "Endulzante")
boxplotBias <- function (tabla, x, y, color=FALSE){
if (color != FALSE){
p <- ggplot(tabla, aes(x=x, y=y, color=color))+
geom_boxplot()
}
else{
p <- ggplot(tabla, aes(x=tabla[,x], y=tabla[,y]))+
geom_boxplot()
}
p
}
boxplotBias(orinaFlav, x = "Tiempo", y = "ES", color = "Endulzante")
boxplotBias <- function (tabla, x, y, color=FALSE){
if (color != FALSE){
p <- ggplot(tabla, aes(x=x, y=y, color=tabla[,color]))+
geom_boxplot()
}
else{
p <- ggplot(tabla, aes(x=tabla[,x], y=tabla[,y]))+
geom_boxplot()
}
p
}
boxplotBias(orinaFlav, x = "Tiempo", y = "ES", color = "Endulzante")
boxplotBias <- function (tabla, x, y, color=FALSE){
if (color != FALSE){
p <- ggplot(tabla, aes(x=tabla[,x], y=tabla[,y],
color=tabla[,color]))+
geom_boxplot()
}
else{
p <- ggplot(tabla, aes(x=tabla[,x], y=tabla[,y]))+
geom_boxplot()
}
p
}
boxplotBias(orinaFlav, x = "Tiempo", y = "ES", color = "Endulzante")
boxplotBias <- function (tabla, x, y, color=FALSE){
if (color != FALSE){
p <- ggplot(tabla, aes(x=tabla[,x], y=tabla[,y],
color=tabla[,color]))+
geom_boxplot()+
labs(x=x, y=y)
}
else{
p <- ggplot(tabla, aes(x=tabla[,x], y=tabla[,y]))+
geom_boxplot()+
labs(x=x, y=y)
}
p
}
boxplotBias(orinaFlav, x = "Tiempo", y = "ES", color = "Endulzante")
boxplotBias(orinaFlav, x = "Tiempo", y = "ES")
boxplotBias(orinaFlav, x = "Tiempo", y = "HE.G")
boxplotBias(orinaFlav, x = "Tiempo", y = "HE.G", color = "Endulzante")
boxplotBias(orinaFlav, x = "Tiempo", y = "NG")
boxplotBias(orinaFlav, x = "Tiempo", y = "HE.G", color = "Sexo")
boxplotBias(orinaFlav, x = "Tiempo", y = "NS", color = "Endulzante")
boxplotBias(orinaFlav, x = "Tiempo", y = "Peso")
boxplotBias(orinaFlav, x = "Tiempo", y = "Peso", color = "Endulzante")
boxplotBias(orinaFlav, x = "Tiempo", y = "HE.G", color = "Sexo")
boxplotBias(orinaFlav, x = "Tiempo", y = "Peso", color = "Sexo")
orinaFlav <- removeOutliers(preprocessTables("data/", "tablaOrinaFlav.csv")$tablaFactors)
orinaAnt <- removeOutliers(preprocessTables("data/", "tablaorinaAnt.csv")$tablaFactors)
plasmaAnt <- removeOutliers(preprocessTables("data/", "tablaplasmaAnt.csv")$tablaFactors)
plasmaFlav <- removeOutliers(preprocessTables("data/", "tablaplasmaFlav_adjusted.csv")$tablaFactors)
boxplotBias(plasmaAnt, x = "Tiempo", y = "Ácido.Caféico..CA.")
oFmelt <- reshape2::melt(orinaFlav, id = "Tiempo")
View(oFmelt)
oFmelt <- reshape2::melt(orinaFlav, id = c("Tiempo", "Sexo", "Endulzante"))
ggplot(longtableOF, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values),
fill=factor(Sexo))) +
geom_boxplot()+
ggtitle(paste("boxplot"), deparse(substitute(orinaFlav)))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
ggplot(oFmelt, aes(factor(variable, level = unique(longtableOF$variable)),as.numeric(values),
fill=factor(Sexo))) +
geom_boxplot()+
ggtitle(paste("boxplot"), deparse(substitute(orinaFlav)))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
ggplot(oFmelt, aes(factor(variable, level = unique(oFmelt$variable)),as.numeric(values),
fill=factor(Sexo))) +
geom_boxplot()+
ggtitle(paste("boxplot"), deparse(substitute(orinaFlav)))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
ggplot(oFmelt, aes(factor(variable, level = unique(oFmelt$variable)),as.numeric(value),
fill=factor(Sexo))) +
geom_boxplot()+
ggtitle(paste("boxplot"), deparse(substitute(orinaFlav)))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
oFmelt <- reshape2::melt(orinaFlav[,-"numVol"], id = c("Tiempo", "Sexo", "Endulzante"))
orinaFlav[,"numVol"]
orinaFlav[,-("numVol")]
oFmelt <- reshape2::melt(orinaFlav[,-16], id = c("Tiempo", "Sexo", "Endulzante"))
ggplot(oFmelt, aes(factor(variable, level = unique(oFmelt$variable)),as.numeric(value),
fill=factor(Sexo))) +
geom_boxplot()+
ggtitle(paste("boxplot"), deparse(substitute(orinaFlav)))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
oFmet <- orinaFlav %>% select (metabolic)
metabolic <- c("Peso", "IMC", "Grasa", "IRCV",
"Bpmin", "Bpmax", "Frec")
oFmet <- orinaFlav %>% select (metabolic)
metabolic <- c("Peso", "IMC", "Grasa", "IRCV",
"Bpmin", "Bpmax", "Frec")
oFmet <- orinaFlav %>% select (all_of(metabolic))
oFmelt <- reshape2::melt(oFmet, id = c("Tiempo", "Sexo", "Endulzante"))
oFmet <- orinaFlav %>% select (all_of(metabolic), Tiempo, Sexo, Endulzante)
oFmelt <- reshape2::melt(oFmet, id = c("Tiempo", "Sexo", "Endulzante"))
ggplot(oFmelt, aes(factor(variable, level = unique(oFmelt$variable)),as.numeric(value),
fill=factor(Sexo))) +
geom_boxplot()+
ggtitle(paste("boxplot"), deparse(substitute(orinaFlav)))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
oFant <- orinaFlav %>% select (-(metabolic), Tiempo, Sexo, Endulzante)
oFant
oFant <- orinaFlav %>% select (-(metabolic), Tiempo, Sexo, Endulzante, -numVol)
oFmetmelt <- melt(oFmet, id = c("Tiempo", "Sexo", "Endulzante"))
ggplot(oFmelt, aes(factor(variable, level = unique(oFmelt$variable)),as.numeric(value),
fill=factor(Sexo))) +
geom_boxplot()+
ggtitle(paste("boxplot"), deparse(substitute(orinaFlav)))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
oFmetmelt <- melt(oFant, id = c("Tiempo", "Sexo", "Endulzante"))
ggplot(oFmetmelt, aes(factor(variable, level = unique(oFmelt$variable)),as.numeric(value),
fill=factor(Sexo))) +
geom_boxplot()+
ggtitle(paste("boxplot"), deparse(substitute(orinaFlav)))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
oFmetmelt <- melt(oFant, id = c("Tiempo", "Sexo", "Endulzante"))
library(reshape2)
oFmetmelt <- melt(oFant, id = c("Tiempo", "Sexo", "Endulzante"))
ggplot(oFmetmelt, aes(factor(variable, level = unique(oFmelt$variable)),as.numeric(value),
fill=factor(Sexo))) +
geom_boxplot()+
ggtitle(paste("boxplot"), deparse(substitute(orinaFlav)))+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
tableAnth <- orinaFlav %>% select (all_of(anthro), Tiempo, Sexo, Endulzante)
anthro <- c("Peso", "IMC", "Grasa", "IRCV",
"Bpmin", "Bpmax", "Frec")
tabla <- orinaFlav
anthro <- c("Peso", "IMC", "Grasa", "IRCV",
"Bpmin", "Bpmax", "Frec")
tableAnth <- tabla %>% select (all_of(anthro), Tiempo, Sexo, Endulzante)
tableMet <- tabla %>% select (-anthro, -numVol, Tiempo, Sexo, Endulzante)
oFmetmelt <- melt(tableMet, id = c("Tiempo", "Sexo", "Endulzante"))
tableAnth <- tabla %>% select (all_of(anthro), Tiempo, Sexo, Endulzante)
tableMet <- tabla %>% select (-anthro, -numVol, Tiempo, Sexo, Endulzante)
tableMetMelt <- melt(tableMet, id = c("Tiempo", "Sexo", "Endulzante"))
tableAnthMelt <- melt(tableAnt, id = c("Tiempo", "Sexo", "Endulzante"))
tableAnthMelt <- melt(tableAnth, id = c("Tiempo", "Sexo", "Endulzante"))
tableAnthMelt
View(oFmetmelt)
bxp <- function(longTable, factore){
ggplot(lontable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("boxplot ", deparse(substitute(longtable))," ", factore))+
labs(y = "standarized value", x = "variables")+
facet_wrap(~Tiempo)
}
bxp(tableMetMelt, "Sexo")
bxp <- function(longTable, factore){
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("boxplot ", deparse(substitute(longtable))," ", factore))+
labs(y = "standarized value", x = "variables")+
facet_wrap(~Tiempo)
}
bxp(tableMetMelt, "Sexo")
bxp <- function(longTable, factore){
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("boxplot ", deparse(substitute(longtable))," ", factore))+
labs(y = "standarized value", x = "variables", legend = factore)+
facet_wrap(~Tiempo)
}
bxp(tableMetMelt, "Sexo")
bxp(tableMetMelt, "Endulzante")
bxp(tableAnthMelt, "Sexo")
bxp(tableAnthMelt, "Endulzante")
boxplotBias <- function(tabla){
# Selection of anthro featuers
anthro <- c("Peso", "IMC", "Grasa", "IRCV",
"Bpmin", "Bpmax", "Frec")
tableAnth <- tabla %>% select (all_of(anthro), Tiempo, Sexo, Endulzante)
tableMet <- tabla %>% select (-anthro, -numVol, Tiempo, Sexo, Endulzante)
# long table format
tableMetMelt <- melt(tableMet, id = c("Tiempo", "Sexo", "Endulzante"))
tableAnthMelt <- melt(tableAnth, id = c("Tiempo", "Sexo", "Endulzante"))
# plot anthro-sex
bxp <- function(longTable, factore){
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("boxplot ", deparse(substitute(longtable))," ", factore))+
labs(y = "standarized value", x = "variables", legend = factore)+
facet_wrap(~Tiempo)
}
print(bxp(tableMetMelt, "Sexo"))
print(bxp(tableMetMelt, "Endulzante"))
print(bxp(tableAnthMelt, "Sexo"))
bxp(tableAnthMelt, "Endulzante")
}
boxplotBias(orinaFlav)
source("../scripts/preprocess.R")
source("../scripts/boxplots.R")
source("../scripts/preprocess.R")
source("../scripts/boxplots.R")
orinaFlav <- removeOutliers(preprocessTables("../data/", "tablaOrinaFlav.csv")$tablaFactors)
orinaAnt <- removeOutliers(preprocessTables("../data/", "tablaorinaAnt.csv")$tablaFactors)
plasmaAnt <- removeOutliers(preprocessTables("../data/", "tablaplasmaAnt.csv")$tablaFactors)
plasmaFlav <- removeOutliers(preprocessTables("../data/", "tablaplasmaFlav_adjusted.csv")$tablaFactors)
source("../scripts/preprocess.R")
source("../scripts/boxplots.R")
source("../scripts/boxplots.R")
source("../scripts/preprocess.R")
source("../scripts/boxplots.R")
source("../scripts/preprocess.R")
source("../scripts/boxplots.R")
source("../scripts/boxplots.R")
gc()

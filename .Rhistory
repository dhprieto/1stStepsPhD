tabla$Frec[i] = tabla$Frec.final[i]
}
}
# Removing of trivial redundant and useless features
set.A <- subset(tabla, select =-c(X.1, X, Peso.inicial, Peso.final, Delta.Peso, Talla, IMC.Inicial, IMC.Final,
Delta.IMC, Grasa.inicial, Grasa.final, Delta.Grasa, IRCV.Final, IRCV.inicial,
Bpmin.final, Bpmin.inicial, Bpmax.final, Bpmax.inicial, Frec.final, Frec.inicial))
# Only numerical features
set.A_num <- subset(set.A, select=-c(Endulzante, Sexo, Tiempo, numVol))
#Rescaling, can use "set.A_rescaled <- scale(set.A_num)" too
set.A_rescaled <- set.A_num %>% mutate_each_(list(~rescale(.) %>% as.vector),
vars = colnames(set.A_num))
set.A_factors <- cbind(set.A_rescaled, Endulzante = set.A$Endulzante,
Tiempo = set.A$Tiempo, Sexo = set.A$Sexo, numVol = set.A$numVol)
tabla_Tiempo <- subset(set.A_factors, select=-c(Endulzante, Sexo))
tabla_Tiempo0 <- subset(tabla_Tiempo, Tiempo == "0", select = -Tiempo)
tabla_TiempoF <- subset(tabla_Tiempo, Tiempo == "Final", select = -Tiempo)
tabla_Sexo <- subset(set.A_factors, select=-c(Endulzante, Tiempo))
tabla_SexoM <- subset(tabla_Sexo, Sexo == "HOMBRE", select = -Sexo)
tabla_SexoF <- subset(tabla_Sexo, Sexo == "MUJER", select = -Sexo)
tabla_Endulzante <- subset(set.A_factors, select=-c(Sexo, Tiempo))
tabla_EndulzanteSA <- subset(tabla_Endulzante, Endulzante == "SA", select = -Endulzante)
tabla_EndulzanteSU <- subset(tabla_Endulzante, Endulzante == "SU", select = -Endulzante)
tabla_EndulzanteST <- subset(tabla_Endulzante, Endulzante == "ST", select = -Endulzante)
tabla_0xM <- subset(set.A_factors, Tiempo == "0" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante))
tabla_0xF <- subset(set.A_factors, Tiempo == "0" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante))
tabla_FxM <- subset(set.A_factors, Tiempo == "Final" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante))
tabla_FxF <- subset(set.A_factors, Tiempo == "Final" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSAx0 <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSAxF <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSAx0 <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSAxF <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSTx0 <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSTxF <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="ST"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSTx0 <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSTxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSUx0 <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSUxF <- subset(set.A_factors, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSUx0 <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSUxF <- subset(set.A_factors, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
return(list(tablaFactors = set.A_factors, tablaNum = set.A_rescaled,
tabla_Tiempo = tabla_Tiempo, tabla_Tiempo0 = tabla_Tiempo0,
tabla_TiempoF = tabla_TiempoF,  tabla_Sexo=tabla_Sexo,
tabla_SexoM=tabla_SexoM, tabla_SexoF=tabla_SexoF,
tabla_Endulzante=tabla_Endulzante,
tabla_EndulzanteSA=tabla_EndulzanteSA,
tabla_EndulzanteSU=tabla_EndulzanteSU,
tabla_EndulzanteST=tabla_EndulzanteST,
tabla_0xM=tabla_0xM,tabla_0xF=tabla_0xF,
tabla_FxM=tabla_FxM, tabla_FxF=tabla_FxF,
tabla_MxSAx0=tabla_MxSAx0, tabla_MxSAxF=tabla_MxSAxF,
tabla_FxSAx0=tabla_FxSAx0, tabla_FxSAxF=tabla_FxSAxF,
tabla_MxSTx0=tabla_MxSTx0, tabla_MxSTxF=tabla_MxSTxF,
tabla_FxSTx0=tabla_FxSTx0, tabla_FxSTxF=tabla_FxSTxF,
tabla_MxSUx0=tabla_MxSUx0, tabla_MxSUxF=tabla_MxSUxF,
tabla_FxSUx0=tabla_FxSUx0, tabla_FxSUxF=tabla_FxSUxF))
}
checkCluster <- function(tabla){
nombreTabla <- deparse(quote(tabla))
set.A_rescaled <- tabla
# Validación de método de clustering
## Manual
datos_simulados <- map_df(set.A_rescaled,
.f = function(x){runif(n = length(x),
min = min(x),
max = max(x))
}
)
pca_datos_A      <- prcomp(set.A_rescaled)
pca_datos_simulados <- prcomp(datos_simulados)
p1 <- fviz_pca_ind(X = pca_datos_A,
geom = "point", title = paste("PCA - Datos ", nombreTabla),
pallete = "jco") +
theme_bw() + theme(legend.position = "bottom")
p2 <- fviz_pca_ind(X = pca_datos_simulados, geom = "point",
title = paste("PCA - datos simulados ",nombreTabla), pallete = "jco") +
theme_bw() + theme(legend.position = "bottom")
print(ggarrange(p1, p2), common.legend = TRUE)
dist_datos_A      <- get_dist(set.A_rescaled, method = "manhattan")
dist_datos_simulados <- get_dist(datos_simulados, method = "manhattan")
p7 <- fviz_dist(dist.obj = dist_datos_A, show_labels = FALSE) +
labs(title = paste("Datos ", nombreTabla)) + theme(legend.position = "bottom")
p8 <- fviz_dist(dist.obj = dist_datos_simulados, show_labels = FALSE) +
labs(title = paste("Datos simulados ", nombreTabla)) + theme(legend.position = "bottom")
print(ggarrange(p7, p8))
print(fviz_nbclust(set.A_rescaled, kmeans, method="wss"))
print(fviz_nbclust(x = set.A_rescaled, FUNcluster = pam, method = "wss", k.max = 15,
diss = get_dist(set.A_rescaled, method = "manhattan")))
}
pcaVarios<- function(tabla, nombreTabla){
#nombreTabla <- deparse(quote(tabla))
tabla_Tiempo <- subset(tabla, select=-c(Endulzante, Sexo, numVol))
tabla_Tiempo0 <- subset(tabla_Tiempo, Tiempo == "0", select = -Tiempo)
tabla_TiempoF <- subset(tabla_Tiempo, Tiempo == "Final", select = -Tiempo)
tabla_Sexo <- subset(tabla, select=-c(Endulzante, Tiempo, numVol))
tabla_SexoM <- subset(tabla_Sexo, Sexo == "HOMBRE", select = -Sexo)
tabla_SexoF <- subset(tabla_Sexo, Sexo == "MUJER", select = -Sexo)
tabla_Endulzante <- subset(tabla, select=-c(Sexo, Tiempo, numVol))
tabla_EndulzanteSA <- subset(tabla_Endulzante, Endulzante == "SA", select = -Endulzante)
tabla_EndulzanteSU <- subset(tabla_Endulzante, Endulzante == "SU", select = -Endulzante)
tabla_EndulzanteST <- subset(tabla_Endulzante, Endulzante == "ST", select = -Endulzante)
# PCA Tiempo
pca_datos_A <- PCA(tabla_Tiempo0, scale.unit = F)
print(fviz_contrib(pca_datos_A, choice="var", title = paste("Importancia variables dim 1 PCA Tiempo 0 ",
nombreTabla)))
print(fviz_contrib(pca_datos_A, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Tiempo 0 ",
nombreTabla)))
pca_datos_B <- PCA(tabla_TiempoF)
print(fviz_contrib(pca_datos_B, choice="var", axes=1, title = paste("Importancia variables dim 1 PCA Tiempo Final "
,nombreTabla)))
print(fviz_contrib(pca_datos_B, choice="var", axes=2, title = paste("Importancia variables dim 2 PCA Tiempo Final "
,nombreTabla)))
# PCA Sexo
pca_datos_C <- PCA(tabla_SexoM,scale.unit = F)
print(fviz_contrib(pca_datos_C, choice="var", title = paste("Importancia variables dim 1 PCA Sexo M ",
nombreTabla)))
print(fviz_contrib(pca_datos_C, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Sexo M ",
nombreTabla)))
pca_datos_D <- PCA(tabla_SexoF,scale.unit = F)
print(fviz_contrib(pca_datos_D, choice="var", title = paste("Importancia variables dim 1 PCA Sexo F ",
nombreTabla)))
print(fviz_contrib(pca_datos_D, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Sexo F",
nombreTabla)))
# PCA Endulzantes
pca_datos_E      <- PCA(tabla_EndulzanteSA, scale.unit = F)
print(fviz_contrib(pca_datos_E, choice="var", title = paste("Importancia variables dim 1 PCA Endulzante SA ",
nombreTabla)))
print(fviz_contrib(pca_datos_E, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Endulzante SA ",
nombreTabla)))
pca_datos_F      <- PCA(tabla_EndulzanteSU, scale.unit = F)
print(fviz_contrib(pca_datos_F, choice="var", title = paste("Importancia variables dim 1 PCA Endulzante SU ",
nombreTabla)))
print(fviz_contrib(pca_datos_F, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Endulzante SU ",
nombreTabla)))
pca_datos_G      <- PCA(tabla_EndulzanteST, scale.unit = F)
print(fviz_contrib(pca_datos_G, choice="var", title = paste("Importancia variables dim 1 PCA Endulzante ST ",
nombreTabla)))
print(fviz_contrib(pca_datos_G, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Endulzante ST ",
nombreTabla)))
# PCA TiempoxSexo
tabla_0xM <- subset(tabla, Tiempo == "0" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_0xF <- subset(tabla, Tiempo == "0" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxM <- subset(tabla, Tiempo == "Final" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxF <- subset(tabla, Tiempo == "Final" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante, numVol))
pca_0xM <- PCA(tabla_0xM, scale.unit=F)
print(fviz_contrib(pca_0xM, choice="var", title = paste("ContribVar dim1 Tiempo 0 Sexo M", nombreTabla)))
print(fviz_contrib(pca_0xM, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo 0 Sexo M",
nombreTabla)))
pca_0xF <- PCA(tabla_0xF, scale.unit=F)
print(fviz_contrib(pca_0xF, choice="var", title = paste("ContribVar dim1 Tiempo 0 Sexo F", nombreTabla)))
print(fviz_contrib(pca_0xF, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo 0 Sexo F",
nombreTabla)))
pca_FxM <- PCA(tabla_FxM, scale.unit=F)
print(fviz_contrib(pca_FxM, choice="var", title = paste("ContribVar dim1 Tiempo F Sexo M", nombreTabla)))
print(fviz_contrib(pca_FxM, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo F Sexo M",
nombreTabla)))
pca_FxF <- PCA(tabla_FxF, scale.unit=F)
print(fviz_contrib(pca_FxF, choice="var", title = paste("ContribVar dim1 Tiempo F Sexo F", nombreTabla)))
print(fviz_contrib(pca_FxF, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo F Sexo F",
nombreTabla)))
print(fviz_contrib(pca_0xM, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo 0 Sexo M",
nombreTabla)))
# PCA TiempoxEndulzante
# PCA SexoxEndulzante
tabla_MxSAx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSAxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSAx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSAxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSTx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSTxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="ST"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSTx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSTxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSUx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_MxSUxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSUx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante, numVol))
tabla_FxSUxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante, numVol))
pca_MxSAx0 <- PCA(tabla_MxSAx0, scale.unit=F)
print(fviz_contrib(pca_MxSAx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SA Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSAx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SA Tiempo 0",
nombreTabla)))
pca_MxSAxF <- PCA(tabla_MxSAxF, scale.unit=F)
print(fviz_contrib(pca_MxSAxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SA Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSAxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SA Tiempo F",
nombreTabla)))
pca_FxSAx0 <- PCA(tabla_FxSAx0, scale.unit=F)
print(fviz_contrib(pca_FxSAx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SA Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_FxSAx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SA Tiempo 0",
nombreTabla)))
pca_FxSAxF <- PCA(tabla_FxSAxF, scale.unit=F)
print(fviz_contrib(pca_FxSAxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SA Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_FxSAxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SA Tiempo F",
nombreTabla)))
pca_MxSTx0 <- PCA(tabla_MxSTx0, scale.unit=F)
print(fviz_contrib(pca_MxSTx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante ST Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSTx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante ST Tiempo 0",
nombreTabla)))
pca_MxSTxF <- PCA(tabla_MxSTxF, scale.unit=F)
print(fviz_contrib(pca_MxSTxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante ST Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSTxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante ST Tiempo F",
nombreTabla)))
pca_FxSTx0 <- PCA(tabla_FxSTx0, scale.unit=F)
print(fviz_contrib(pca_FxSTx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante ST Tiempo 0", nombreTabla)))
print(fviz_contrib(pca_FxSTx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante ST Tiempo 0",
nombreTabla)))
pca_FxSTxF <- PCA(tabla_FxSTxF, scale.unit=F)
print(fviz_contrib(pca_FxSTxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante ST Tiempo F", nombreTabla)))
print(fviz_contrib(pca_FxSTxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante ST Tiempo F",
nombreTabla)))
pca_MxSUx0 <- PCA(tabla_MxSUx0, scale.unit=F)
print(fviz_contrib(pca_MxSUx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SU Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSUx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SU Tiempo 0",
nombreTabla)))
pca_MxSUxF <- PCA(tabla_MxSUxF, scale.unit=F)
print(fviz_contrib(pca_MxSUxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SU Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSUxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SU Tiempo F",
nombreTabla)))
pca_FxSUx0 <- PCA(tabla_FxSUx0, scale.unit=F)
print(fviz_contrib(pca_FxSUx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SU Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_FxSUx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SU Tiempo 0",
nombreTabla)))
pca_FxSUxF <- PCA(tabla_FxSUxF, scale.unit=F)
print(fviz_contrib(pca_FxSUxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SU Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_FxSUxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SU Tiempo F",
nombreTabla)))
}
clusterVarios <- function (tabla, nclust) {
nombreTabla <- deparse(quote(tabla))
### Aplicamos clustering
# K-means clustering
set.seed(123)
km_datos_A <- kmeans(x = tabla, centers = nclust)
p1 <- fviz_cluster(object = km_datos_A, data = tabla,
ellipse.type = "norm", geom = "point", main = paste("Resultados clustering kmeans ",
nombreTabla),
stand = FALSE, palette = "jco", show.legend = T)
# PAM clustering
pam_clusters <- pam(x = tabla, k = nclust, metric = "manhattan")
p2 <- fviz_cluster(object = pam_clusters, data = tabla, ellipse.type = "t",
repel = TRUE) +
theme_bw() +
labs(title = "Resultados clustering PAM") +
theme(legend.position = "none")
# fuzzy clustering
fuzzy_cluster <- fanny(x = tabla, k = nclust, diss = FALSE, metric = "manhattan", stand = FALSE)
p3 <- fviz_cluster(object = fuzzy_cluster, repel = TRUE, ellipse.type = "norm",
pallete = "jco") + theme_bw() + labs(title = "Fuzzy Cluster plot")
# Hierarchical clustering
p4 <- fviz_dend(x = hclust(get_dist(tabla, method = "manhattan")), k = nclust, k_colors = "jco",
show_labels = T, main = paste("Datos ", nombreTabla))
model_clustering <- Mclust(tabla)
p5 <- fviz_mclust(object = model_clustering, what = "BIC", pallete = "jco") +
scale_x_discrete(limits = c(1:10))
p6 <- fviz_mclust(model_clustering, what = "classification", geom = "point",
pallete = "jco")
print(p1)
print(p2)
print(p3)
print(p4)
print(p5)
print(p6)
return(model_clustering)
}
set.seed(123)
orinaFlav <- preprocessTablas("data/", "tablaOrinaFlav.csv")
orinaFlavFactors <- orinaFlav$tablaFactors
orinaFlavNum <- orinaFlav$tablaNum
orinaFlavT_0 <- orinaFlav$tabla_Tiempo0
orinaFlavT_F <- orinaFlav$tabla_TiempoF
pcaVarios(orinaFlavFactors, "orina flavonoides")
checkCluster(orinaFlavT_0[, colnames(orinaFlavT_0) != "numVol"])
checkCluster(orinaFlavT_F[, colnames(orinaFlavT_) != "numVol"])
clusterVarios()
model_clustering_OF <- Mclust(orinaFlav$tablaNum)
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
orinaFlav_clusters <- cbind(orinaFlav$tablaNum, clusters = as.factor(model_clustering_OF$classification),
Endulzante = orinaFlavFactors$Endulzante,
Sexo = orinaFlavFactors$Sexo,
Tiempo = orinaFlavFactors$Tiempo)
tableSexoOF <- table(orinaFlav_clusters$Sexo,orinaFlav_clusters$clusters)
tableEdulcoranteOF <- table(orinaFlav_clusters$Endulzante,orinaFlav_clusters$clusters)
orinaFlav_clusters$Endulzante <- rescale(as.numeric(orinaFlav_clusters$Endulzante))
orinaFlav_clusters$Sexo <- rescale(as.numeric(orinaFlav_clusters$Sexo))
orinaFlav_clusters$Tiempo <- rescale(as.numeric(orinaFlav_clusters$Tiempo))
longtableOF <- melt(orinaFlav_clusters, id = c("clusters", "Tiempo"))
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
facet_wrap(~Tiempo)
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
facet_wrap(~Tiempo)+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOF, theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids")+
labs(y = "standarized value", x = "variables/clusters")
orinaAnt <- preprocessTablas("data/", "tablaOrinaAnt.csv")
orinaAntFactors <- orinaAnt$tablaFactors
orinaAntNum <- orinaAnt$tablaNum
orinaAntT_0 <- orinaAnt$tabla_Tiempo0
orinaAntT_F <- orinaAnt$tabla_TiempoF
pcaVarios(orinaAntFactors, "orina antocianos")
checkCluster(orinaAntT_0[, colnames(orinaAntT_0) != "numVol"])
checkCluster(orinaAntT_F[, colnames(orinaAntT_F) != "numVol"])
clusterVarios()
model_clustering_OA <- Mclust(orinaant$tablaNum)
p1 <- fviz_mclust(object = model_clustering_O, what = "BIC", pallete = "jco",
title = "Model Selection Orina ant") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OA, what = "classification", geom = "point",
title = "Clusters Plot Orina ant", pallete = "jco")
ggarrange(p1,p2)
orinaant_clusters <- cbind(orinaant$tablaNum, clusters = as.factor(model_clustering_OA$classification),
Endulzante = orinaantFactors$Endulzante,
Sexo = orinaantFactors$Sexo,
Tiempo = orinaantFactors$Tiempo)
tableSexoOA <- table(orinaant_clusters$Sexo,orinaant_clusters$clusters)
tableEdulcoranteOA <- table(orinaant_clusters$Endulzante,orinaant_clusters$clusters)
orinaant_clusters$Endulzante <- rescale(as.numeric(orinaant_clusters$Endulzante))
orinaant_clusters$Sexo <- rescale(as.numeric(orinaant_clusters$Sexo))
orinaant_clusters$Tiempo <- rescale(as.numeric(orinaant_clusters$Tiempo))
longtableOA <- melt(orinaant_clusters, id = c("clusters", "Tiempo"))
ggplot(longtableOA, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
facet_wrap(~Tiempo)+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOA, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOA, theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina antonoids")+
labs(y = "standarized value", x = "variables/clusters")
model_clustering_OA <- Mclust(orinaAnt$tablaNum)
p1 <- fviz_mclust(object = model_clustering_O, what = "BIC", pallete = "jco",
title = "Model Selection Orina ant") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OA, what = "classification", geom = "point",
title = "Clusters Plot Orina ant", pallete = "jco")
p1 <- fviz_mclust(object = model_clustering_OA, what = "BIC", pallete = "jco",
title = "Model Selection Orina ant") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OA, what = "classification", geom = "point",
title = "Clusters Plot Orina ant", pallete = "jco")
ggarrange(p1,p2)
orinaant_clusters <- cbind(orinaAnt$tablaNum, clusters = as.factor(model_clustering_OA$classification),
Endulzante = orinaAntFactors$Endulzante,
Sexo = orinaAntFactors$Sexo,
Tiempo = orinaAntFactors$Tiempo)
tableSexoOA <- table(orinaAnt_clusters$Sexo,orinaAnt_clusters$clusters)
orinaAnt_clusters <- cbind(orinaAnt$tablaNum, clusters = as.factor(model_clustering_OA$classification),
Endulzante = orinaAntFactors$Endulzante,
Sexo = orinaAntFactors$Sexo,
Tiempo = orinaAntFactors$Tiempo)
tableSexoOA <- table(orinaAnt_clusters$Sexo,orinaAnt_clusters$clusters)
tableEdulcoranteOA <- table(orinaAnt_clusters$Endulzante,orinaAnt_clusters$clusters)
orinaAnt_clusters$Endulzante <- rescale(as.numeric(orinaAnt_clusters$Endulzante))
orinaAnt_clusters$Sexo <- rescale(as.numeric(orinaAnt_clusters$Sexo))
orinaAnt_clusters$Tiempo <- rescale(as.numeric(orinaAnt_clusters$Tiempo))
longtableOA <- melt(orinaant_clusters, id = c("clusters", "Tiempo"))
longtableOA <- melt(orinaAnt_clusters, id = c("clusters", "Tiempo"))
ggplot(longtableOA, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
facet_wrap(~Tiempo)+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOA, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOA, theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina antonoids")+
labs(y = "standarized value", x = "variables/clusters")
plasmaAnt <- preprocessTablas("data/", "tablaplasmaAnt.csv")
plasmaAntFactors <- plasmaAnt$tablaFactors
plasmaAntNum <- plasmaAnt$tablaNum
plasmaAntT_0 <- plasmaAnt$tabla_Tiempo0
plasmaAntT_F <- plasmaAnt$tabla_TiempoF
pcaVarios(plasmaAntFactors, "Plasma Antocianos")
model_clustering_PA <- Mclust(plasmaAnt$tablaNum)
p1 <- fviz_mclust(object = model_clustering_PA, what = "BIC", pallete = "jco",
title = "Model Selection plasma ant") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_PA, what = "classification", geom = "point",
title = "Clusters Plot plasma ant", pallete = "jco")
ggarrange(p1,p2)
plasmaAnt_clusters <- cbind(plasmaAnt$tablaNum, clusters = as.factor(model_clustering_PA$classification),
Endulzante = plasmaAntFactors$Endulzante,
Sexo = plasmaAntFactors$Sexo,
Tiempo = plasmaAntFactors$Tiempo)
tableSexoPA <- table(plasmaAnt_clusters$Sexo,plasmaAnt_clusters$clusters)
tableEdulcorantePA <- table(plasmaAnt_clusters$Endulzante,plasmaAnt_clusters$clusters)
plasmaAnt_clusters$Endulzante <- rescale(as.numeric(plasmaAnt_clusters$Endulzante))
plasmaAnt_clusters$Sexo <- rescale(as.numeric(plasmaAnt_clusters$Sexo))
plasmaAnt_clusters$Tiempo <- rescale(as.numeric(plasmaAnt_clusters$Tiempo))
longtablePA <- melt(plasmaAnt_clusters, id = c("clusters", "Tiempo"))
ggplot(longtablePA, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
facet_wrap(~Tiempo)+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoPA, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorantePA, theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis plasma antonoids")+
labs(y = "standarized value", x = "variables/clusters")
plasmaFlav <- preprocessTablas("data/", "tablaplasmaFlav.csv")
plasmaFlavFactors <- plasmaFlav$tablaFactors
plasmaFlavNum <- plasmaFlav$tablaNum
plasmaFlavT_0 <- plasmaFlav$tabla_Tiempo0
plasmaFlavT_F <- plasmaFlav$tabla_TiempoF
pcaVarios(plasmaFlavFactors, "Plasma Antocianos")
checkCluster(plasmaFlavT_0[, colnames(plasmaFlavT_0) != "numVol"])
checkCluster(plasmaFlavT_F[, colnames(plasmaFlavT_F) != "numVol"])
model_clustering_PF <- Mclust(plasmaFlav$tablaNum)
p1 <- fviz_mclust(object = model_clustering_PF, what = "BIC", pallete = "jco",
title = "Model Selection Orina ant") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_PF, what = "classification", geom = "point",
title = "Clusters Plot Orina ant", pallete = "jco")
ggarrange(p1,p2)
plasmaFlav_clusters <- cbind(plasmaFlav$tablaNum, clusters = as.factor(model_clustering_PF$classification),
Endulzante = plasmaFlavFactors$Endulzante,
Sexo = plasmaFlavFactors$Sexo,
Tiempo = plasmaFlavFactors$Tiempo)
tableSexoPF <- table(plasmaFlav_clusters$Sexo,plasmaFlav_clusters$clusters)
tableEdulcorantePF <- table(plasmaFlav_clusters$Endulzante,plasmaFlav_clusters$clusters)
plasmaFlav_clusters$Endulzante <- rescale(as.numeric(plasmaFlav_clusters$Endulzante))
plasmaFlav_clusters$Sexo <- rescale(as.numeric(plasmaFlav_clusters$Sexo))
plasmaFlav_clusters$Tiempo <- rescale(as.numeric(plasmaFlav_clusters$Tiempo))
longtablePF <- melt(plasmaFlav_clusters, id = c("clusters", "Tiempo"))
ggplot(longtablePF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
facet_wrap(~Tiempo)+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoPF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorantePF, theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina antonoids")+
labs(y = "standarized value", x = "variables/clusters")
plasmaFlav <- preprocessTablas("data/", "tablaplasmaFlav_adjusted.csv")
plasmaFlav <- preprocessTablas("data/", "tablaplasmaFlav_adjusted.csv")
plasmaFlav_adjusted <- preprocessTablas("data/", "tablaplasmaFlav_adjusted.csv")
plasmaFlav_adjustedFactors <- plasmaFlav_adjusted$tablaFactors
plasmaFlav_adjustedNum <- plasmaFlav_adjusted$tablaNum
plasmaFlav_adjustedT_0 <- plasmaFlav_adjusted$tabla_Tiempo0
plasmaFlav_adjustedT_F <- plasmaFlav_adjusted$tabla_TiempoF
pcaVarios(plasmaFlav_adjustedFactors, "Plasma Antocianos")
model_clustering_PF <- Mclust(plasmaFlav_adjusted$tablaNum)
p1 <- fviz_mclust(object = model_clustering_PF, what = "BIC", pallete = "jco",
title = "Model Selection Orina ant") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_PF, what = "classification", geom = "point",
title = "Clusters Plot Orina ant", pallete = "jco")
ggarrange(p1,p2)
plasmaFlav_adjusted_clusters <- cbind(plasmaFlav_adjusted$tablaNum, clusters = as.factor(model_clustering_PF$classification),
Endulzante = plasmaFlav_adjustedFactors$Endulzante,
Sexo = plasmaFlav_adjustedFactors$Sexo,
Tiempo = plasmaFlav_adjustedFactors$Tiempo)
tableSexoPF <- table(plasmaFlav_adjusted_clusters$Sexo,plasmaFlav_adjusted_clusters$clusters)
tableEdulcorantePF <- table(plasmaFlav_adjusted_clusters$Endulzante,plasmaFlav_adjusted_clusters$clusters)
plasmaFlav_adjusted_clusters$Endulzante <- rescale(as.numeric(plasmaFlav_adjusted_clusters$Endulzante))
plasmaFlav_adjusted_clusters$Sexo <- rescale(as.numeric(plasmaFlav_adjusted_clusters$Sexo))
plasmaFlav_adjusted_clusters$Tiempo <- rescale(as.numeric(plasmaFlav_adjusted_clusters$Tiempo))
longtablePF <- melt(plasmaFlav_adjusted_clusters, id = c("clusters", "Tiempo"))
ggplot(longtablePF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
facet_wrap(~Tiempo)+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoPF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcorantePF, theme = ttheme_default(base_size = 8)), xmin= 13,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina antonoids")+
labs(y = "standarized value", x = "variables/clusters")

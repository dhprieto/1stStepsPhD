labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
tabla_merge %>% select(-c(Endulzante, Sexo, Tiempo, numVol))
tabla_merge %>% select(-c(numVol, Endulzante, Sexo, Tiempo))
ungroup(tabla_merge) %>% select(-c(numVol, Endulzante, Sexo, Tiempo))
model_clustering_OF <- Mclust(ungroup(tabla_merge) %>% select(-c(numVol, Endulzante, Sexo, Tiempo)))
model_clustering_OF <- Mclust(ungroup(tabla_merge) %>% select(-c(numVol, Endulzante, Sexo, Tiempo, id)))
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_merge_clusters <- cbind(tabla_merge %>% select(-numVol, id), clusters = as.factor(model_clustering_OF$classification))
tabla_merge_clusters <- cbind(ungroup(tabla_merge) %>% select(-numVol, id), clusters = as.factor(model_clustering_OF$classification))
tableSexoOF <- table(tabla_merge_clusters$Sexo,tabla_merge_clusters$clusters)
tableEdulcoranteOF <- table(tabla_merge_clusters$Endulzante,tabla_merge_clusters$clusters)
tabla_merge_clusters$Endulzante <- rescale(as.numeric(tabla_merge_clusters$Endulzante))
tabla_merge_clusters$Sexo <- rescale(as.numeric(tabla_merge_clusters$Sexo))
tabla_merge_clusters$Tiempo <- rescale(as.numeric(tabla_merge_clusters$Tiempo))
longtableOF <- melt(tabla_merge_clusters, id = c("clusters", "Tiempo"))
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOF, theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids")+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
ungroup(tabla_merge) %>% select(-numVol, id)
tabla_merge_clusters <- cbind(ungroup(tabla_merge) %>% select(c(-numVol, id)), clusters = as.factor(model_clustering_OF$classification))
tableSexoOF <- table(tabla_merge_clusters$Sexo,tabla_merge_clusters$clusters)
tableEdulcoranteOF <- table(tabla_merge_clusters$Endulzante,tabla_merge_clusters$clusters)
tabla_merge_clusters$Endulzante <- rescale(as.numeric(tabla_merge_clusters$Endulzante))
tabla_merge_clusters$Sexo <- rescale(as.numeric(tabla_merge_clusters$Sexo))
tabla_merge_clusters$Tiempo <- rescale(as.numeric(tabla_merge_clusters$Tiempo))
longtableOF <- melt(tabla_merge_clusters, id = c("clusters", "Tiempo"))
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOF, theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids")+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
tabla_merge_clusters <- cbind(ungroup(tabla_merge) %>% select(-c(numVol, id)), clusters = as.factor(model_clustering_OF$classification))
ungroup(tabla_merge) %>% select(-c(numVol, id)
)
tabla_merge_clusters <- cbind(ungroup(tabla_merge) %>% select(-c(numVol, id)), clusters = as.factor(model_clustering_OF$classification))
tableSexoOF <- table(tabla_merge_clusters$Sexo,tabla_merge_clusters$clusters)
tableEdulcoranteOF <- table(tabla_merge_clusters$Endulzante,tabla_merge_clusters$clusters)
tabla_merge_clusters$Endulzante <- rescale(as.numeric(tabla_merge_clusters$Endulzante))
tabla_merge_clusters$Sexo <- rescale(as.numeric(tabla_merge_clusters$Sexo))
tabla_merge_clusters$Tiempo <- rescale(as.numeric(tabla_merge_clusters$Tiempo))
longtableOF <- melt(tabla_merge_clusters, id = c("clusters", "Tiempo"))
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOF, theme = ttheme_default(base_size = 8)), xmin= 14,xmax=17, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids")+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 22,xmax=24, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOF, theme = ttheme_default(base_size = 8)), xmin= 22,xmax=24, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids")+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
model_clustering_OF <- Mclust(ungroup(tabla_merge) %>% select(-c(numVol, Endulzante, Sexo, Tiempo, id, Peso, IMC,
Grasa, IRCV, Bpmin, Bpmax, Frec)))
p1 <- fviz_mclust(object = model_clustering_OF, what = "BIC", pallete = "jco",
title = "Model Selection Orina Flav") + scale_x_discrete(limits = c(1:10))
p2 <- fviz_mclust(model_clustering_OF, what = "classification", geom = "point",
title = "Clusters Plot Orina Flav", pallete = "jco")
ggarrange(p1,p2)
tabla_merge_clusters <- cbind(ungroup(tabla_merge) %>% select(-c(numVol, id)), clusters = as.factor(model_clustering_OF$classification))
tableSexoOF <- table(tabla_merge_clusters$Sexo,tabla_merge_clusters$clusters)
tableEdulcoranteOF <- table(tabla_merge_clusters$Endulzante,tabla_merge_clusters$clusters)
tabla_merge_clusters$Endulzante <- rescale(as.numeric(tabla_merge_clusters$Endulzante))
tabla_merge_clusters$Sexo <- rescale(as.numeric(tabla_merge_clusters$Sexo))
tabla_merge_clusters$Tiempo <- rescale(as.numeric(tabla_merge_clusters$Tiempo))
longtableOF <- melt(tabla_merge_clusters, id = c("clusters", "Tiempo"))
ggplot(longtableOF, aes(variable,as.numeric(value), fill=factor(clusters))) +
geom_boxplot()+
annotate("text", x = 14, y = 1.03, label = "Mujer") +
annotate("text",x = 14, y = -0.03, label = "Hombre") +
annotate("text", x = 13, y = 1.03, label = "SU") +
annotate("text",x = 13, y = -0.03, label = "SA")+
annotation_custom(grob = tableGrob(tableSexoOF, rows = c("H", "M"), theme = ttheme_default(base_size = 8)), xmin= 22,xmax=24, ymin=0.75, ymax=1)+
annotation_custom(grob = tableGrob(tableEdulcoranteOF, theme = ttheme_default(base_size = 8)), xmin= 22,xmax=24, ymin=0, ymax=0.25)+
ggtitle("Boxplot Cluster Analysis Orina Flavonoids")+
labs(y = "standarized value", x = "variables/clusters")+
facet_wrap(~Tiempo)
counts <- data.frame(table(tabla_merge$numVol))
View(counts)
tabla_merge$numVol
tabla_mergeDupl <- tabla_merge[tabla_merge$numVol %in% counts$Var1[counts$Freq > 1],]
tabla_mergeDupl
anova_pareado_EG <- aov(formula = EG ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
summary(anova_pareado_EG)
colnames(tabla_mergeDupl)
for(i in colnames(tabla_mergeDupl)) {
print (i)
# anova_paired <- aov(formula = ES ~ Sexo * Endulzante * Tiempo +
#                       Error(numVol/Tiempo),
#                     data = tabla_mergeDupl)
#
}
for(i in colnames(tabla_mergeDupl)) {
print (enquo(i))
# anova_paired <- aov(formula = ES ~ Sexo * Endulzante * Tiempo +
#                       Error(numVol/Tiempo),
#                     data = tabla_mergeDupl)
#
}
for(i in colnames(tabla_mergeDupl)) {
print (eval(i))
# anova_paired <- aov(formula = ES ~ Sexo * Endulzante * Tiempo +
#                       Error(numVol/Tiempo),
#                     data = tabla_mergeDupl)
#
}
for(i in colnames(tabla_mergeDupl)) {
print (eval(parse(i)))
# anova_paired <- aov(formula = ES ~ Sexo * Endulzante * Tiempo +
#                       Error(numVol/Tiempo),
#                     data = tabla_mergeDupl)
#
}
for(i in colnames(tabla_mergeDupl)) {
anova_paired <- aov(formula = i ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
for(i in colnames(tabla_mergeDupl)) {
print (i)
anova_paired <- aov(formula = i ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
for(i in colnames(tabla_mergeDupl[,-1])) {
print (i)
anova_paired <- aov(formula = i ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
anova_paired <- aov(formula = Peso ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
anova_paired <- aov(formula = "Peso" ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
for(i in colnames(tabla_mergeDupl)) {
anova_paired <- aov(formula = as.name(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
for(i in colnames(tabla_mergeDupl)) {
print(as.name(i))
# anova_paired <- aov(formula = ES ~ Sexo * Endulzante * Tiempo +
#                       Error(numVol/Tiempo),
#                     data = tabla_mergeDupl)
#
}
for(i in colnames(tabla_mergeDupl)) {
anova_paired <- aov(formula = as.name(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
for(i in colnames(tabla_mergeDupl)) {
if (i == "numVol"){
print("uwu")
}
else{
anova_paired <- aov(formula = as.name(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
}
for(i in colnames(tabla_mergeDupl)) {
if (i == "numVol"){
print("uwu")
}
else{
print(i)
anova_paired <- aov(formula = as.name(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
}
for(i in colnames(tabla_mergeDupl)) {
if (i == "numVol"){
print("uwu")
}
else{
print(as.name(i))
anova_paired <- aov(formula = as.name(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
}
for(i in colnames(tabla_mergeDupl)) {
if (i == "numVol"){
print("uwu")
}
else{
print(as.formula(i))
anova_paired <- aov(formula = as.name(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
}
for(i in colnames(tabla_mergeDupl)) {
if (i == "numVol"){
print("uwu")
}
else{
print(as.matrix(i))
anova_paired <- aov(formula = as.formula(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
}
for(i in colnames(tabla_mergeDupl)) {
if (i == "numVol"){
print("uwu")
}
else{
print(as.matrix(i))
anova_paired <- aov(formula = as.matrix(i) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)
}
}
tabla_mergeDupl[,2:9]
anova_results <- purrr::map(tabla_mergeDupl[,2:9], ~aov(.x ~  Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo)))
anova_results <- purrr::map(tabla_mergeDupl[,1:9], ~aov(.x ~  Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo)))
tabla_mergeDupl[,1:9]
anova_results <- purrr::map(tabla_mergeDupl[,2:9], ~aov(.x ~  tabla_mergeDupl$Sexo * tabla_mergeDupl$Endulzante
* tabla_mergeDupl$Tiempo +
Error(tabla_mergeDupl$numVol/tabla_mergeDupl$Tiempo)))
anova_results[[1]]
anova_results[[1]]
aov_results <- lapply(tabla_mergeDupl, function(x) summary(aov(x ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)))
tabla_mergeDupl
library(tidyverse)
library(rstatix)
library(scales)
library(ggpubr)
library(factoextra)
library(GGally)
library(plotly)
library(FactoMineR)
library(cluster)
library(mclust)
library(reshape2)
library(gridExtra)
aov_results <- lapply(tabla_mergeDupl, function(x) summary(aov(x ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)))
str(tabla_mergeDupl)
aov_results <- lapply(tabla_mergeDupl, function(x) summary(aov(x ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)))
aov_results <- lapply(tabla_mergeDupl, function(x) summary(aov(as.numeric(x) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)))
aov_results[[1]]
aov_results[[2]]
lappy(aov_results, print)
lapply(aov_results, print)
aov_results <- lapply(tabla_mergeDupl, function(x) anova(aov(as.numeric(x) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl)))
aov_results <- lapply(tabla_mergeDupl, function(x) aov(as.numeric(x) ~ Sexo * Endulzante * Tiempo +
Error(numVol/Tiempo),
data = tabla_mergeDupl))
anova(aov_results[[1]])
aov_results[[1]]
anova(aov_results[[1]]$`numVol:Tiempo`)
pruebaUwu <- anova(aov_results[[1]]$`numVol:Tiempo`)
pruebaUwu$`Pr(>F)`
pruebaUwu
nrow(pruebaUwu)
for (i in nrow(pruebaUwu)){
if (pruebaUwu$`Pr(>F)`[i] < 0.05){print(pruebaUwu[i,])}
}
for (i in nrow(pruebaUwu)){
print(pruebaUwu$`Pr(>F)`[i])
if (pruebaUwu$`Pr(>F)`[i] < 0.05){print(pruebaUwu[i,])}
}
for (i in seq(1,nrow(pruebaUwu))){
print(pruebaUwu$`Pr(>F)`[i])
if (pruebaUwu$`Pr(>F)`[i] < 0.05){print(pruebaUwu[i,])}
}
pruebaUwu <- anova(aov_results[[2]]$`numVol:Tiempo`)
for (i in seq(1,nrow(pruebaUwu))){
print(pruebaUwu$`Pr(>F)`[i])
if (pruebaUwu$`Pr(>F)`[i] < 0.05){print(pruebaUwu[i,])}
}
for (i in seq(1,nrow(pruebaUwu))){
print(pruebaUwu$`Pr(>F)`[i])
if (pruebaUwu$`Pr(>F)`[i] < 0.05 == T){
print(pruebaUwu[i,])
}
}
for (i in seq(1,nrow(pruebaUwu))){
print(pruebaUwu$`Pr(>F)`[i])
if (pruebaUwu$`Pr(>F)`[i] < 0.05 == T){
print(pruebaUwu[i,])
}
}
for (i in seq(1,nrow(pruebaUwu))){
print(pruebaUwu$`Pr(>F)`[i])
if ((pruebaUwu$`Pr(>F)`[i] < 0.05) == T){
print(pruebaUwu[i,])
}
}
for (i in seq(1,nrow(pruebaUwu)-1)){
print(pruebaUwu$`Pr(>F)`[i])
if (pruebaUwu$`Pr(>F)`[i] < 0.05){
print(pruebaUwu[i,])
}
}
nrow(aov_results)
length(aov_results)
for (j in seq(1, length(aov_results))) {
print(aov_results[[j]])
}
for (j in seq(1, length(aov_results))) {
print(aov_results[[j]])
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
for (i in seq(1,nrow(resultado)-1)){
print(resultado$`Pr(>F)`[i])
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
install.packages("knitr")
library(knitr)
knit_print(for (j in seq(1, length(aov_results))) {
print(aov_results[[j]])
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
for (i in seq(1,nrow(resultado)-1)){
print(resultado$`Pr(>F)`[i])
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
)
knit_print.html(for (j in seq(1, length(aov_results))) {
print(aov_results[[j]])
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
for (i in seq(1,nrow(resultado)-1)){
print(resultado$`Pr(>F)`[i])
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
)
methods(knit_print)
knit_print(
for (j in seq(1, length(aov_results))) {
print(aov_results[[j]])
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
for (i in seq(1,nrow(resultado)-1)){
print(resultado$`Pr(>F)`[i])
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
)
knit_print(
for (j in seq(1, length(aov_results))) {
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
for (i in seq(1,nrow(resultado)-1)){
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
)
View(aov_results)
knit_print(
for (j in seq(1, length(aov_results))) {
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
print(names(aov_results)[j]))
for (i in seq(1,nrow(resultado)-1)){
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
knit_print(
for (j in seq(1, length(aov_results))) {
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
print(names(aov_results)[j])
for (i in seq(1,nrow(resultado)-1)){
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
)
names(aov_results)
names(aov_results)[1]
knit_print(
for (j in seq(1, length(aov_results))) {
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
print("nombre variable " + names(aov_results)[j])
for (i in seq(1,nrow(resultado)-1)){
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
)
knit_print(
for (j in seq(1, length(aov_results))) {
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
print("nombre variable ", names(aov_results)[j])
for (i in seq(1,nrow(resultado)-1)){
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
)
knit_print(
for (j in seq(1, length(aov_results))) {
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
print(c("nombre variable ", names(aov_results)[j]))
for (i in seq(1,nrow(resultado)-1)){
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
)
knit_print(
for (j in seq(1, length(aov_results))) {
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
#print(c("nombre variable ", names(aov_results)[j]))
for (i in seq(1,nrow(resultado)-1)){
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
)
knit_print(
for (j in seq(1, length(aov_results))) {
print(paste("Variable analizada: ", names(aov_results)[j]))
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
for (i in seq(1,nrow(resultado)-1)){
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
)
install.packages("stargazer")
library(stargazer)
stargazer(
for (j in seq(1, length(aov_results))) {
print(paste("Variable analizada: ", names(aov_results)[j]))
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
for (i in seq(1,nrow(resultado)-1)){
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
)
for (j in seq(1, length(aov_results))) {
print(paste("Variable analizada: ", names(aov_results)[j]))
resultado <- anova(aov_results[[j]]$`numVol:Tiempo`)
for (i in seq(1,nrow(resultado)-1)){
if (resultado$`Pr(>F)`[i] < 0.05){
print(resultado[i,])
}
}
}
stargazer(anova(aov_results[[1]]))
stargazer(anova(aov_results[[1]]$`numVol:Tiempo`))
stargazer(anova(aov_results[[1]]$`numVol:Tiempo`), out = ".html")
stargazer(anova(aov_results[[1]]$`numVol:Tiempo`), type = "html")
names(aov_results)

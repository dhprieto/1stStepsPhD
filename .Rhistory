else if (grepl(pattern = "B", x = tabla$grouping[i])){
tabla$Sweetener[i] <- "SU"
}
else if (grepl(pattern = "C", x = tabla$grouping[i])){
tabla$Sweetener[i] <- "SA"
}
# adding numVol
if (length(tabla$grouping[i]) == 4){
tabla$numVol[i] <- as.numeric(substr(tabla$grouping[i],0,1))
if (tabla$Sweetener[i] == "SU"){
tabla$numVol[i] = tabla$numVol[i] + 50
}
else if (tabla$Sweetener[i] == "SA"){
tabla$numVol[i] = tabla$numVol[i] + 100
}
}
else {
tabla$numVol[i] <- as.numeric(substr(tabla$grouping[i],0,2))
if (tabla$Sweetener[i] == "SU"){
tabla$numVol[i] = tabla$numVol[i] + 50
}
else if (tabla$Sweetener[i] == "SA"){
tabla$numVol[i] = tabla$numVol[i] + 100
}
}
if (grepl(pattern = "F", x = tabla$grouping[i])){
tabla$Time[i] <- "Final"
}
else if (grepl(pattern = "([A-C])0", x = tabla$grouping[i])){
tabla$Time[i] <- "Initial"
}
}
tableSex <- read.csv("../../effectsSexIntakers/data/chronicSexVolunteers.csv", sep = ";", dec = ",")
tabla <- merge(tabla, tableSex, by = "numVol")
tabla$Sex[tabla$Sex == "HOMBRE"] <- "MAN"
tabla$Sex[tabla$Sex == "MUJER"] <- "WOMAN"
return(tabla)
}
normalizingNumeric <- function(tableComplete) {
for (i in colnames(tableComplete)){
if (is.numeric(tableComplete[,i]) && i != "numVol"){
tableComplete[,i] <- scales::rescale(tableComplete[,i])
}
}
return (tableComplete)
}
library(simputation)
library(cluster)
library(Boruta)
library(mlbench)
library(caret)
library(randomForest)
library(gridExtra)
library(RColorBrewer)
readingFillingGrouping <- function(tablaPath){
tabla <- read.csv(tablaPath, sep = ";", dec = ".")
if (tablaPath == "../../effectsSexIntakers/data/chronicUrineFlav.csv"){
tabla <- read.csv(tablaPath, sep = ";", dec = ",")
}
# remove raw data from spectometry
for (i in colnames(tabla)){
if(substr(i, nchar(i), nchar(i)) != "1" & i != "grouping"){
tabla[,i] <- NULL
}
}
# adding sweetener
for (i in seq(1, nrow(tabla))){
if (grepl(pattern = "A", x = tabla$grouping[i])){
tabla$Sweetener[i] <- "ST"
}
else if (grepl(pattern = "B", x = tabla$grouping[i])){
tabla$Sweetener[i] <- "SU"
}
else if (grepl(pattern = "C", x = tabla$grouping[i])){
tabla$Sweetener[i] <- "SA"
}
# adding numVol
if (length(tabla$grouping[i]) == 4){
tabla$numVol[i] <- as.numeric(substr(tabla$grouping[i],0,1))
if (tabla$Sweetener[i] == "SU"){
tabla$numVol[i] = tabla$numVol[i] + 50
}
else if (tabla$Sweetener[i] == "SA"){
tabla$numVol[i] = tabla$numVol[i] + 100
}
}
else {
tabla$numVol[i] <- as.numeric(substr(tabla$grouping[i],0,2))
if (tabla$Sweetener[i] == "SU"){
tabla$numVol[i] = tabla$numVol[i] + 50
}
else if (tabla$Sweetener[i] == "SA"){
tabla$numVol[i] = tabla$numVol[i] + 100
}
}
if (grepl(pattern = "F", x = tabla$grouping[i])){
tabla$Time[i] <- "Final"
}
else if (grepl(pattern = "([A-C])0", x = tabla$grouping[i])){
tabla$Time[i] <- "Initial"
}
}
tableSex <- read.csv("../../effectsSexIntakers/data/chronicSexVolunteers.csv", sep = ";", dec = ",")
tabla <- merge(tabla, tableSex, by = "numVol")
tabla$Sex[tabla$Sex == "HOMBRE"] <- "MAN"
tabla$Sex[tabla$Sex == "MUJER"] <- "WOMAN"
return(tabla)
}
normalizingNumeric <- function(tableComplete) {
for (i in colnames(tableComplete)){
if (is.numeric(tableComplete[,i]) && i != "numVol"){
tableComplete[,i] <- scales::rescale(tableComplete[,i])
}
}
return (tableComplete)
}
factoringImputating <- function(tableNorm){
tableNorm$Sweetener <- factor(tableNorm$Sweetener)
tableNorm$Sex <- factor(tableNorm$Sex)
tableNorm$Time <- factor(tableNorm$Time)
return(tableNorm)
}
timingCleanFeatures <- function(tabla, pathToTable){
if (pathToTable == "data/chronicPlasmAnt.csv"){
rename(tabla, CA = Caffeic.Acid..CA..1, CA.G = CA.Gluc.1,
CA.S = CA.Sulfate.1, Total.CA = TOTAL.CA.1,
DHPAA = X3.4.Dihidroxiphenilacetic.acid..DHPAA..1,
DHPAA.G = DHPAA.Gluc.1,
DHPAA.GG = DHPAA.di.Gluc.1,
DHPAA.GS = DHPAA.Gluc.sulfate.1,
DHPAA.SS = DHPAA.di.Sulfate.1,
Total.DHPAA = TOTAL.DHPAA.1,
TFA.G = TFA.Gluc.1,
TFA.S = TFA.Sulfate.1, Total.TFA = TOTAL.TFA.1,
VA = Vanillic.Acid..VA..1,
VA.GG = VA.GG.1,
VA.S = VA.Sulfate.1,
VA.GS = VA.Gluc.sulfate.1,
VA.SS = VA.di.sulfate.1, Total.VA = Total.VA.1)
}
else if(pathToTable == "data/chronicPlasmFlav.csv"){
rename(tabla, E = Eriodictiol..E..1,
E.S = ES.1 ,
Total.E = TOTAL.E.1,
HE.G = HE.G.1, N.G = NG.1)
}
else if(pathToTable == "data/chronicUrineFlav.csv"){
rename(tabla,
E = Eriodyctiol..E..1, E.G = ES.1, E.S = ES.1 , Total.E = TOTAL.E.1,
HE = HE.1, HE.G = HE.G.1,
HE.GG = HE.GG.1, Total.HE = TOTAL.HE.1,
N = Naringenine..N..1, N.G = NG.1, N.GG = NGG.1, N.S = NS.1,
Total.N = TOTAL.N.1)
}
else if (pathToTable == "data/chronicUrineAnt.csv"){
rename(tabla,
CA = Caffeic.acid..CA..1,
CA.G= CA.Gluc.1, CA.S = CA.Sulfate.1,
CA.GS = CA.Gluc.sulfate.1, Total.CA = TOTAL.CA.1,
DHPAA = X3.4...Dihidroxiphenilacetic.acid..DHPAA..1,
DHPAA.G = DHPAA.Gluc.1, DHPAA.GG = DHPAA.di.Gluc.1,
DHPAA.GS = DHPAA.Gluc.sulfate.1,
DHPAA.SS = DHPAA.di.Sulfate.1, Total.DHPAA = TOTAL.DHPAA.1,
TFA.G = TFA.Gluc.1, TFA.S = TFA.Sulfate.1, Total.TFA = TOTAL.TFA.1,
VA = Vanillic.Acid..VA..1, VA.GG = VA.GG.1,
VA.GS = VA.Gluc.sulfate.1, VA.SS = VA.di.sulfate.1, Total.VA = Total.VA.1)
}
# return(tabla)
}
aov_test <- function(tabla, variable){
tablaVar <- tabla %>% select(numVol, Sweetener, Sex, Time, variable)
# tablaVar <- tablaVar[!tablaVar[[5]] %in% boxplot.stats(tablaVar[[5]])$out,]
res.aov <- anova_test(data = ungroup(tablaVar), dv=variable, wid=numVol,
between = c(Sex, Sweetener), within= Time)
tablaAnova <- get_anova_table(res.aov, correction = "auto")
print(tablaAnova)
}
aov_loop <- function(tabla, varsRemoved){
# remover no duplicados
if (deparse(substitute(tabla)) %in% c("urineAnt", "urineFlav")){
counts <- data.frame(table(tabla$numVol))
tabla <- tabla[tabla$numVol %in% counts$Var1[counts$Freq > 1],]
}
message(paste("Tabla analizada: ", deparse(substitute(tabla))))
for (i in colnames(tabla)[-1]){
if (is.numeric(tabla[,i]) && !(i %in% varsRemoved)){
message(paste("Variable analizada: ", i))
aov_test(tabla,i)
}
}
}
anovaTests <- function(tabla, varsRemoved) {
aov_loop(tabla, varsRemoved)
pairwiseTTest(tabla, varsRemoved)
}
boxplotBias <- function(vars, table1.0, factore, removeOutliers = F, titlePLot, x_label ){
# reading table
table1.1 <- table1.0 %>% select (all_of(vars), Time, Sex, Sweetener, -c(numVol, grouping))
if (removeOutliers){
for (i in colnames(table1.1)) {
if (is.numeric(table1.1[,i])){
table1.1 <- table1.1[!table1.1[, i] %in% boxplot.stats(table1.1[,i])$out,]
}
}
# return(table1.1)
}
# long table format
table1.2 <- melt(table1.1, id = c("Time", "Sex", "Sweetener"))
# plot factors
bxp <- function(longTable, factore, x_label){
if (factore == "Time") {
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore],
levels = c("Initial", "Final")))) +
geom_boxplot()+
ggtitle(titlePLot)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5))+
labs(y = "standarized value", x = x_label, fill = "Time")
}
else if (factore == "Sex") {
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste(titlePLot))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5))+
labs(y = "standarized value", x = x_label, fill = "Sex")+
scale_fill_brewer(palette = "Reds")+
facet_wrap(~factor(Time, levels = c("Initial", "Final")))
}
else if (factore == "Sweetener"){
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore])), colour = "Sweetener") +
geom_boxplot()+
ggtitle(titlePLot)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5))+
labs(y = "standarized value", x = x_label, fill = "Sweetener")+
facet_wrap(~factor(Time, levels = c("Initial", "Final")))
}
}
bxp(table1.2, factore, x_label)
}
main1prepoc <- function(pathToTable, pathtoRealTable){
tabla1.0 <- readingFillingGrouping(pathToTable)
tabla1.1 <- normalizingNumeric(tabla1.0)
tabla1.2 <- factoringImputating(tabla1.1)
#tabla1.2_stats <- estadisticosDescriptivos(urAnt1.2)
tabla1.3 <- timingCleanFeatures(tabla1.2, pathtoRealTable)
return (tabla1.3)
}
plasmAnt <- main1prepoc("../../effectsSexIntakers/data/chronicPlasmAnt.csv", "data/chronicPlasmAnt.csv")
plasmFlav <- main1prepoc("../../effectsSexIntakers/data/chronicPlasmFlav.csv", "data/chronicPlasmFlav.csv")
urineFlav <- main1prepoc("../../effectsSexIntakers/data/chronicUrineFlav.csv", "data/chronicUrineFlav.csv")
urineAnt <- main1prepoc("../../effectsSexIntakers/data/chronicUrineAnt.csv", "data/chronicUrineAnt.csv")
set.seed(123)
borutaAU_I <- Boruta(Sex:Sweetener~ ., data = urineAntImp %>%
filter(Time == "Initial") %>%
select(-c(grouping, numVol, Time, CA.Sulfate, DHPAA.di.Gluc, TFA.di.sulfate.1, TIFA.Sulfate.1)), doTrace = 3, maxRuns = 500)
# BORUTA RESULTS:
getSelectedAttributes(borutaI)
# BORUTA RESULTS:
getSelectedAttributes(borutaAU_I)
tableAU_I <-  urineAntImp %>%
filter(Time == "Initial") %>%
select(getSelectedAttributes(borutaAU_I))
comparisonTI <- clValid(
obj        = tableAU_I,
nClust     = 2:6,
clMethods  = c( "hierarchical", "kmeans", "diana", "fanny", "som", "model", "sota", "pam", "clara","agnes"),
validation = c("stability", "internal")
)
summary(comparisonTI)
comparisonTI
summary(comparisonTI)
clustersAU_I <- cluster::pam(tableAU_I, k = 6, metric = "manhattan")
pcaAU_I <- prcomp(tableAU_I)
p1_AU_I <- fviz_pca_biplot(pcaIn, label = c("quali", "var"), labelsize = 6, habillage = clustersAU_I$clustering,
addEllipses = T,col.var = "black", title = "A. Anthocyanins in Urine at Initial Time",
arrowsize = 0.8, repel = T)
p1_AU_I <- fviz_pca_biplot(pcaAU_I, label = c("quali", "var"), labelsize = 6, habillage = clustersAU_I$clustering,
addEllipses = T,col.var = "black", title = "A. Anthocyanins in Urine at Initial Time",
arrowsize = 0.8, repel = T)
p1_AU_I
p1_AU_I
tableFn <-  urineAntImp %>%
filter(Time == "Final") %>%
select(getSelectedAttributes(borutaF))
borutaF <- Boruta(Sex:Sweetener~ ., data = urineAntImp %>%
filter(Time == "Final") %>%
select(-c(grouping, numVol, Time, CA.Sulfate, DHPAA.di.Gluc, TFA.di.sulfate.1, TIFA.Sulfate.1)), doTrace = 2, maxRuns = 500)
# [1] "CA"       "Total.CA" "DHPAA"    "TFA.Gluc"
getSelectedAttributes(borutaF)
tableFn <-  urineAntImp %>%
filter(Time == "Final") %>%
select(getSelectedAttributes(borutaF))
clustersFn <-cluster::pam(x = tableFn, k = 6, metric = "manhattan")
pcaFn <- prcomp(tableFn)
p2 <- fviz_pca_biplot(pcaFn, label = c("quali", "var"), labelsize = 6, habillage = clustersFn$clustering,
addEllipses = T,col.var = "black", arrowsize = 0.8, repel = T,
title = "B. Anthocyanins in Urine at Final Time")
ggarrange(p1_AU_I,p2)
ggarrange(p1_AU_I,p2)
tablaClustersIn <-  urineAntImp %>% filter(Time == "Initial") %>%
select(-c(grouping, numVol, Time, CA.Sulfate, DHPAA.di.Gluc,
TFA.di.sulfate.1, TIFA.Sulfate.1)) %>%
add_column(clusters = clustersAU_I$clustering)
tableSexIn <- table(tablaClustersIn$Sex, tablaClustersIn$clusters)#tabla_clusters %>% count(Sexo, clusters)
tablaClustersIn <- tablaClustersIn %>% select(-c(Sweetener, Sex))
longtableIn <- melt(tablaClustersIn, id = c("clusters"))
p3 <- ggplot(longtableIn, aes(factor(variable, level = unique(longtableIn$variable)),as.numeric(value),
fill=factor(clusters)))+ geom_boxplot()+
coord_cartesian(ylim = quantile(longtableIn$value, c(0, 0.97)))+
annotation_custom(grob = tableGrob(tableSexIn, rows = c("M", "W"), theme = ttheme_default(base_size = 8)),
xmin=16,xmax=19, ymin=0.4, ymax=0.5)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5))+
ggtitle("A. Anthocyanins in Urine at Initial Time")+
labs(y = "Standarized Value", x = "Bioactive Anthocyanins", fill = "Cluster")
tablaClustersFn <-  urineAntImp %>% filter(Time == "Final")%>%
select(-c(grouping, numVol, Time, CA.Sulfate, DHPAA.di.Gluc, TFA.di.sulfate.1, TIFA.Sulfate.1)) %>%
add_column(clusters = clustersFn$clustering)
tableSexFn <- table(tablaClustersFn$Sex, tablaClustersFn$clusters) #tabla_clusters %>% count(Sexo, clusters)
tableSweetenerFn <- table(tablaClustersFn$Sweetener, tablaClustersFn$clusters) #tabla_clusters %>% count(Endulzante, clusters)
tablaClustersFn <- tablaClustersFn %>% select(-c(Sweetener, Sex))
longtableFn <- melt(tablaClustersFn, id = c("clusters"))
p4 <- ggplot(longtableFn, aes(factor(variable, level = unique(longtableFn$variable)),as.numeric(value),
fill=factor(clusters)))+ geom_boxplot()+
coord_cartesian(ylim = quantile(longtableFn$value, c(0, 0.97)))+
annotation_custom(grob = tableGrob(tableSexFn, rows = c("M", "W"), theme = ttheme_default(base_size = 6)),
xmin= 16,xmax=19, ymin=0.45, ymax=0.54)+
annotation_custom(grob = tableGrob(tableSweetenerFn, rows=c("SA", "ST","SU"), theme = ttheme_default(base_size = 6)),
xmin= 16,xmax=19, ymin=0.35, ymax=0.45)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.5))+
ggtitle("B. Anthocyanins in urine at Final Time")+
labs(y = "Standarized Value", x = "Bioactive Anthocyanins", fill = "Cluster")
ggarrange(p3,p4)
ggarrange(p3,p4)
set.seed(123)
borutaI <- Boruta(Sex~ ., data = urineFlavImp %>%
filter(Time == "Initial") %>%
select(-c(grouping, numVol, Time)), doTrace = 2, maxRuns = 500)
getSelectedAttributes(borutaI)
tableIn <-  urineFlavImp %>%
filter(Time == "Initial")  %>%
select(getSelectedAttributes(borutaI))
comparisonTI <- clValid(
obj        = tableIn,
nClust     = 2:6,
clMethods  = c( "hierarchical", "kmeans", "diana", "fanny", "som", "model", "sota", "pam", "clara","agnes"),
validation = c("stability", "internal")
)
summary(comparisonTI)
summary(comparisonTI)
clustersIn <-cluster::pam(x = tableIn, k = 6, metric = "manhattan")
pcaIn <- prcomp(tableIn)
p1 <- fviz_pca_biplot(pcaIn, habillage = clustersIn$clustering, addEllipses = T,col.var = "black", title = "A. Flavanones in Urine at Initial Time",label = c("quali", "var"), labelsize =6, arrowsize = 0.8, repel = T)
borutaF <- Boruta(Sex:Sweetener~ ., data = urineFlavImp %>%
filter(Time == "Final") %>%
select(-c(grouping, numVol, Time)), doTrace = 2, maxRuns = 500)
getSelectedAttributes(borutaF)
tableFn <-  urineFlavImp %>%
filter(Time == "Final") %>%
select(getSelectedAttributes(borutaF))
comparisonTI <- clValid(
obj        = tableFn,
nClust     = 2:6,
clMethods  = c( "hierarchical", "kmeans", "diana", "fanny", "som", "model", "sota", "pam", "clara","agnes"),
validation = c("stability", "internal")
)
summary(comparisonTI)
borutaF <- Boruta(Sex:Sweetener~ ., data = urineFlavImp %>%
filter(Time == "Final") %>%
select(-c(grouping, numVol, Time)), doTrace = 2, maxRuns = 500)
getSelectedAttributes(borutaF)
tableFn <-  urineFlavImp %>%
filter(Time == "Final") %>%
select(getSelectedAttributes(borutaF))
comparisonTF <- clValid(
obj        = tableFn,
nClust     = 2:6,
clMethods  = c( "hierarchical", "kmeans", "diana", "fanny", "som", "model", "sota", "pam", "clara","agnes"),
validation = c("stability", "internal")
)
summary(comparisonTF)
summary(comparisonTF)
distances <- dist(x = tableIn, method = "manhattan")
hc_diana <- diana(x = distances, diss = TRUE, metric = "manhattan")
fviz_dend(hc_diana, k = 6)
clusters_final <- cutree(tree = hc_diana, k = 6)
borutaI <- Boruta(Sex~ ., data = urineFlavImp %>%
filter(Time == "Initial") %>%
select(-c(grouping, numVol, Time)), doTrace = 2, maxRuns = 500)
getSelectedAttributes(borutaI)
tableIn <-  urineFlavImp %>%
filter(Time == "Initial")  %>%
select(getSelectedAttributes(borutaI))
comparisonTI <- clValid(
obj        = tableIn,
nClust     = 2:6,
clMethods  = c( "hierarchical", "kmeans", "diana", "fanny", "som", "model", "sota", "pam", "clara","agnes"),
validation = c("stability", "internal")
)
summary(comparisonTI)
summary(comparisonTI)
set.seed(123)
borutaI <- Boruta(Sex~ ., data = urineFlavImp %>%
filter(Time == "Initial") %>%
select(-c(grouping, numVol, Time)), doTrace = 2, maxRuns = 500)
getSelectedAttributes(borutaI)
tableIn <-  urineFlavImp %>%
filter(Time == "Initial")  %>%
select(getSelectedAttributes(borutaI))
comparisonTI <- clValid(
obj        = tableIn,
nClust     = 2:6,
clMethods  = c( "hierarchical", "kmeans", "diana", "fanny", "som", "model", "sota", "pam", "clara","agnes"),
validation = c("stability", "internal")
)
summary(comparisonTI)
summary(comparisonTI)
distances <- dist(x = tableIn, method = "manhattan")
hc_diana <- hclust(x = distances, diss = TRUE, metric = "manhattan")
distances <- dist(x = tableIn, method = "manhattan")
hc_diana <- hclust(x = distances, diss = TRUE)
hc_diana <- hclust(d = distances, method = "manhattan")
hc_diana <- hclust(d = distances, method = "complete")
fviz_dend(hc_diana, k = 6)
fviz_dend(hc_diana, k = 6)
hc_diana <- hclust(d = distances, method = "average")
fviz_dend(hc_diana, k = 6)
fviz_dend(hc_diana, k = 6)
clusters_final <- cutree(tree = hc_diana, k = 6)
pcaFinal <- prcomp(tableIn, scale = T)
summary(comparisonTI)
summary(comparisonTI)
hc_average <- hclust(d = distances, method = "average")
fviz_dend(hc_average, k = 6)
hc_average <- hclust(d = distances, method = "average")
clusters_final <- cutree(tree = hc_average, k = 6)
pcaFinal <- prcomp(tableIn, scale = T)
pcaFinal <- prcomp(tableIn)
p1 <- fviz_pca_biplot(pcaFinal, habillage = clusters_final, addEllipses = T,col.var = "black", title = "A. Flavanones in Urine at Initial Time",label = c("quali", "var"), labelsize =6, arrowsize = 0.8, repel = T)
p1
som_grid <- somgrid(xdim = 25, ydim=5, topo="hexagonal")
library(kohonen)
som_grid <- somgrid(xdim = 25, ydim=5, topo="hexagonal")
# Finally, train the SOM, options for the number of iterations,
# the learning rates, and the neighbourhood are available
som_model <- som(as.matrix(tableIn),
grid=som_grid,
rlen=100,
alpha=c(0.05,0.01),
keep.data = TRUE)
som_cluster <- cutree(hclust(dist(som_model$codes[[1]])), k = 6)
pcaFinal <- prcomp(tableIn)
p1 <- fviz_pca_biplot(pcaFinal, habillage = som_cluster, addEllipses = T,col.var = "black", title = "A. Flavanones in Urine at Initial Time",label = c("quali", "var"), labelsize =6, arrowsize = 0.8, repel = T)
p1
som_cluster
som_cluster[6]
som_cluster %>% filter(6)
som_cluster == 6
som_cluster[which(som_cluster == 6)]
p1
pcaFinal[-c(27, 51, 76)]
p1 <- fviz_pca_biplot(pcaFinal[-c(27, 51, 76)], habillage = som_cluster[-c(27, 51, 76)], addEllipses = T,col.var = "black", title = "A. Flavanones in Urine at Initial Time",label = c("quali", "var"), labelsize =6, arrowsize = 0.8, repel = T)
som_cluster[-c(27, 51, 76)]
pcaFinal <- prcomp(tableIn[-c(27, 51, 76),])
p1 <- fviz_pca_biplot(pcaFinal, habillage = som_cluster[-c(27, 51, 76)], addEllipses = T,col.var = "black", title = "A. Flavanones in Urine at Initial Time",label = c("quali", "var"), labelsize =6, arrowsize = 0.8, repel = T)
p1
# Finally, train the SOM, options for the number of iterations,
# the learning rates, and the neighbourhood are available
som_model <- som(as.matrix(tableIn[-c(27, 51, 76),]),
grid=som_grid,
rlen=100,
alpha=c(0.05,0.01),
keep.data = TRUE)
som_grid <- somgrid(xdim = 25, ydim=5, topo="hexagonal")
# Finally, train the SOM, options for the number of iterations,
# the learning rates, and the neighbourhood are available
som_model <- som(as.matrix(tableIn[-c(27, 51, 76),]),
grid=som_grid,
rlen=100,
alpha=c(0.05,0.01),
keep.data = TRUE)
p1 <- fviz_pca_biplot(pcaFinal, habillage = som_cluster, addEllipses = T,col.var = "black", title = "A. Flavanones in Urine at Initial Time",label = c("quali", "var"), labelsize =6, arrowsize = 0.8, repel = T)
pcaFinal <- prcomp(tableIn)
p1 <- fviz_pca_biplot(pcaFinal, habillage = som_cluster, addEllipses = T,col.var = "black", title = "A. Flavanones in Urine at Initial Time",label = c("quali", "var"), labelsize =6, arrowsize = 0.8, repel = T)
p1
borutaF <- Boruta(Sex:Sweetener~ ., data = urineFlavImp %>%
filter(Time == "Final") %>%
select(-c(grouping, numVol, Time)), doTrace = 2, maxRuns = 500)
getSelectedAttributes(borutaF)
tableFn <-  urineFlavImp %>%
filter(Time == "Final") %>%
select(getSelectedAttributes(borutaF))
comparisonTF <- clValid(
obj        = tableFn,
nClust     = 2:6,
clMethods  = c( "hierarchical", "kmeans", "diana", "fanny", "som", "model", "sota", "pam", "clara","agnes"),
validation = c("stability", "internal")
)
summary(comparisonTF)
distances <- dist(tableFn, method = "manhattan")
hc_diana <- diana(x = distances, metric = "manhattan")
clusters_initial <- cutree (hc_diana, k = 6)
pca_initial <- prcomp(tableFn)
p1 <- fviz_pca_biplot(pca_initial, habillage = clusters_initial, addEllipses = T,col.var = "black", title = "A. Flavanones in Urine at Final Time",label = c("quali", "var"), labelsize =6, arrowsize = 0.8, repel = T)
p1 <- fviz_pca_biplot(pcaFinal, habillage = som_cluster, addEllipses = T,col.var = "black", title = "A. Flavanones in Urine at Initial Time",label = c("quali", "var"), labelsize =6, arrowsize = 0.8, repel = T)
p2 <- fviz_pca_biplot(pca_initial, habillage = clusters_initial, addEllipses = T,col.var = "black", title = "A. Flavanones in Urine at Final Time",label = c("quali", "var"), labelsize =6, arrowsize = 0.8, repel = T)
ggarrange(p1,p2)
ggarrange(p1,p2)

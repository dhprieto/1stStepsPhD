library(stargazer)
library(rstatix)
source("scripts/reading.R")
source("scripts/anova.R")
orinaFlav <- preprocessTables("data/", "tablaOrinaFlav.csv")
plasmaAnt <- preprocessTables("data/", "tablaplasmaAnt.csv")
plasmaFlav <- preprocessTables("data/", "tablaplasmaFlav.csv")
tabla1 <- orinaFlav$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tabla2 <- orinaAnt$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
tabla1 <- orinaFlav$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tabla2 <- orinaAnt$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
orinaFlav <- preprocessTables("data/", "tablaOrinaFlav.csv")
orinaAnt <- preprocessTables("data/", "tablaOrinaAnt.csv")
plasmaAnt <- preprocessTables("data/", "tablaPlasmaAnt.csv")
plasmaFlav <- preprocessTables("data/", "tablaPlasmaFlav.csv")
tabla1 <- orinaFlav$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tabla2 <- orinaAnt$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
tabla3 <- plasmaAnt$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
tabla_antro <- plasmaFlav$tablaFactors %>%
select(c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tabla_merge <- na.omit(full_join( full_join( full_join(
tabla_antro %>% group_by(numVol) %>% mutate(id = row_number()),
tabla1 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id")),
tabla2 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id")),
tabla3 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id")) )
counts <- data.frame(table(tabla_merge$numVol))
tabla_mergeDupl <- tabla_merge[tabla_merge$numVol %in% counts$Var1[counts$Freq > 1],]
View(tabla_mergeDupl)
tabla1 <- orinaFlav$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec)) %>% filter(Tiempo == "Final")
tabla2 <- orinaAnt$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo)) %>% filter(Tiempo == "Final")
tabla3 <- plasmaAnt$tablaFactors %>% filter(Tiempo == "Final") %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
tabla1 <- orinaFlav$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec)) %>% filter(Tiempo == "Final")
tabla2 <- orinaAnt$tablaFactors %>% filter(Tiempo == "Final") %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
tabla3 <- plasmaAnt$tablaFactors %>% filter(Tiempo == "Final") %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
tabla_antro <- plasmaFlav$tablaFactors %>% filter(Tiempo == "Final") %>%
select(c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tabla_merge <- na.omit(full_join( full_join( full_join(
tabla_antro %>% group_by(numVol) %>% mutate(id = row_number()),
tabla1 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id")),
tabla2 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id")),
tabla3 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id")) )
counts <- data.frame(table(tabla_merge$numVol))
View(tabla_merge)
library(tidyverse)
library(scales)
library(stargazer)
library(rstatix)
source("scripts/reading.R")
source("scripts/anova.R")
view(tabla_mergeDupl)
library(tidyverse)
library(scales)
library(stargazer)
library(rstatix)
source("scripts/reading.R")
source("scripts/anova.R")
orinaFlav <- preprocessTables("data/", "tablaOrinaFlav.csv")
orinaAnt <- preprocessTables("data/", "tablaorinaAnt.csv")
plasmaAnt <- preprocessTables("data/", "tablaplasmaAnt.csv")
plasmaFlav <- preprocessTables("data/", "tablaplasmaFlav.csv")
tabla1 <- orinaFlav$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tabla2 <- orinaAnt$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
tabla3 <- plasmaAnt$tablaFactors %>%
select(-c(Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec, Endulzante,
Sexo, Tiempo))
tabla_antro <- plasmaFlav$tablaFactors %>%
select(c(numVol, Peso, IMC, Grasa, IRCV, Bpmin, Bpmax, Frec))
tabla_merge <- na.omit(full_join( full_join( full_join(
tabla_antro %>% group_by(numVol) %>% mutate(id = row_number()),
tabla1 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id")),
tabla2 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id")),
tabla3 %>% group_by(numVol) %>% mutate(id = row_number()), by = c("numVol", "id")) )
counts <- data.frame(table(tabla_merge$numVol))
tabla_mergeDupl <- tabla_merge[tabla_merge$numVol %in% counts$Var1[counts$Freq > 1],]
aov_loop(tabla_mergeDupl)
str(tabla_mergeDupl)
aov_loop(tabla_mergeDupl)
source("scripts/anova.R")
aov_loop(tabla_mergeDupl)
aov_loop(tabla_mergeDupl)
tabla[,i]
tabla[,i]
is.numeric(tabla[,i])
str(tabla_mergeDupl)
source("scripts/anova.R")
aov_loop(tabla_mergeDupl)
source("scripts/anova.R")
aov_loop(tabla_mergeDupl)
source("scripts/anova.R")
aov_loop(tabla_mergeDupl)
tabla[,i]
is.double(tabla[,i])
is.numeric(tabla[,i])
is_numeric(tabla[,i])
tabla
class(tabla[,i])
tabla[,i]
tabla[,i]
typeof(tabla[,i])
typeof(get(tabla[,i]))
class(tabla)
ungroup(tabla)
class(tabla)
is_numeric(ungroup(tabla)[,i])
is.numeric(ungroup(tabla)[,i])
class(ungroup(tabla)[,i])
tabla[[1]]
tabla[[2]]
is.numeric(tabla[[1]])
is.numeric(tabla[[2]])
source("scripts/anova.R")
aov_loop(tabla_mergeDupl)
source("scripts/anova.R")
aov_loop(tabla_mergeDupl)
rlang::last_error()
aov_loop(tabla_mergeDupl)
variable
tablaVar[,variable]
tablaVar[,variable]
tablaVar[[5]]
source("scripts/anova.R")
aov_loop(tabla_mergeDupl)
source("scripts/anova.R")
aov_loop(tabla_mergeDupl)
source("scripts/anova.R")
aov_loop(tabla_mergeDupl)
aov_loop(tabla_mergeDupl)
tablaVar
tablaVar
source("scripts/anova.R")
aov_loop(tabla_mergeDupl)
tablaVar
tablaVar$numVol
rlang::last_error()
rlang::last_error()
aov_loop(tabla_mergeDupl)
tabla_mergeDupl
source("scripts/anova.R")
aov_loop(tabla_mergeDupl)
install.packages("MANORA.RM")
install.packages("MANOVA.RM")
#install.packages("MANOVA.RM")
library(tidyverse)
library(scales)
library(MANOVA.RM)
source("scripts/reading.R")
tabla1 <- preprocessTables("data/", "tablaOrinaAnt.csv")
tabla1_1 <- tabla1$tablaFactors
fit <- multRM(cbind(CA.Gluc, Peso) ~ Sexo*Endulzante*Tiempo, data= tabla1_1,
subject = "numVol", within = "Tiempo", iter=1000)
counts <- data.frame(table(tabla1_1$numVol))
tabla_mergeDupl <- tabla1_1[tabla1_1$numVol %in% counts$Var1[counts$Freq > 1],]
fit <- multRM(cbind(CA.Gluc, Peso) ~ Sexo*Endulzante*Tiempo, data= tabla1_1,
subject = "numVol", within = "Tiempo", iter=1000)
fit <- multRM(cbind(CA.Gluc, Peso) ~ Sexo*Endulzante*Tiempo, data= tabla1_2,
subject = "numVol", within = "Tiempo", iter=1000)
tabla1_2 <- tabla1_1[tabla1_1$numVol %in% counts$Var1[counts$Freq > 1],]
fit <- multRM(cbind(CA.Gluc, Peso) ~ Sexo*Endulzante*Tiempo, data= tabla1_2,
subject = "numVol", within = "Tiempo", iter=1000)
summary(fit)
names(tabla1_1)
nombres <- names(tabla1_1) %>% select (-c(Bpmin, Bpmax, Frec, Endulzante,
Tiempo, Sexo, numVol))
nombres
nombres <- list(names(tabla1_1)) %>% select (-c(Bpmin, Bpmax, Frec, Endulzante,
Tiempo, Sexo, numVol))
nombres <- tibble(names(tabla1_1)) %>% select (-c(Bpmin, Bpmax, Frec, Endulzante,
Tiempo, Sexo, numVol))
nombres <- data.frame(names(tabla1_1)) %>% select (-c(Bpmin, Bpmax, Frec, Endulzante,
Tiempo, Sexo, numVol))
nombres <- list(tabla1_1)[-c("Bpmin"," Bpmax")] #Frec, Endulzante,Tiempo, Sexo, numVol)
nombres <- list(tabla1_1)#[-c("Bpmin"," Bpmax")] #Frec, Endulzante,Tiempo, Sexo, numVol)
nombres <- names(tabla1_1)[-c("Bpmin"," Bpmax")] #Frec, Endulzante,Tiempo, Sexo, numVol)
names(tabla1_1)
nombres <- names(tabla1_1)[-10:16]
nombres <- names(tabla1_1)[!10:16]
nombres
10:16
nombres <- names(tabla1_1)[-c(10:16)]
nombres
as.formula(nombres)
formula(nombres)
fit <- multRM(cbind(nombres) ~ Sexo*Endulzante*Tiempo, data= tabla1_2,
subject = "numVol", within = "Tiempo", iter=1000)
nombres
sym(nombres)
as.name(nombres)
fit <- multRM(cbind(Ca.Gluc, DHPAA.Gluc, TFA.Gluc) ~ Sexo*Endulzante*Tiempo, data= tabla1_2,
subject = "numVol", within = "Tiempo", iter=1000)
fit <- multRM(cbind(CA.Gluc, DHPAA.Gluc, TFA.Gluc) ~ Sexo*Endulzante*Tiempo, data= tabla1_2,
subject = "numVol", within = "Tiempo", iter=1000)
summary(fit)
source("scripts/reading.R")
source("scripts/preprocess.R")
tabla1 <- reading("data/agudoOrinaAntLimpio.csv")
tabla1 <- reading("data/agudoOrinaAntLimpio.csv", nasPercentageCol = 0.75)
tabla1 <- reading("data/agudoOrinaAntLimpio.csv", nasPercentageCol = 0.75, nasRow = F)
source("scripts/preprocess.R")
source("scripts/preprocess.R")
source("scripts/preprocess.R")
tabla1 <- reading("data/agudoOrinaAntLimpio.csv", nasPercentageCol = 0.75, nasRow = F)
antro <- read.csv("data/datosAntropometricosCardiovasculares.csv", sep = ";", dec = ",")
source("scripts/preprocess.R")
tabla1 <- reading("data/agudoOrinaAntLimpio.csv", nasPercentageCol = 0.75, nasRow = F)
antro$Nº.Volunt.
antro$Nº.Volunt.[i]
antro$NÂº.Volunt.
source("scripts/preprocess.R")
tabla1 <- reading("data/agudoOrinaAntLimpio.csv", nasPercentageCol = 0.75, nasRow = F)
antro <- read.csv("data/datosAntropometricosCardiovasculares.csv", sep = ";", dec = ",")
source("scripts/preprocess.R")
tabla1 <- reading("data/agudoOrinaAntLimpio.csv", nasPercentageCol = 0.75, nasRow = F)
source("scripts/preprocess.R")
tabla1 <- reading("data/agudoOrinaAntLimpio.csv", nasPercentageCol = 0.75, nasRow = F)
write.csv(tabla1, "data/prueba.csv")
tabla1pp <- preprocessTables("data", "prueba.csv")
tabla1pp <- preprocessTables("data/", "prueba.csv")
View(tabla1)
View(tabla1)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.75, nasRow = F)
write.csv(tabla1, "data/prueba.csv")
tabla1pp <- preprocessTables("data/", "prueba.csv")
View(tabla1)
tabla1pp <- preprocessTables("data/", "prueba.csv")
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.75, nasRow = T)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.75, nasRow =F
)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 1, nasRow = F)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.25, nasRow = F)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.25, nasRow = T)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.1, nasRow = F)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.1, nasRow = T)
write.csv(tabla1, "data/prueba.csv")
tabla1pp <- preprocessTables("data/", "prueba.csv")
View(tabla1pp)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.1, nasRow = T)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 1, nasRow = F)
write.csv(tabla1, "data/prueba.csv")
tabla1pp <- preprocessTables("data/", "prueba.csv")
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.1, nasRow = F)
View(tabla1)
View(preprocessTables)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.1, nasRow = T)
write.csv(tabla1, "data/prueba.csv")
tabla1pp <- preprocessTables("data/", "prueba.csv")
tabla1pp
tabla1pp
View(tabla1pp)
View(tabla1pp$tablaSinEsc)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 1, nasRow = T)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.01, nasRow = T)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.001, nasRow = T)
View(tabla1)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.1, nasRow = T)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.3, nasRow = T)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.1, nasRow = T)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.5, nasRow = T)
tabla1 <- reading("data/cronicoOrinaAntLimpio.csv", nasPercentageCol = 0.3, nasRow = T)
source("scripts/preprocess.R")
source("scripts/boxplot.R")
orinaFlav <- removeOutliers(preprocessTables("../data/", "tablaOrinaFlav.csv")$tablaFactors)
orinaAnt <- removeOutliers(preprocessTables("../data/", "tablaorinaAnt.csv")$tablaFactors)
plasmaAnt <- removeOutliers(preprocessTables("../data/", "tablaplasmaAnt.csv")$tablaFactors)
plasmaFlav <- removeOutliers(preprocessTables("../data/", "tablaplasmaFlav_adjusted.csv")$tablaFactors)
orinaFlav <- removeOutliers(preprocessTables("data/", "tablaOrinaFlav.csv")$tablaFactors)
orinaAnt <- removeOutliers(preprocessTables("data/", "tablaorinaAnt.csv")$tablaFactors)
plasmaAnt <- removeOutliers(preprocessTables("data/", "tablaplasmaAnt.csv")$tablaFactors)
plasmaFlav <- removeOutliers(preprocessTables("data/", "tablaplasmaFlav_adjusted.csv")$tablaFactors)
source("scripts/preprocess.R")
orinaFlav <- removeOutliers(preprocessTables("data/", "tablaOrinaFlav.csv")$tablaFactors)
orinaAnt <- removeOutliers(preprocessTables("data/", "tablaorinaAnt.csv")$tablaFactors)
plasmaAnt <- removeOutliers(preprocessTables("data/", "tablaplasmaAnt.csv")$tablaFactors)
plasmaFlav <- removeOutliers(preprocessTables("data/", "tablaplasmaFlav_adjusted.csv")$tablaFactors)
write.csv(orinaFlav, file "data/limpiosOutliers/orinaFlavNoOutliers.csv")
write.csv(orinaFlav, file ="data/limpiosOutliers/orinaFlavNoOutliers.csv")
write.csv(orinaAnt, file ="data/limpiosOutliers/orinaAntNoOutliers.csv")
write.csv(plasmaAnt, file ="data/limpiosOutliers/plasmaAntNoOutliers.csv")
write.csv(plasmaFlav, file ="data/limpiosOutliers/plasmaFlavNoOutliers.csv")
source("../scripts/preprocess.R")
source("scripts/preprocess.R")
source("scripts/boxplots.R")
source("scripts/boxplots.R")
source("scripts/boxplots.R")
source("scripts/boxplots.R")
orinaFlav <- removeOutliers(preprocessTables("../data/", "tablaOrinaFlav.csv")$tablaFactors)
orinaFlav <- removeOutliers(preprocessTables("data/", "tablaOrinaFlav.csv")$tablaFactors)
orinaAnt <- removeOutliers(preprocessTables("data/", "tablaorinaAnt.csv")$tablaFactors)
plasmaAnt <- removeOutliers(preprocessTables("data/", "tablaplasmaAnt.csv")$tablaFactors)
plasmaFlav <- removeOutliers(preprocessTables("data/", "tablaplasmaFlav_adjusted.csv")$tablaFactors)
boxplotBias(orinaFlav)
bxp <- function(longTable, factore){
if (factore == "Tiempo") {
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("boxplot ", deparse(substitute(longtable))," ", factore))+
labs(y = "standarized value", x = "variables", legend = factore)
}
else{
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("boxplot ", deparse(substitute(longtable))," ", factore))+
labs(y = "standarized value", x = "variables", legend = factore)+
facet_wrap(~Tiempo)
}
}
tableMetMelt <- melt(orinaAnt %>% select (TFA.Gluc, Tiempo, Sexo, Endulzante),
id = c("Tiempo", "Sexo", "Endulzante"))
bxp(tableMetMelt, "Endulzante")
bxp <- function(longTable, factore){
if (factore == "Tiempo") {
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("boxplot ", deparse(substitute(longtable))," ", factore))+
labs(y = "standarized value", x = "variables", legend = factore)
}
else{
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("Sweetener:Time Anthocyanin-urine"))+
labs(y = "standarized value", x = "variables", legend = "Sweetener")+
facet_wrap(~Tiempo)
}
}
bxp(tableMetMelt, "Endulzante")
bxp <- function(longTable, factore){
if (factore == "Tiempo") {
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("boxplot ", deparse(substitute(longtable))," ", factore))+
labs(y = "standarized value", x = "variables", legend = factore)
}
else{
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("Sweetener:Time Anthocyanin-urine"))+
labs(y = "standarized value", x = "variables", legend = "Sweetener")+
scale_colour_discrete("Sweetener")+
facet_wrap(~Tiempo)
}
}
bxp(tableMetMelt, "Endulzante")
bxp <- function(longTable, factore){
if (factore == "Tiempo") {
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("boxplot ", deparse(substitute(longtable))," ", factore))+
labs(y = "standarized value", x = "variables", legend = factore)
}
else{
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("Sweetener:Time Anthocyanin-urine"))+
labs(y = "standarized value", x = "variables", col = "Sweetener")+
scale_colour_discrete("Sweetener")+
facet_wrap(~Tiempo)
}
}
bxp(tableMetMelt, "Endulzante")
bxp <- function(longTable, factore){
if (factore == "Tiempo") {
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("boxplot ", deparse(substitute(longtable))," ", factore))+
labs(y = "standarized value", x = "variables", legend = factore)
}
else{
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("Sweetener:Time Anthocyanin-urine"))+
labs(y = "standarized value", x = "variables", fill = "Sweetener")+
scale_colour_discrete("Sweetener")+
facet_wrap(~Tiempo)
}
}
bxp(tableMetMelt, "Endulzante")
tableMetMelt <- melt(orinaAnt %>% select (CA.Gluc,TFA.Gluc, Tiempo, Sexo, Endulzante),
id = c("Tiempo", "Sexo", "Endulzante"))
bxp(tableMetMelt, "Tiempo")
bxp <- function(longTable, factore){
if (factore == "Tiempo") {
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("Time Anthocyanin-Urine"))+
labs(y = "standarized value", x = "variables", fill = "Time")
}
else{
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("Sweetener:Time Anthocyanin-urine"))+
labs(y = "standarized value", x = "variables", fill = "Sweetener")+
scale_colour_discrete("Sweetener")+
facet_wrap(~Tiempo)
}
}
bxp(tableMetMelt, "Tiempo")
tableMetMelt <- melt(orinaFlav %>% select (ES, HE.G, NG, Tiempo, Sexo, Endulzante),
id = c("Tiempo", "Sexo", "Endulzante"))
bxp(tableMetMelt, "Endulzante")
bxp <- function(longTable, factore){
if (factore == "Tiempo") {
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("Time Anthocyanin-Urine"))+
labs(y = "standarized value", x = "variables", fill = "Time")
}
else{
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("Sweetener:Time Flavanones-urine"))+
labs(y = "standarized value", x = "variables", fill = "Sweetener")+
scale_colour_discrete("Sweetener")+
facet_wrap(~Tiempo)
}
}
bxp(tableMetMelt, "Endulzante")
plasmaFlav
tableMetMelt <- melt(plasmaFlav %>% select (ES, Tiempo, Sexo, Endulzante),
id = c("Tiempo", "Sexo", "Endulzante"))
bxp <- function(longTable, factore){
if (factore == "Tiempo") {
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("Time Anthocyanin-Urine"))+
labs(y = "standarized value", x = "variables", fill = "Time")
}
else{
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("Sweetener:Time Flavanones-plasma"))+
labs(y = "standarized value", x = "variables", fill = "Sweetener")+
scale_colour_discrete("Sweetener")+
facet_wrap(~Tiempo)
}
}
bxp(tableMetMelt, "Endulzante")
bxp <- function(longTable, factore){
if (factore == "Tiempo") {
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("Time Anthocyanin-Urine"))+
labs(y = "standarized value", x = "variables", fill = "Time")
}
else{
ggplot(longTable, aes(factor(variable,
level = unique(longTable$variable)),as.numeric(value),
fill=factor(longTable[,factore]))) +
geom_boxplot()+
ggtitle(paste("Sweetener:Time Flavanoids-plasma"))+
labs(y = "standarized value", x = "variables", fill = "Sweetener")+
scale_colour_discrete("Sweetener")+
facet_wrap(~Tiempo)
}
}
bxp(tableMetMelt, "Endulzante")

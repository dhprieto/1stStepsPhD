pam_clusters <- pam(x = tabla, k = nclust, metric = "manhattan")
p2 <- fviz_cluster(object = pam_clusters, data = tabla, ellipse.type = "t",
repel = TRUE) +
theme_bw() +
labs(title = "Resultados clustering PAM") +
theme(legend.position = "none")
# fuzzy clustering
fuzzy_cluster <- fanny(x = tabla, k = nclust, diss = FALSE, metric = "manhattan", stand = FALSE)
p3 <- fviz_cluster(object = fuzzy_cluster, repel = TRUE, ellipse.type = "norm",
pallete = "jco") + theme_bw() + labs(title = "Fuzzy Cluster plot")
# Hierarchical clustering
p4 <- fviz_dend(x = hclust(get_dist(tabla, method = "manhattan")), k = nclust, k_colors = "jco",
show_labels = T, main = paste("Datos ", nombreTabla))
model_clustering <- Mclust(tabla)
p5 <- fviz_mclust(object = model_clustering, what = "BIC", pallete = "jco") +
scale_x_discrete(limits = c(1:10))
p6 <- fviz_mclust(model_clustering, what = "classification", geom = "point",
pallete = "jco")
print(p1)
print(p2)
print(p3)
print(p4)
print(p5)
print(p6)
return(model_clustering)
}
model_clustering_OFT_0 <- clusterVarios(orinaFlavNum_0, 5)
model_clustering_OFT_F <- clusterVarios(orinaFlavNum_F, 8)
model_clustering_OFT_0 <- Mclust(orinaFlavNum_0)
model_clustering_OFT_F <- Mclust(orinaFlavNum_F)
orinaFlavNum_0_clusters <- cbind(orinaFlavNum_0, model_clustering_OFT_0$classification)
orinaFlavNum_0_clusters <- cbind(orinaFlavNum_0, clusters = model_clustering_OFT_0$classification)
orinaFlavNum_F_clusters <- cbind(orinaFlavNum_F, clusters = model_clustering_OFT_F$classification)
boxplot(subset(orinaFlavNum_0_clusters, cluster==1, select=-cluster))
boxplot(subset(orinaFlavNum_0_clusters, cluster==2, select=-cluster))
boxplot(subset(orinaFlavNum_0_clusters, cluster==3, select=-cluster))
boxplot(subset(orinaFlavNum_0_clusters, clusters==1, select=-clusters))
boxplot(subset(orinaFlavNum_0_clusters, clusters==2, select=-clusters))
boxplot(subset(orinaFlavNum_0_clusters, clusters==3, select=-clusters))
boxplot(subset(orinaFlavNum_F_clusters, clusters==1, select=-clusters))
boxplot(subset(orinaFlavNum_F_clusters, clusters==2, select=-clusters))
boxplot(subset(orinaFlavNum_F_clusters, clusters==3, select=-clusters))
boxplot(subset(orinaFlavNum_F_clusters, clusters==4, select=-clusters))
boxplot(subset(orinaFlavNum_F_clusters, clusters==5, select=-clusters))
orinaFlavNum_0
orinaFlav_Factors
orinaFlav_Factors_T0 <- subset(orinaFlav_Factors, Tiempo == "0")
orinaFlav_Factors_TF <- subset(orinaFlav_Factors, Tiempo == "Final")
orinaFlavNum_0_clusters <- cbind(orinaFlavNum_0, clusters = model_clustering_OFT_0$classification,
Endulzante = orinaFlav_Factors_T0$Endulzante,
Sexo = orinaFlav_Factors_T0$Sexo)
orinaFlavNum_F_clusters <- cbind(orinaFlavNum_F, clusters = model_clustering_OFT_F$classification,
Endulzante = orinaFlav_Factors_TF$Endulzante,
Sexo = orinaFlav_Factors_TF$Sexo)
boxplot(subset(orinaFlavNum_0_clusters, clusters==1, select=-clusters))
boxplot(subset(orinaFlavNum_0_clusters, clusters==2, select=-clusters))
boxplot(subset(orinaFlavNum_0_clusters, clusters==3, select=-clusters))
boxplot(subset(orinaFlavNum_F_clusters, clusters==1, select=-clusters))
boxplot(subset(orinaFlavNum_F_clusters, clusters==2, select=-clusters))
boxplot(subset(orinaFlavNum_F_clusters, clusters==3, select=-clusters))
boxplot(subset(orinaFlavNum_F_clusters, clusters==4, select=-clusters))
boxplot(subset(orinaFlavNum_F_clusters, clusters==5, select=-clusters))
# Change box plot colors by groups
ggplot(orinaFlavNum_0_clusters, aes(fill=Endulzante)) +
geom_boxplot()
# Change box plot colors by groups
ggplot(orinaFlavNum_0_clusters) +
geom_boxplot()
# Change box plot colors by groups
ggplot(orinaFlavNum_0_clusters) +
geom_boxplot()
# Change box plot colors by groups
ggplot(orinaFlavNum_0_clusters, aes(x=ind, y=values, fill=Endulzante)) +
geom_boxplot()
stack(orinaAntNum_F)
stack(orinaFlav_Factors_T0)
# Boxplot a partir de un data frame
ggplot(data = stack(orinaFlav_Factors_T0), aes(x = ind, y = values)) +
stat_boxplot(geom = "errorbar", # Bigotes
width = 0.2) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552", # Colores
alpha = 0.9, outlier.colour = "red") +
scale_y_continuous(name = "Peso") +  # Etiqueta de la variable continua
scale_x_discrete(name = "Alimentación") +        # Etiqueta de los grupos
ggtitle("Boxplot a partir de un data frame") +   # Título del plot
theme(axis.line = element_line(colour = "black", # Personalización del tema
size = 0.25))
# Boxplot a partir de un data frame
ggplot(data = stack(orinaFlav_Factors_T0), aes(x = ind, y = values, fill = Sexo)) +
stat_boxplot(geom = "errorbar", # Bigotes
width = 0.2) +
geom_boxplot(fill = "#4271AE", colour = "#1F3552", # Colores
alpha = 0.9, outlier.colour = "red") +
scale_y_continuous(name = "Peso") +  # Etiqueta de la variable continua
scale_x_discrete(name = "Alimentación") +        # Etiqueta de los grupos
ggtitle("Boxplot a partir de un data frame") +   # Título del plot
theme(axis.line = element_line(colour = "black", # Personalización del tema
size = 0.25))
orinaFlav_Factors_T0
ncol(orinaFlav_Factors_T0)
# Change box plot colors by groups
ggplot(orinaFlavNum_0_clusters, aes(x=col_name, y=value, fill=Endulzante)) +
geom_boxplot()
boxplot(subset(orinaFlavNum_0_clusters, clusters==1, select=-clusters))
ggplot(data = stack(orinaFlavNum_0_clusters), aes(x=ind,y=value, label = value, color=group))+
geom_boxplot(width=.5)+
# jittered text with geom_text
geom_text(check_overlap = TRUE,
position=position_jitter(width=0.15))+
theme(legend.position="none")
install.packages("car")
car::Boxplot(orinaFlavNum_0_clusters)
orinaFlav_Factors_T0 <- subset(orinaFlav_Factors, Tiempo == "0")
orinaFlav <- preprocessTablas("data/", "cronicoOrinaFlav_Antro.csv")
orinaFlavFactors <- orinaFlav$tablaFactors
library(dplyr)
library(scales)
library(purrr)
library(ggpubr)
library(factoextra)
library(GGally)
library(plotly)
library(FactoMineR)
library(cluster)
library(mclust)
preprocessTablas <- function(root, nombreTabla) {
# Getting data ready
rootTabla <- paste0(root, nombreTabla)
tabla <- read.csv(rootTabla)
# Make factors of categorical features, deltaing intial-final features
tabla$Endulzante <- factor(tabla$Endulzante, levels = c("SA", "ST", "SU"))
tabla$Sexo <- factor(tabla$Sexo, levels = c("HOMBRE", "MUJER"))
tabla$Tiempo <- factor(tabla$Tiempo, levels = c("0", "Final"))
tabla$numVol <- factor(tabla$numVol)
tabla$Delta.IRCV <- tabla$IRCV.Final - tabla$IRCV.inicial
tabla$Delta.Bpmin <- tabla$Bpmin.final - tabla$Bpmin.inicial
tabla$Delta.Bpmax <- tabla$Bpmax.final - tabla$Bpmax.inicial
tabla$Delta.Frec <- tabla$Frec.final - tabla$Frec.inicial
# Removing of trivial redundant and useless features
set.A <- subset(tabla, select =-c(X.1, X, Peso.inicial, Peso.final, Talla, IMC.Inicial, IMC.Final,
Grasa.inicial, Grasa.final, IRCV.Final, IRCV.inicial, Bpmin.final,
Bpmin.inicial, Bpmax.final, Bpmax.inicial, Frec.final, Frec.inicial))
# Only numerical features
set.A_num <- subset(set.A, select=-c(Endulzante, Sexo, Tiempo, numVol))
#Rescaling, can use "set.A_rescaled <- scale(set.A_num)" too
set.A_rescaled <- set.A_num %>% mutate_each_(list(~rescale(.) %>% as.vector),
vars = colnames(set.A_num))
set.A_factors <- cbind(set.A_rescaled, Endulzante = set.A$Endulzante,
Tiempo = set.A$Tiempo, Sexo = set.A$Sexo, numVol = set.A$numVol)
tabla_Tiempo <- subset(tabla, select=-c(Endulzante, Sexo))
tabla_Tiempo0 <- subset(tabla_Tiempo, Tiempo == "0", select = -Tiempo)
tabla_TiempoF <- subset(tabla_Tiempo, Tiempo == "Final", select = -Tiempo)
tabla_Sexo <- subset(tabla, select=-c(Endulzante, Tiempo))
tabla_SexoM <- subset(tabla_Sexo, Sexo == "HOMBRE", select = -Sexo)
tabla_SexoF <- subset(tabla_Sexo, Sexo == "MUJER", select = -Sexo)
tabla_Endulzante <- subset(tabla, select=-c(Sexo, Tiempo))
tabla_EndulzanteSA <- subset(tabla_Endulzante, Endulzante == "SA", select = -Endulzante)
tabla_EndulzanteSU <- subset(tabla_Endulzante, Endulzante == "SU", select = -Endulzante)
tabla_EndulzanteST <- subset(tabla_Endulzante, Endulzante == "ST", select = -Endulzante)
tabla_0xM <- subset(tabla, Tiempo == "0" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante))
tabla_0xF <- subset(tabla, Tiempo == "0" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante))
tabla_FxM <- subset(tabla, Tiempo == "Final" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante))
tabla_FxF <- subset(tabla, Tiempo == "Final" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSAx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSAxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSAx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSAxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSTx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSTxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="ST"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSTx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSTxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSUx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSUxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSUx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSUxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
return(list(tablaFactors = set.A_factors, tablaNum = set.A_rescaled,
tabla_Tiempo, tabla_Tiempo0,
tabla_TiempoF, tabla_Sexo,
tabla_SexoM, tabla_SexoF,
tabla_Endulzante, tabla_EndulzanteSA,
tabla_EndulzanteSU, tabla_EndulzanteST,
tabla_0xM,tabla_0xF, tabla_FxM, tabla_FxF,
tabla_MxSAx0, tabla_MxSAxF, tabla_FxSAx0,
tabla_FxSAxF, tabla_MxSTx0, tabla_MxSTxF,
tabla_FxSTx0, tabla_FxSTxF, tabla_MxSUx0,
tabla_MxSUxF, tabla_FxSUx0, tabla_FxSUxF))
}
checkCluster <- function(tabla){
nombreTabla <- deparse(quote(tabla))
set.A_rescaled <- tabla
# Validación de método de clustering
## Manual
datos_simulados <- map_df(set.A_rescaled,
.f = function(x){runif(n = length(x),
min = min(x),
max = max(x))
}
)
pca_datos_A      <- prcomp(set.A_rescaled)
pca_datos_simulados <- prcomp(datos_simulados)
p1 <- fviz_pca_ind(X = pca_datos_A,
geom = "point", title = paste("PCA - Datos ", nombreTabla),
pallete = "jco") +
theme_bw() + theme(legend.position = "bottom")
p2 <- fviz_pca_ind(X = pca_datos_simulados, geom = "point",
title = paste("PCA - datos simulados ",nombreTabla), pallete = "jco") +
theme_bw() + theme(legend.position = "bottom")
print(ggarrange(p1, p2), common.legend = TRUE)
dist_datos_A      <- get_dist(set.A_rescaled, method = "manhattan")
dist_datos_simulados <- get_dist(datos_simulados, method = "manhattan")
p7 <- fviz_dist(dist.obj = dist_datos_A, show_labels = FALSE) +
labs(title = paste("Datos ", nombreTabla)) + theme(legend.position = "bottom")
p8 <- fviz_dist(dist.obj = dist_datos_simulados, show_labels = FALSE) +
labs(title = paste("Datos simulados ", nombreTabla)) + theme(legend.position = "bottom")
print(ggarrange(p7, p8))
print(fviz_nbclust(set.A_rescaled, kmeans, method="wss"))
print(fviz_nbclust(x = set.A_rescaled, FUNcluster = pam, method = "wss", k.max = 15,
diss = get_dist(set.A_rescaled, method = "manhattan")))
}
clusterVarios <- function (tabla, nclust) {
nombreTabla <- deparse(quote(tabla))
### Aplicamos clustering
# K-means clustering
set.seed(123)
km_datos_A <- kmeans(x = tabla, centers = nclust)
p1 <- fviz_cluster(object = km_datos_A, data = tabla,
ellipse.type = "norm", geom = "point", main = paste("Resultados clustering kmeans ",
nombreTabla),
stand = FALSE, palette = "jco", show.legend = T)
# PAM clustering
pam_clusters <- pam(x = tabla, k = nclust, metric = "manhattan")
p2 <- fviz_cluster(object = pam_clusters, data = tabla, ellipse.type = "t",
repel = TRUE) +
theme_bw() +
labs(title = "Resultados clustering PAM") +
theme(legend.position = "none")
# fuzzy clustering
fuzzy_cluster <- fanny(x = tabla, k = nclust, diss = FALSE, metric = "manhattan", stand = FALSE)
p3 <- fviz_cluster(object = fuzzy_cluster, repel = TRUE, ellipse.type = "norm",
pallete = "jco") + theme_bw() + labs(title = "Fuzzy Cluster plot")
# Hierarchical clustering
p4 <- fviz_dend(x = hclust(get_dist(tabla, method = "manhattan")), k = nclust, k_colors = "jco",
show_labels = T, main = paste("Datos ", nombreTabla))
model_clustering <- Mclust(tabla)
p5 <- fviz_mclust(object = model_clustering, what = "BIC", pallete = "jco") +
scale_x_discrete(limits = c(1:10))
p6 <- fviz_mclust(model_clustering, what = "classification", geom = "point",
pallete = "jco")
print(p1)
print(p2)
print(p3)
print(p4)
print(p5)
print(p6)
return(model_clustering)
}
pcaVarios<- function(tabla, nombreTabla){
#nombreTabla <- deparse(quote(tabla))
tabla_Tiempo <- subset(tabla, select=-c(Endulzante, Sexo))
tabla_Tiempo0 <- subset(tabla_Tiempo, Tiempo == "0", select = -Tiempo)
tabla_TiempoF <- subset(tabla_Tiempo, Tiempo == "Final", select = -Tiempo)
tabla_Sexo <- subset(tabla, select=-c(Endulzante, Tiempo))
tabla_SexoM <- subset(tabla_Sexo, Sexo == "HOMBRE", select = -Sexo)
tabla_SexoF <- subset(tabla_Sexo, Sexo == "MUJER", select = -Sexo)
tabla_Endulzante <- subset(tabla, select=-c(Sexo, Tiempo))
tabla_EndulzanteSA <- subset(tabla_Endulzante, Endulzante == "SA", select = -Endulzante)
tabla_EndulzanteSU <- subset(tabla_Endulzante, Endulzante == "SU", select = -Endulzante)
tabla_EndulzanteST <- subset(tabla_Endulzante, Endulzante == "ST", select = -Endulzante)
# PCA Tiempo
pca_datos_A <- PCA(tabla_Tiempo0, scale.unit = F)
print(fviz_contrib(pca_datos_A, choice="var", title = paste("Importancia variables dim 1 PCA Tiempo 0 ",
nombreTabla)))
print(fviz_contrib(pca_datos_A, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Tiempo 0 ",
nombreTabla)))
pca_datos_B <- PCA(tabla_TiempoF)
print(fviz_contrib(pca_datos_B, choice="var", axes=1, title = paste("Importancia variables dim 1 PCA Tiempo Final "
,nombreTabla)))
print(fviz_contrib(pca_datos_B, choice="var", axes=2, title = paste("Importancia variables dim 2 PCA Tiempo Final "
,nombreTabla)))
# PCA Sexo
pca_datos_C <- PCA(tabla_SexoM,scale.unit = F)
print(fviz_contrib(pca_datos_C, choice="var", title = paste("Importancia variables dim 1 PCA Sexo M ",
nombreTabla)))
print(fviz_contrib(pca_datos_C, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Sexo M ",
nombreTabla)))
pca_datos_D <- PCA(tabla_SexoF,scale.unit = F)
print(fviz_contrib(pca_datos_D, choice="var", title = paste("Importancia variables dim 1 PCA Sexo F ",
nombreTabla)))
print(fviz_contrib(pca_datos_D, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Sexo F",
nombreTabla)))
# PCA Endulzantes
pca_datos_E      <- PCA(tabla_EndulzanteSA, scale.unit = F)
print(fviz_contrib(pca_datos_E, choice="var", title = paste("Importancia variables dim 1 PCA Endulzante SA ",
nombreTabla)))
print(fviz_contrib(pca_datos_E, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Endulzante SA ",
nombreTabla)))
pca_datos_F      <- PCA(tabla_EndulzanteSU, scale.unit = F)
print(fviz_contrib(pca_datos_F, choice="var", title = paste("Importancia variables dim 1 PCA Endulzante SU ",
nombreTabla)))
print(fviz_contrib(pca_datos_F, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Endulzante SU ",
nombreTabla)))
pca_datos_G      <- PCA(tabla_EndulzanteST, scale.unit = F)
print(fviz_contrib(pca_datos_G, choice="var", title = paste("Importancia variables dim 1 PCA Endulzante ST ",
nombreTabla)))
print(fviz_contrib(pca_datos_G, choice="var", axes = 2, title = paste("Importancia variables dim 2 PCA Endulzante ST ",
nombreTabla)))
# PCA TiempoxSexo
tabla_0xM <- subset(tabla, Tiempo == "0" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante))
tabla_0xF <- subset(tabla, Tiempo == "0" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante))
tabla_FxM <- subset(tabla, Tiempo == "Final" & Sexo == "HOMBRE", select =-c(Tiempo, Sexo, Endulzante))
tabla_FxF <- subset(tabla, Tiempo == "Final" & Sexo == "MUJER", select =-c(Tiempo, Sexo, Endulzante))
pca_0xM <- PCA(tabla_0xM, scale.unit=F)
print(fviz_contrib(pca_0xM, choice="var", title = paste("ContribVar dim1 Tiempo 0 Sexo M", nombreTabla)))
print(fviz_contrib(pca_0xM, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo 0 Sexo M",
nombreTabla)))
pca_0xF <- PCA(tabla_0xF, scale.unit=F)
print(fviz_contrib(pca_0xF, choice="var", title = paste("ContribVar dim1 Tiempo 0 Sexo F", nombreTabla)))
print(fviz_contrib(pca_0xF, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo 0 Sexo F",
nombreTabla)))
pca_FxM <- PCA(tabla_FxM, scale.unit=F)
print(fviz_contrib(pca_FxM, choice="var", title = paste("ContribVar dim1 Tiempo F Sexo M", nombreTabla)))
print(fviz_contrib(pca_FxM, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo F Sexo M",
nombreTabla)))
pca_FxF <- PCA(tabla_FxF, scale.unit=F)
print(fviz_contrib(pca_FxF, choice="var", title = paste("ContribVar dim1 Tiempo F Sexo F", nombreTabla)))
print(fviz_contrib(pca_FxF, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo F Sexo F",
nombreTabla)))
print(fviz_contrib(pca_0xM, choice="var", axes = 2, title = paste("ContribVar dim2 Tiempo 0 Sexo M",
nombreTabla)))
# PCA TiempoxEndulzante
# PCA SexoxEndulzante
tabla_MxSAx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSAxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SA" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSAx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSAxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="SA"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSTx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSTxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="ST"& Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSTx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSTxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="ST" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSUx0 <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_MxSUxF <- subset(tabla, Sexo == "HOMBRE" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSUx0 <- subset(tabla, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "0",
select =-c(Tiempo, Sexo, Endulzante))
tabla_FxSUxF <- subset(tabla, Sexo == "MUJER" & Endulzante =="SU" & Tiempo == "Final",
select =-c(Tiempo, Sexo, Endulzante))
pca_MxSAx0 <- PCA(tabla_MxSAx0, scale.unit=F)
print(fviz_contrib(pca_MxSAx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SA Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSAx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SA Tiempo 0",
nombreTabla)))
pca_MxSAxF <- PCA(tabla_MxSAxF, scale.unit=F)
print(fviz_contrib(pca_MxSAxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SA Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSAxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SA Tiempo F",
nombreTabla)))
pca_FxSAx0 <- PCA(tabla_FxSAx0, scale.unit=F)
print(fviz_contrib(pca_FxSAx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SA Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_FxSAx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SA Tiempo 0",
nombreTabla)))
pca_FxSAxF <- PCA(tabla_FxSAxF, scale.unit=F)
print(fviz_contrib(pca_FxSAxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SA Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_FxSAxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SA Tiempo F",
nombreTabla)))
pca_MxSTx0 <- PCA(tabla_MxSTx0, scale.unit=F)
print(fviz_contrib(pca_MxSTx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante ST Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSTx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante ST Tiempo 0",
nombreTabla)))
pca_MxSTxF <- PCA(tabla_MxSTxF, scale.unit=F)
print(fviz_contrib(pca_MxSTxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante ST Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSTxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante ST Tiempo F",
nombreTabla)))
pca_FxSTx0 <- PCA(tabla_FxSTx0, scale.unit=F)
print(fviz_contrib(pca_FxSTx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante ST Tiempo 0", nombreTabla)))
print(fviz_contrib(pca_FxSTx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante ST Tiempo 0",
nombreTabla)))
pca_FxSTxF <- PCA(tabla_FxSTxF, scale.unit=F)
print(fviz_contrib(pca_FxSTxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante ST Tiempo F", nombreTabla)))
print(fviz_contrib(pca_FxSTxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante ST Tiempo F",
nombreTabla)))
pca_MxSUx0 <- PCA(tabla_MxSUx0, scale.unit=F)
print(fviz_contrib(pca_MxSUx0, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SU Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_MxSUx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SU Tiempo 0",
nombreTabla)))
pca_MxSUxF <- PCA(tabla_MxSUxF, scale.unit=F)
print(fviz_contrib(pca_MxSUxF, choice="var", title = paste("ContribVar dim1 Sexo M Endulzante SU Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_MxSUxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo M Endulzante SU Tiempo F",
nombreTabla)))
pca_FxSUx0 <- PCA(tabla_FxSUx0, scale.unit=F)
print(fviz_contrib(pca_FxSUx0, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SU Tiempo 0",
nombreTabla)))
print(fviz_contrib(pca_FxSUx0, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SU Tiempo 0",
nombreTabla)))
pca_FxSUxF <- PCA(tabla_FxSUxF, scale.unit=F)
print(fviz_contrib(pca_FxSUxF, choice="var", title = paste("ContribVar dim1 Sexo F Endulzante SU Tiempo F",
nombreTabla)))
print(fviz_contrib(pca_FxSUxF, choice="var", axes = 2, title = paste("ContribVar dim2 Sexo F Endulzante SU Tiempo F",
nombreTabla)))
}
orinaFlav <- preprocessTablas("data/", "cronicoOrinaFlav_Antro.csv")
orinaFlavFactors <- orinaFlav$tablaFactors
orinaFlavNum <- orinaFlav$tablaNum
orinaFlavNum_0 <- subset(orinaFlavNumTiempo, Tiempo == "0", select = -Tiempo)
orinaFlavNum_F <- subset(orinaFlavNumTiempo, Tiempo == "Final", select = -Tiempo)
orinaFlav_Factors_T0 <- subset(orinaFlav_Factors, Tiempo == "0")
orinaFlavFactors <- orinaFlav$tablaFactors
orinaFlavNum <- orinaFlav$tablaNum
orinaFlavNum_0 <- subset(orinaFlavNumTiempo, Tiempo == "0", select = -Tiempo)
orinaFlavNum_0 <- subset(orinaFlavNumFactors, Tiempo == "0", select = -Tiempo)
orinaFlavNum_F <- subset(orinaFlavNumFactors, Tiempo == "Final", select = -Tiempo)
orinaFlavNum_0 <- subset(orinaFlavFactors, Tiempo == "0", select = -Tiempo)
orinaFlavNum_F <- subset(orinaFlavFactors, Tiempo == "Final", select = -Tiempo)
model_clustering_OFT_0 <- Mclust(orinaFlavNum_0)
model_clustering_OFT_F <- Mclust(orinaFlavNum_F)
orinaFlavNum_0_clusters <- cbind(orinaFlavNum_0, clusters = model_clustering_OFT_0$classification,
Endulzante = orinaFlav_Factors_T0$Endulzante,
Sexo = orinaFlav_Factors_T0$Sexo)
orinaFlav_Factors_T0 <- subset(orinaFlavFactors, Tiempo == "0")
orinaFlav_Factors_TF <- subset(orinaFlavFactors, Tiempo == "Final")
model_clustering_OFT_0 <- Mclust(orinaFlavNum_0)
model_clustering_OFT_F <- Mclust(orinaFlavNum_F)
orinaFlavNum_0_clusters <- cbind(orinaFlavNum_0, clusters = model_clustering_OFT_0$classification,
Endulzante = orinaFlav_Factors_T0$Endulzante,
Sexo = orinaFlav_Factors_T0$Sexo)
orinaFlavNum_F_clusters <- cbind(orinaFlavNum_F, clusters = model_clustering_OFT_F$classification,
Endulzante = orinaFlav_Factors_TF$Endulzante,
Sexo = orinaFlav_Factors_TF$Sexo)
car::Boxplot(orinaFlavNum_0_clusters)
orinaFlavNum_0_clusters <- cbind(orinaFlavNum_0, clusters = model_clustering_OFT_0$classification,
Endulzante = orinaFlav_Factors_T0$Endulzante)
orinaFlavNum_F_clusters <- cbind(orinaFlavNum_F, clusters = model_clustering_OFT_F$classification,
Endulzante = orinaFlav_Factors_TF$Endulzante)
car::Boxplot(orinaFlavNum_0_clusters)
orinaFlavNum_0_clusters <- cbind(orinaFlavNum_0, clusters = model_clustering_OFT_0$classification)
#Endulzante = orinaFlav_Factors_T0$Endulzante,
#Sexo = orinaFlav_Factors_T0$Sexo)
orinaFlavNum_F_clusters <- cbind(orinaFlavNum_F, clusters = model_clustering_OFT_F$classification)
# Change box plot colors by groups
ggplot(orinaFlavNum_0_clusters, aes(x=col_name, y=value, fill=Endulzante)) +
geom_boxplot()
car::Boxplot(orinaFlavNum_0_clusters)
boxplot(subset(orinaFlavNum_0_clusters, clusters==1, select=-c(clusters,numVol))
)
orinaFlavNum_0_clusters$Endulzante
orinaFlavNum_0_clusters <- factor(orinaFlavNum_0_clusters$Endulzante, levels (SA = 0, ST = 0.5, SU = 1))
orinaFlavNum_0_clusters <- factor(orinaFlavNum_0_clusters$Endulzante, levels (0, 0.5, 1))
orinaFlavNum_0_clusters <- factor(orinaFlavNum_0_clusters$Endulzante, levels = c(SA = 0, ST = 0.5, SU=1))
orinaFlavNum_0_clusters <- cbind(orinaFlavNum_0, clusters = model_clustering_OFT_0$classification)
orinaFlavNum_0_clusters$Endulzante <- factor(orinaFlavNum_0_clusters$Endulzante, levels = c(SA = 0, ST = 0.5, SU=1))
orinaFlavNum_0_clusters$Endulzante
as.numeric(orinaFlavNum_0_clusters$Endulzante)
orinaFlavNum_0_clusters <- cbind(orinaFlavNum_0, clusters = model_clustering_OFT_0$classification)
as.numeric(orinaFlavNum_0_clusters$Endulzante)
orinaFlavNum_0_clusters$Endulzante <- scale(as.numeric(orinaFlavNum_0_clusters$Endulzante))
boxplot(subset(orinaFlavNum_0_clusters, clusters==1, select=-c(clusters,numVol)))
orinaFlavNum_0_clusters <- cbind(orinaFlavNum_0, clusters = model_clustering_OFT_0$classification)
#Endulzante = orinaFlav_Factors_T0$Endulzante,
#Sexo = orinaFlav_Factors_T0$Sexo)
orinaFlavNum_F_clusters <- cbind(orinaFlavNum_F, clusters = model_clustering_OFT_F$classification)
orinaFlavNum_0_clusters$Endulzante <- rescale(as.numeric(orinaFlavNum_0_clusters$Endulzante))
boxplot(subset(orinaFlavNum_0_clusters, clusters==1, select=-c(clusters,numVol)))
orinaFlavNum_0_clusters$Sexo <- rescale(as.numeric(orinaFlavNum_0_clusters$Sexo))
boxplot(subset(orinaFlavNum_0_clusters, clusters==1, select=-c(clusters,numVol)))
boxplot(subset(orinaFlavNum_0_clusters, clusters==2, select=-clusters))
boxplot(subset(orinaFlavNum_0_clusters, clusters==2, select=-c(clusters,numVol)))
boxplot(subset(orinaFlavNum_0_clusters, clusters==1, select=-c(clusters,numVol)))
boxplot(subset(orinaFlavNum_0_clusters, clusters==2, select=-c(clusters,numVol)))
boxplot(subset(orinaFlavNum_0_clusters, clusters==3, select=-c(clusters,numVol)))
boxplot(subset(orinaFlavNum_0_clusters, clusters==3, select=-c(clusters,numVol)))
View(orinaFlavNum_0_clusters)
View(orinaFlavNum_F_clusters)
boxplot(subset(orinaFlavNum_F, cluster==1, select=-cluster))
boxplot(subset(orinaFlavNum_F_clusters, clusters==1, select=-c(clusters,numVol)))
boxplot(subset(orinaFlavNum_F_clusters, clusters==2, select=-c(clusters,numVol)))
boxplot(subset(orinaFlavNum_F_clusters, clusters==3, select=-c(clusters,numVol)))
orinaFlavNum_F_clusters$Endulzante <- rescale(as.numeric(orinaFlavNum_F_clusters$Endulzante))
orinaFlavNum_F_clusters$Sexo <- rescale(as.numeric(orinaFlavNum_F_clusters$Sexo))
boxplot(subset(orinaFlavNum_F_clusters, clusters==1, select=-c(clusters,numVol)))
boxplot(subset(orinaFlavNum_F_clusters, clusters==2, select=-c(clusters,numVol)))
boxplot(subset(orinaFlavNum_F_clusters, clusters==3, select=-c(clusters,numVol)))
orinaFlavNum_0
orinaFlav <- preprocessTablas("data/", "cronicoOrinaFlav_Antro.csv")
orinaFlavFactors <- orinaFlav$tablaFactors
orinaFlavNum <- orinaFlav$tablaNum
View(orinaFlav)
